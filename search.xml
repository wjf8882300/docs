<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>clickhouse安装</title>
    <url>/2021/12/23/clickhouse%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h4 id="1-安装服务端">1.安装服务端</h4>
<h5 id="1-1-docker安装">1.1 docker安装</h5>
<pre class="line-numbers language-none"><code class="language-none">docker run -d --restart&#x3D;always \
--name clickhouse-server \
-p 8123:8123 -p 9000:9000 \
--ulimit nofile&#x3D;262144:262144 \
-v &#x2F;mnt&#x2F;clickhouse:&#x2F;var&#x2F;lib&#x2F;clickhouse \
-v &#x2F;mnt&#x2F;clickhouse&#x2F;config.xml:&#x2F;etc&#x2F;clickhouse-server&#x2F;config.xml \
-v &#x2F;mnt&#x2F;clickhouse&#x2F;users.xml:&#x2F;etc&#x2F;clickhouse-server&#x2F;users.xml \
yandex&#x2F;clickhouse-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>/mnt/clickhouse/config.xml：系统配置文件</li>
<li>/mnt/clickhouse/users.xml：用户配置文件</li>
</ul>
<h5 id="1-2-修改用户名">1.2 修改用户名</h5>
<p>默认为default，且没有密码，</p>
<p>生成密码密文（明文：wRZOGtaYIykiVDJX， 密文：12b4efbcc6f2baa1a35f7b4dc1d946c86316d651d115796328b6013aa806b45c）</p>
<pre class="line-numbers language-none"><code class="language-none">PASSWORD&#x3D;&quot;wRZOGtaYIykiVDJX&quot;; echo &quot;$PASSWORD&quot;; echo -n &quot;$PASSWORD&quot; | sha256sum | tr -d &#39;-&#39;
 
# 输出
wRZOGtaYIykiVDJX
12b4efbcc6f2baa1a35f7b4dc1d946c86316d651d115796328b6013aa806b45c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改users.xml，然后重启下clickhouse-server</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;users&gt;
    &lt;root&gt;
        &lt;!-- 此处保存为密文，用的时候用明文 --&gt;
        &lt;password_sha256_hex&gt;12b4efbcc6f2baa1a35f7b4dc1d946c86316d651d115796328b6013aa806b45c&lt;&#x2F;password_sha256_hex&gt;
        &lt;networks&gt;
            &lt;ip&gt;::&#x2F;0&lt;&#x2F;ip&gt;
        &lt;&#x2F;networks&gt;
        &lt;profile&gt;default&lt;&#x2F;profile&gt;
        &lt;quota&gt;default&lt;&#x2F;quota&gt;
        &lt;access_management&gt;1&lt;&#x2F;access_management&gt;
    &lt;&#x2F;root&gt;
&lt;&#x2F;users&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="2-安装客户端">2. 安装客户端</h4>
<h5 id="2-1-docker安装官方客户端">2.1 docker安装官方客户端</h5>
<p>客户端直接运行即可</p>
<pre class="line-numbers language-none"><code class="language-none">docker run -it yandex&#x2F;clickhouse-client -h 172.19.99.154 -u root --password wRZOGtaYIykiVDJX<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h5 id="2-2-安装redash客户端">2.2 安装redash客户端</h5>
<p>镜像：redash-master_worker、redash-master_scheduler 需要自行编译<br>
1）获取源代码：<a href="https://github.com/getredash/redash">https://github.com/getredash/redash</a><br>
2）源码下有docker-compose.yml，可以直接通过docker-compose up -d编译<br>
3）编译之后再安装nodejs和yarn，然后执行yarn --frozen-lockfile（这一步有诸多问题，可以跳过）<br>
前两步编译后可以得到redash-master_worker、redash-master_scheduler两个镜像，用于后续。</p>
<p>docker-compose.yml</p>
<pre class="line-numbers language-none"><code class="language-none"># This configuration file is for the **development** setup.
# For a production example please refer to getredash&#x2F;setup repository on GitHub.
version: &quot;2.2&quot;
x-redash-service: &amp;redash-service
  build:
    context: .
    args:
      skip_frontend_build: &quot;true&quot;
  volumes:
    - .:&#x2F;app
x-redash-environment: &amp;redash-environment
  REDASH_LOG_LEVEL: &quot;INFO&quot;
  REDASH_REDIS_URL: &quot;redis:&#x2F;&#x2F;redis:6379&#x2F;0&quot;
  REDASH_DATABASE_URL: &quot;postgresql:&#x2F;&#x2F;postgres@postgres&#x2F;postgres&quot;
  REDASH_RATELIMIT_ENABLED: &quot;false&quot;
  REDASH_MAIL_DEFAULT_SENDER: &quot;redash@example.com&quot;
  REDASH_MAIL_SERVER: &quot;email&quot;
  REDASH_ENFORCE_CSRF: &quot;true&quot;
  REDASH_SECRET_KEY: &quot;BOm3S2NXDUjFt6Wf&quot;
  REDASH_COOKIE_SECRET: &quot;BOm3S2NXDUjFt6Wf&quot;
  GOOGLE_CLIENT_ID: &quot;&quot;
services:
  server:
    &lt;&lt;: *redash-service
    command: dev_server
    depends_on:
      - postgres
      - redis
    ports:
      - &quot;5000:5000&quot;
      - &quot;5678:5678&quot;
    environment:
      &lt;&lt;: *redash-environment
      PYTHONUNBUFFERED: 0
  scheduler:
    &lt;&lt;: *redash-service
    command: dev_scheduler
    depends_on:
      - server
    environment:
      &lt;&lt;: *redash-environment
  worker:
    &lt;&lt;: *redash-service
    command: dev_worker
    depends_on:
      - server
    environment:
      &lt;&lt;: *redash-environment
      PYTHONUNBUFFERED: 0
  redis:
    image: redis:3-alpine
    restart: unless-stopped
  postgres:
    image: postgres:9.5-alpine
    # The following turns the DB into less durable, but gains significant performance improvements for the tests run (x3
    # improvement on my personal machine). We should consider moving this into a dedicated Docker Compose configuration for
    # tests.
    ports:
      - &quot;15432:5432&quot;
    command: &quot;postgres -c fsync&#x3D;off -c full_page_writes&#x3D;off -c synchronous_commit&#x3D;OFF&quot;
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: &quot;trust&quot;
  email:
    image: djfarrelly&#x2F;maildev
    ports:
      - &quot;1080:80&quot;
    restart: unless-stopped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>4）使用官方镜像redash/redash:10.1.0.b50633、与自行编译的redash-master_scheduler、redash-master_worker<br>
docker-compose.yml</p>
<pre class="line-numbers language-none"><code class="language-none">version: &quot;2.2&quot;
x-redash-environment: &amp;redash-environment
  REDASH_LOG_LEVEL: &quot;INFO&quot;
  REDASH_REDIS_URL: &quot;redis:&#x2F;&#x2F;redis:6379&#x2F;0&quot;
  REDASH_DATABASE_URL: &quot;postgresql:&#x2F;&#x2F;postgres@postgres&#x2F;postgres&quot;
  REDASH_RATELIMIT_ENABLED: &quot;false&quot;
  REDASH_MAIL_DEFAULT_SENDER: &quot;redash@example.com&quot;
  REDASH_MAIL_SERVER: &quot;email&quot;
  REDASH_ENFORCE_CSRF: &quot;true&quot;
  REDASH_SECRET_KEY: &quot;BOm3S2NXDUjFt6Wf&quot;
  REDASH_COOKIE_SECRET: &quot;BOm3S2NXDUjFt6Wf&quot;
  GOOGLE_CLIENT_ID: &quot;&quot;
  # Set secret keys in the .env file
services:
  server:
    image: redash&#x2F;redash:10.1.0.b50633
    command: dev_server
    depends_on:
      - postgres
      - redis
    ports:
      - &quot;5000:5000&quot;
      - &quot;5678:5678&quot;
    environment:
      &lt;&lt;: *redash-environment
      PYTHONUNBUFFERED: 0
  scheduler:
    image: redash-master_scheduler
    command: dev_scheduler
    depends_on:
      - server
    environment:
      &lt;&lt;: *redash-environment
  worker:
    image: redash-master_worker
    command: dev_worker
    depends_on:
      - server
    environment:
      &lt;&lt;: *redash-environment
      PYTHONUNBUFFERED: 0
  redis:
    image: redis:3-alpine
    restart: unless-stopped
  postgres:
    image: postgres:9.5-alpine
    # The following turns the DB into less durable, but gains significant performance improvements for the tests run (x3
    # improvement on my personal machine). We should consider moving this into a dedicated Docker Compose configuration for
    # tests.
    ports:
      - &quot;15432:5432&quot;
    command: &quot;postgres -c fsync&#x3D;off -c full_page_writes&#x3D;off -c synchronous_commit&#x3D;OFF&quot;
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: &quot;trust&quot;
  email:
    image: djfarrelly&#x2F;maildev
    ports:
      - &quot;1080:80&quot;
    restart: unless-stopped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>5）创建数据库</p>
<pre class="line-numbers language-none"><code class="language-none">docker-compose run --rm server create_db<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>6）登录网站<br>
<a href="http://xxx.xxx.xxx.xxx:5000/">http://xxx.xxx.xxx.xxx:5000/</a></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>clickhouse</tag>
      </tags>
  </entry>
  <entry>
    <title>docker</title>
    <url>/2021/12/21/docker/</url>
    <content><![CDATA[<h4 id="1-docker概念与好处">1.docker概念与好处</h4>
<p>docker由镜像与容器构成，镜像包含了要运行的所有环境、代码与数据。容器是运行时态生成的运行环境。</p>
<ol>
<li>环境隔离  需要的环境都在一个镜像中，运行一个容器就有了所需环境。</li>
<li>快速部署  制作好镜像之后，可以方便部署。</li>
<li>配置简单  不管是命令还是配置都简洁高效。</li>
</ol>
<h4 id="2-docker安装">2. docker安装</h4>
<h5 id="1-centos-7及以上">1. centos 7及以上</h5>
<pre class="line-numbers language-none"><code class="language-none"># step 1: 安装必要的一些系统工具
sudo yum install -y yum-utils device-mapper-persistent-data lvm2
# Step 2: 添加软件源信息
sudo yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo
# Step 3: 更新并安装 Docker-CE
sudo yum makecache fast
sudo yum -y install docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-Ubuntu-14-04-16-04">2. Ubuntu 14.04 16.04</h5>
<pre class="line-numbers language-none"><code class="language-none"># step 1.docker概念与好处1: 安装必要的一些系统工具
sudo apt-get update
sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
# step 2: 安装GPG证书
curl -fsSL http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo apt-key add -
# Step 3: 写入软件源信息
sudo add-apt-repository &quot;deb [arch&#x3D;amd64] http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot;
# Step 4: 更新并安装 Docker-CE
sudo apt-get -y update
sudo apt-get -y install docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="3-docker开机启动">3.docker开机启动</h4>
<pre class="line-numbers language-none"><code class="language-none"># 添加开机启动
systemctl enable docker.service
# 启动docker服务
systemctl start docker.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="4-docker常用命令">4.docker常用命令</h4>
<pre class="line-numbers language-none"><code class="language-none"># 查看镜像
docker images

# 拉取镜像
docker pull xxx

# 删除镜像
docker rmi xxx

# 查看运行的容器
docker ps

# 启动容器
docker start xxx

# 停止容器
docker stop xxx

# 重启容器
docker restart xxx

# 进入容器
docker exec -it xxx bash

# 查看日志
docker logs -f xxx --tail&#x3D;10

# 查看容器
docker inspect xxx

# 查看容器状态
docker stats<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="5-制作镜像">5.制作镜像</h4>
<h5 id="1-镜像加速">1. 镜像加速</h5>
<pre class="line-numbers language-none"><code class="language-none">sudo mkdir -p &#x2F;etc&#x2F;docker
sudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;
&#123;
  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;w029dasz.mirror.aliyuncs.com&quot;]
&#125;
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-准备Dockerfile">2. 准备Dockerfile</h5>
<pre class="line-numbers language-none"><code class="language-none"># java镜像
FROM openjdk:8-jdk-alpine
 
# 将本地文件夹挂载到当前容器
# 创建&#x2F;tmp目录并持久化到Docker数据文件夹，因为Spring Boot使用的内嵌Tomcat容器默认使用&#x2F;tmp作为工作目录。
VOLUME [&quot;&#x2F;tmp&quot;]
 
# 拷贝文件到容器
COPY *.jar &#x2F;opt&#x2F;app.jar
 
# 解决容器时间和宿主主机时间不一致问题
RUN echo &#39;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.6&#x2F;community&#x2F;&#39;&gt;&#x2F;etc&#x2F;apk&#x2F;repositories &amp;&amp; echo &#39;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.6&#x2F;main&#x2F;&#39;&gt;&gt;&#x2F;etc&#x2F;apk&#x2F;repositories &amp;&amp; apk add --no-cache tzdata
ENV TZ Asia&#x2F;Shanghai
RUN &#x2F;bin&#x2F;cp &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;$&#123;TZ&#125; &#x2F;etc&#x2F;localtime &amp;&amp; echo &#39;$&#123;TZ&#125;&#39; &gt;&#x2F;etc&#x2F;timezone
 
RUN apk add  --no-cache ffmpeg
 
# 打开服务端口
EXPOSE 8080 8080
 
# 配置环境变量 todo jvm优化参数可以设置这里
ENV JAVA_OPTS&#x3D;&#39;-Xmx1024m -Xms512m -Xdebug -Xnoagent -Djava.compiler&#x3D;NONE -Xrunjdwp:transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;8077&#39; APP_OPTS&#x3D;&#39;&#39;
 
# 配置容器启动后执行的命令
ENTRYPOINT java $JAVA_OPTS  -server  -Dfile.encoding&#x3D;UTF-8 -Duser.language&#x3D;zh -Duser.region&#x3D;CN -Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;.&#x2F;urandom $APP_OPTS -jar &#x2F;opt&#x2F;app.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="3-制作镜像">3. 制作镜像</h5>
<pre class="line-numbers language-none"><code class="language-none"># 制作镜像
docker build -t registry.uecent.com:5000&#x2F;provider-auth:1.0.0 .
# 上传镜像(非必要)
docker push registry.uecent.com:5000&#x2F;provider-auth:1.0.0
# 启动镜像
docker run -d --name provider-auth \ 
--restart&#x3D;always  \
-p 80:80 \
-v &#x2F;data&#x2F;provider-auth:&#x2F;tmp \
-e EUREKA_SERVER&#x3D;http:&#x2F;&#x2F;172.19.115.13&#x2F;eureka&#x2F; \
-e APP_OPTS&#x3D;\&quot;spring.profiles.active&#x3D;dev\&quot; \
--log-opt max-size&#x3D;100m --log-opt max-file&#x3D;3 \
registry.uecent.com:5000&#x2F;provider-auth:1.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参数说明：<br>
-d 表示后台运行<br>
–name 指定容器名称<br>
–restart always表示总会重启<br>
-p 映射端口号<br>
-v 映射目录<br>
-e 指定环境变量<br>
–log-opt 日志相关<br>
–privileged 允许root权限<br>
–network=host 使用主机网络</p>
<h4 id="6-docker-compose">6. docker-compose</h4>
<h5 id="1-安装">1. 安装</h5>
<pre class="line-numbers language-none"><code class="language-none">sudo curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.24.0&#x2F;docker-compose-$(uname -s)-$(uname -m)&quot; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose
sudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose
sudo ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose &#x2F;usr&#x2F;bin&#x2F;docker-compose docker-compose --version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h5 id="2-docker-compose-yml">2. docker-compose.yml</h5>
<pre class="line-numbers language-none"><code class="language-none">version: &#39;3.2&#39;
 
services:
  redis:
    container_name:  redis
    image: redis:latest
    restart: unless-stopped
    ports:
      - &quot;6379:6379&quot;
    volumes:
      - &#x2F;redis&#x2F;data:&#x2F;data
  rabbitmq:
    container_name:  rabbitmq
    image: rabbitmq:management
    restart: unless-stopped
    ports:
      - &quot;15672:15672&quot;
      - &quot;5672:5672&quot;
    volumes:
      - &#x2F;redis&#x2F;data:&#x2F;data   
    environment:
      - RABBITMQ_DEFAULT_USER&#x3D;rabbitmq
      - RABBITMQ_DEFAULT_PASS&#x3D;Qfka7ls2A40JEoMw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="3-启动">3.启动</h5>
<pre class="line-numbers language-none"><code class="language-none"># 启动
docker-compose up -d
# 查看
docker-compse ps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="7-docker私服">7.docker私服</h4>
<h5 id="1-安装-2">1.安装</h5>
<pre class="line-numbers language-none"><code class="language-none"># 拉取镜像
docker pull registry 
# 新建仓库目录
mkdir -p &#x2F;data&#x2F;registry
# 启动容器
docker run -d -v &#x2F;data&#x2F;registry:&#x2F;var&#x2F;lib&#x2F;registry -v &#x2F;data&#x2F;cert:&#x2F;data&#x2F;cert -p 5000:5000 -e REGISTRY_STORAGE_DELETE_ENABLED&#x3D;true -e REGISTRY_HTTP_TLS_CERTIFICATE&#x3D;&#x2F;data&#x2F;cert&#x2F;cert.pem -e REGISTRY_HTTP_TLS_KEY&#x3D;&#x2F;data&#x2F;cert&#x2F;cert.key --restart&#x3D;always --privileged&#x3D;true --name registry registry:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-私服相关操作">2.私服相关操作</h5>
<pre class="line-numbers language-none"><code class="language-none">搜索镜像：
curl -X GET https:&#x2F;&#x2F;registry.uecent.com:5000&#x2F;v2&#x2F;_catalog

获取镜像列表：
curl -X GET https:&#x2F;&#x2F;registry.uecent.com:5000&#x2F;v2&#x2F;provider-auth&#x2F;tags&#x2F;list

查询镜像tag：
curl -v --silent -H &quot;Accept: application&#x2F;vnd.docker.distribution.manifest.v2+json&quot; -X GET https:&#x2F;&#x2F;registry.uecent.com:5000&#x2F;v2&#x2F;provider-auth&#x2F;manifests&#x2F;latest 2&gt;&amp;1 | grep Docker-Content-Digest | awk &#39;&#123;print ($3)&#125;&#39;

删除镜像：
curl -v --silent -H &quot;Accept: application&#x2F;vnd.docker.distribution.manifest.v2+json&quot; -X DELETE https:&#x2F;&#x2F;registry.uecent.com:5000&#x2F;v2&#x2F;provider-auth&#x2F;manifests&#x2F;sha256:cc21a69e5d84b78f51eb8003d1f31743fa8cfc629b5e6379e751afff1ca34544

垃圾回收（在docker服务器上执行）：
docker exec -it registry &#x2F;bin&#x2F;registry garbage-collect &#x2F;etc&#x2F;docker&#x2F;registry&#x2F;config.yml
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker安装mysql</title>
    <url>/2021/12/23/docker%E5%AE%89%E8%A3%85mysql/</url>
    <content><![CDATA[<h4 id="1、创建目录">1、创建目录</h4>
<pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;data&#x2F;usr-data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="2、启动实例">2、启动实例</h4>
<pre class="line-numbers language-none"><code class="language-none">docker run -d \
--name&#x3D;&quot;mysql&quot; \
--restart always \
-e MYSQL_ROOT_HOST&#x3D;% \
-e MYSQL_ROOT_PWD&#x3D;KijVtGsAWN2hxLUu \
-v &#x2F;data&#x2F;usr-data:&#x2F;data&#x2F;usr-data \
-p 3306:3306 \
qq79428316&#x2F;club-mysql:5.7.25<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="3、创建数据库和普通用户并分配权限">3、创建数据库和普通用户并分配权限</h4>
<pre class="line-numbers language-none"><code class="language-none">CREATE DATABASE IF NOT EXISTS live DEFAULT CHARSET utf8 COLLATE utf8_general_ci;

CREATE USER &#39;dev-ue-live&#39;@&#39;%&#39; IDENTIFIED BY &#39;fiJW6t9m27spYZd0&#39;;

GRANT ALL ON live.* TO &#39;dev-ue-live&#39;@&#39;%&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch操作</title>
    <url>/2021/12/23/elasticsearch%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h4 id="查看索引">查看索引</h4>
<pre class="line-numbers language-none"><code class="language-none">curl -XGET &quot;http:&#x2F;&#x2F;localhost:9200&#x2F;_cat&#x2F;indices?v&quot;
health status index            uuid                   pri rep docs.count docs.deleted store.size pri.store.size
yellow open   fluentd-20200305 glto7qAvQ9K6WRKXu2ymRw   5   1   25652327            0        6gb            6gb
yellow open   .kibana          nni-Brg0TaKJne5HLxywUw   1   1         17            2     34.7kb         34.7kb
yellow open   fluentd-20200304 9v0nUR5UQ0uadzL2JdNGBw   5   1   25048041            0     18.2gb         18.2gb
yellow open   fluentd-20200303 _03cCwgOTo6Sxu53x-2-eQ   5   1   19563551            0     12.3gb         12.3gb
health：red表示不可用，yellow或者green才可用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="清理日志脚本">清理日志脚本</h4>
<pre class="line-numbers language-none"><code class="language-none">#&#x2F;bin&#x2F;bash
 
#指定日期(5天前)
DATA&#x3D;&#96;date -d &quot;5 day ago&quot; +%Y%m%d&#96;
 
#当前日期
time&#x3D;&#96;date&#96;
 
#删除7天前的日志
curl -XDELETE http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;fluentd-$&#123;DATA&#125;
 
if [ $? -eq 0 ];then
  echo $time&quot;--&gt;del $DATA log success..&quot; &gt;&gt; &#x2F;tmp&#x2F;es-index-clear.log
else
  echo $time&quot;--&gt;del $DATA log fail..&quot; &gt;&gt; &#x2F;tmp&#x2F;es-index-clear.log
fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="添加到任务计划">添加到任务计划</h4>
<pre class="line-numbers language-none"><code class="language-none">crontab -e 10 1 * * * sh &#x2F;root&#x2F;clear_log.sh &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Elasticsearch中信息很多，同时ES也有很多信息查看命令，可以帮助开发者快速查询Elasticsearch的相关信息。</p>
<pre class="line-numbers language-none"><code class="language-none">_cat
$ curl localhost:9200&#x2F;_cat
# 查看各个节点磁盘使用情况
&#x2F;_cat&#x2F;allocation
shards disk.indices disk.used disk.avail disk.total disk.percent host          ip            node
    17       28.6gb    42.8gb    153.8gb    196.7gb           21 172.19.115.65 172.19.115.65 es-node3
    17       18.6gb    34.9gb    161.7gb    196.7gb           17 172.19.115.62 172.19.115.62 es-node1
    16       24.8gb    38.3gb    158.3gb    196.7gb           19 172.19.115.64 172.19.115.64 es-node2
    17       21.6gb    50.9gb    145.8gb    196.7gb           25 172.19.115.18 172.19.115.18 es-node0
 
# 查看各个节点分片情况
&#x2F;_cat&#x2F;shards
&#x2F;_cat&#x2F;shards&#x2F;&#123;index&#125;
index                    shard prirep state      docs   store ip            node
uecent-20200622          2     p      STARTED 3208156   2.6gb 172.19.115.62 es-node1
uecent-20200622          2     r      STARTED 3208156   2.4gb 172.19.115.64 es-node2
uecent-20200622          3     r      STARTED 3207549   3.5gb 172.19.115.65 es-node3
uecent-20200622          3     p      STARTED 3207546   2.4gb 172.19.115.64 es-node2
uecent-20200622          4     p      STARTED 3210288   2.4gb 172.19.115.65 es-node3
uecent-20200622          4     r      STARTED 3210287   2.3gb 172.19.115.18 es-node0
uecent-20200622          1     p      STARTED 3211264   2.4gb 172.19.115.18 es-node0
uecent-20200622          1     r      STARTED 3211264   2.5gb 172.19.115.62 es-node1
uecent-20200622          0     p      STARTED 3208470   2.6gb 172.19.115.65 es-node3
 
# 查看主节点
&#x2F;_cat&#x2F;master
id                     host          ip            node
6k8UWh-jQRqPsJoiV8IHEg 172.19.115.65 172.19.115.65 es-node3
 
# 查看所有节点
&#x2F;_cat&#x2F;nodes
ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name
172.19.115.64           60          96   5    0.44    0.35     0.35 mdi       -      es-node2
172.19.115.65           39          98   9    0.69    0.60     0.56 mdi       *      es-node3
172.19.115.62           36          98   6    0.45    0.42     0.36 mdi       -      es-node1
172.19.115.18           69          98  39    1.32    1.23     1.07 mdi       -      es-node0
 
# 查看索引
&#x2F;_cat&#x2F;indices
&#x2F;_cat&#x2F;indices&#x2F;&#123;index&#125;
health status index                    uuid                   pri rep docs.count docs.deleted store.size pri.store.size
green  open   smartxoffice_oax_message 58jTM6mvTqa1hliNHUpAcw   5   1         16            1    198.9kb         99.4kb
green  open   uecent-20200621          tbqfnUPiT3SMOjNgGptw9w   5   1   48523671            0     66.5gb         33.2gb
green  open   smartxoffice_oax_group   rKx-RizXRwKhcIzPyCJGFw   5   1          1            0      2.9mb          1.4mb
green  open   .kibana                  pF9hvtvRRQ24aGdM2UloVw   1   1         25           18    162.8kb         81.4kb
green  open   smartxoffice_oax_friend  dm5Xm1HMTpizvQDMwVYndA   5   1         10          814      1.8mb        954.4kb
green  open   kefu_question_info       lm5ANJsoSmiA7cxfRgn1Fw   5   0          3            0       14kb           14kb
green  open   uecent-20200622          oFySuI7mREOZBtqhwjPFUQ   5   1   16101241            0       27gb         12.6gb
green  open   smartxoffice_oax_user    nxJK9JxtQGOm0d7Eyrifjg   5   1          6         2507    278.9kb        139.4kb
 
# 查看
&#x2F;_cat&#x2F;segments
&#x2F;_cat&#x2F;segments&#x2F;&#123;index&#125;
index                    shard prirep ip            segment generation docs.count docs.deleted    size size.memory committed searchable version compound
smartxoffice_oax_message 0     r      172.19.115.62 _1               1          1            0   6.1kb        3200 true      true       6.6.1   true
smartxoffice_oax_message 0     r      172.19.115.62 _3               3          1            0   6.1kb        3200 true      true       6.6.1   true
smartxoffice_oax_message 0     r      172.19.115.62 _7               7          1            0   6.5kb        3505 true      true       6.6.1   true
smartxoffice_oax_message 0     p      172.19.115.64 _1               1          1            0   6.1kb        3200 true      true       6.6.1   true
smartxoffice_oax_message 0     p      172.19.115.64 _3               3          1            0   6.1kb        3200 true      true       6.6.1   true
smartxoffice_oax_message 0     p      172.19.115.64 _7               7          1            0   6.5kb        3505 true      true       6.6.1   true
smartxoffice_oax_message 1     r      172.19.115.65 _1               1          1            0   6.5kb        3505 true      true       6.6.1   true
smartxoffice_oax_message 1     r      172.19.115.65 _3               3          1            0   6.1kb        3200 true      true       6.6.1   true
smartxoffice_oax_message 1     p      172.19.115.18 _1               1          1            0   6.5kb        3505 true      true       6.6.1   true
smartxoffice_oax_message 1     p      172.19.115.18 _3               3          1            0   6.1kb        3200 true      true       6.6.1   true
 
# 查看记录条数
&#x2F;_cat&#x2F;count
&#x2F;_cat&#x2F;count&#x2F;&#123;index&#125;
epoch      timestamp count
1592816612 17:03:32  64672303
 
#
&#x2F;_cat&#x2F;recovery
&#x2F;_cat&#x2F;recovery&#x2F;&#123;index&#125;
index                    shard time  type        stage source_host   source_node target_host   target_node repository snapshot files files_recovered files_percent files_total bytes      bytes_recovered bytes_percent bytes_total translog_ops translog_ops_recovered translog_ops_percent
smartxoffice_oax_message 0     618ms peer        done  172.19.115.18 es-node0    172.19.115.62 es-node1    n&#x2F;a        n&#x2F;a      10    10              100.0%        10          19610      19610           100.0%        19610       0            0                      100.0%
smartxoffice_oax_message 0     590ms peer        done  172.19.115.18 es-node0    172.19.115.64 es-node2    n&#x2F;a        n&#x2F;a      10    10              100.0%        10          19610      19610           100.0%        19610       0            0                      100.0%
smartxoffice_oax_message 1     56ms  peer        done  172.19.115.64 es-node2    172.19.115.65 es-node3    n&#x2F;a        n&#x2F;a      7     7               100.0%        7           13280      13280           100.0%        13280       0            0                      100.0%
smartxoffice_oax_message 1     106ms peer        done  172.19.115.64 es-node2    172.19.115.18 es-node0    n&#x2F;a        n&#x2F;a      7     7               100.0%        7           13280      13280           100.0%        13280       0            0                      100.0%
 
# 查询健康状态
&#x2F;_cat&#x2F;health
epoch      timestamp cluster               status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent
1592816675 17:04:35  elasticsearch-cluster green           4         4     67  36    0    0        0             0                  -                100.0%
 
#
&#x2F;_cat&#x2F;pending_tasks
&#x2F;_cat&#x2F;aliases
&#x2F;_cat&#x2F;aliases&#x2F;&#123;alias&#125;
&#x2F;_cat&#x2F;thread_pool
&#x2F;_cat&#x2F;plugins
&#x2F;_cat&#x2F;fielddata
&#x2F;_cat&#x2F;fielddata&#x2F;&#123;fields&#125;
&#x2F;_cat&#x2F;nodeattrs
&#x2F;_cat&#x2F;repositories
&#x2F;_cat&#x2F;snapshots&#x2F;&#123;repository&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>verbose<br>
每个命令都支持使用?v参数，来显示详细的信息：</p>
<pre class="line-numbers language-none"><code class="language-none">$ curl localhost:9200&#x2F;_cat&#x2F;master?v
id                     host      ip        node
yBet3cYzQbC68FRzLZDmFg 127.0.0.1 127.0.0.1 lihao<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>help<br>
每个命令都支持使用help参数，来输出可以显示的列：</p>
<pre class="line-numbers language-none"><code class="language-none">$ curl localhost:9200&#x2F;_cat&#x2F;master?help
id   |   | node id
host | h | host name
ip   |   | ip address
node | n | node name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>headers<br>
通过h参数，可以指定输出的字段：</p>
<pre class="line-numbers language-none"><code class="language-none">$ curl localhost:9200&#x2F;_cat&#x2F;master?v
id                     host      ip        node
yBet3cYzQbC68FRzLZDmFg  127.0.0.1 127.0.0.1 lihao
 
$ curl localhost:9200&#x2F;_cat&#x2F;master?h&#x3D;ip,node
127.0.0.1 lihao<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>数字类型的格式化<br>
很多的命令都支持返回可读性的大小数字，比如使用mb或者kb来表示。</p>
<pre class="line-numbers language-none"><code class="language-none">$ curl localhost:9200&#x2F;_cat&#x2F;indices?v
health status index                   pri rep docs.count docs.deleted store.size pri.store.size
yellow open   aaa                       5   1          2            0      7.2kb          7.2kb
yellow open   logstash-eos-2016.09.01   5   1        297            0    202.3kb        202.3kb
yellow open   bank                      5   1       1001            1    451.6kb        451.6kb
yellow open   website                   5   1          2            0      7.8kb          7.8kb
yellow open   .kibana                   1   1          5            1     26.6kb         26.6kb
yellow open   logstash-eos-2016.09.02   5   1         11            0     33.9kb         33.9kb
yellow open   test-2016.09.01           5   1          1            0      3.9kb          3.9kb
yellow open   testst_index              5   1          0            0       795b           795b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch查询</title>
    <url>/2021/12/23/elasticsearch%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h4 id="查询索引mapper">查询索引mapper</h4>
<pre class="line-numbers language-none"><code class="language-none">GET uecent-20200813
 
输出：
&#123;
  &quot;uecent-20200813&quot;: &#123;
    &quot;aliases&quot;: &#123;&#125;,
    &quot;mappings&quot;: &#123;
      &quot;java_log&quot;: &#123;
        &quot;properties&quot;: &#123;
          &quot;@log_name&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;@source&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;@timestamp&quot;: &#123;
            &quot;type&quot;: &quot;date&quot;
          &#125;,
          &quot;args&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;city_name&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;client&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;container_id&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;container_name&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;country_name&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;domain&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;fluentd-folder&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;fluentd-ip&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;fluentd-ip-in&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;fluentd-project&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;hostname&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;http_user_agent&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;https&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;ip&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;level&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;location&quot;: &#123;
            &quot;type&quot;: &quot;geo_point&quot;
          &#125;,
          &quot;log&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;logdate&quot;: &#123;
            &quot;type&quot;: &quot;date&quot;
          &#125;,
          &quot;partial_id&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;partial_last&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;partial_message&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;partial_ordinal&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;pid&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;referer&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;region_name&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;request&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;request_method&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;responsetime&quot;: &#123;
            &quot;type&quot;: &quot;float&quot;
          &#125;,
          &quot;scheme&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;size&quot;: &#123;
            &quot;type&quot;: &quot;long&quot;
          &#125;,
          &quot;source&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;status&quot;: &#123;
            &quot;type&quot;: &quot;long&quot;
          &#125;,
          &quot;thread&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;upstreamaddr&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;,
          &quot;upstreamtime&quot;: &#123;
            &quot;type&quot;: &quot;text&quot;,
            &quot;fields&quot;: &#123;
              &quot;keyword&quot;: &#123;
                &quot;type&quot;: &quot;keyword&quot;,
                &quot;ignore_above&quot;: 256
              &#125;
            &#125;
          &#125;
        &#125;
      &#125;
    &#125;,
    &quot;settings&quot;: &#123;
      &quot;index&quot;: &#123;
        &quot;creation_date&quot;: &quot;1597285570606&quot;,
        &quot;number_of_shards&quot;: &quot;5&quot;,
        &quot;number_of_replicas&quot;: &quot;1&quot;,
        &quot;uuid&quot;: &quot;L1_5Cf0GSlWbTYyOt9Dm3g&quot;,
        &quot;version&quot;: &#123;
          &quot;created&quot;: &quot;5061299&quot;
        &#125;,
        &quot;provided_name&quot;: &quot;uecent-20200813&quot;
      &#125;
    &#125;
  &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="普通查询">普通查询</h4>
<pre class="line-numbers language-none"><code class="language-none"># 查询索引uecent-20200813
# size表示返回前500条
# query表示查询条件
#      filter过滤
#          range表示范围，下面例子中表示查询时间戳字段为@timestamp，大于等于1597288423982且小于等于1597288723982的数据
#          query_string查询字符串
#              analyze_wildcard表示是否分析通配符查询或前缀查询，true表示是
#              query：domain.keyword表示关键字domain的字段（精确匹配），fluentd-project:模糊匹配
# sort表示按照时间排序
GET &#x2F;uecent-20200813&#x2F;_search
&#123;
    &quot;size&quot;: 500,
    &quot;query&quot;: &#123;
        &quot;bool&quot;: &#123;
            &quot;filter&quot;: [
                &#123;
                    &quot;range&quot;: &#123;
                        &quot;@timestamp&quot;: &#123;
                            &quot;gte&quot;: &quot;1597288423982&quot;,
                            &quot;lte&quot;: &quot;1597288723982&quot;,
                            &quot;format&quot;: &quot;epoch_millis&quot;
                        &#125;
                    &#125;
                &#125;,
                &#123;
                    &quot;query_string&quot;: &#123;
                        &quot;analyze_wildcard&quot;: true,
                        &quot;query&quot;: &quot;domain.keyword:api.uecent.com AND fluentd-project:&#39;nginx&#39; AND status:(\&quot;101\&quot; OR \&quot;200\&quot; OR \&quot;302\&quot; OR \&quot;304\&quot; OR \&quot;400\&quot; OR \&quot;404\&quot; OR \&quot;499\&quot; OR \&quot;500\&quot;) AND NOT http_user_agent:&#39;Zabbix&#39;&quot;
                    &#125;
                &#125;
            ]
        &#125;
    &#125;,
    &quot;sort&quot;: &#123;
        &quot;@timestamp&quot;: &#123;
            &quot;order&quot;: &quot;desc&quot;,
            &quot;unmapped_type&quot;: &quot;boolean&quot;
        &#125;
    &#125;,
    &quot;script_fields&quot;: &#123;&#125;,
    &quot;docvalue_fields&quot;: [
        &quot;@timestamp&quot;
    ]
&#125;
 
输出：
&#123;
  &quot;took&quot;: 17,
  &quot;timed_out&quot;: false,
  &quot;_shards&quot;: &#123;
    &quot;total&quot;: 5,
    &quot;successful&quot;: 5,
    &quot;skipped&quot;: 0,
    &quot;failed&quot;: 0
  &#125;,
  &quot;hits&quot;: &#123;
    &quot;total&quot;: 1805,
    &quot;max_score&quot;: null,
    &quot;hits&quot;: [
      &#123;
        &quot;_index&quot;: &quot;uecent-20200813&quot;,
        &quot;_type&quot;: &quot;java_log&quot;,
        &quot;_id&quot;: &quot;NTc1NTJlZjYtNWU0Yy00ZTM1LWIyYTAtODE0MTdmYjE1YzQ4&quot;,
        &quot;_score&quot;: null,
        &quot;_source&quot;: &#123;
          &quot;fluentd-ip-in&quot;: &quot;172.19.115.16&quot;,
          &quot;container_id&quot;: &quot;c5a0cc3c416b582d21d3161e9b1f77dbd739d5028284d5a5ad0838e1cdf0c854&quot;,
          &quot;container_name&quot;: &quot;&#x2F;nginx&quot;,
          &quot;source&quot;: &quot;stdout&quot;,
          &quot;log&quot;: &quot;&quot;&quot;&#123;&quot;@timestamp&quot;:&quot;2020-08-13T11:18:43+08:00&quot;,&quot;@source&quot;:&quot;172.17.0.8&quot;,&quot;hostname&quot;:&quot;c5a0cc3c416b&quot;,&quot;ip&quot;:&quot;114.95.120.93&quot;,&quot;client&quot;:&quot;114.95.120.93&quot;,&quot;request_method&quot;:&quot;GET&quot;,&quot;scheme&quot;:&quot;http&quot;,&quot;domain&quot;:&quot;api.uecent.com&quot;,&quot;referer&quot;:&quot;-&quot;,&quot;request&quot;:&quot;&#x2F;udata&#x2F;api&#x2F;v1&#x2F;football&#x2F;common&#x2F;detail&#x2F;255719476464328704&quot;,&quot;args&quot;:&quot;-&quot;,&quot;size&quot;:2580,&quot;status&quot;: 200,&quot;responsetime&quot;:0.283,&quot;upstreamtime&quot;:&quot;0.282&quot;,&quot;upstreamaddr&quot;:&quot;172.19.115.50:80&quot;,&quot;http_user_agent&quot;:&quot;Java&#x2F;1.8.0_181&quot;,&quot;https&quot;:&quot;&quot;&#125;&quot;&quot;&quot;,
          &quot;fluentd-folder&quot;: &quot;dev-live&quot;,
          &quot;fluentd-project&quot;: &quot;nginx&quot;,
          &quot;@source&quot;: &quot;172.17.0.8&quot;,
          &quot;hostname&quot;: &quot;c5a0cc3c416b&quot;,
          &quot;ip&quot;: &quot;114.95.120.93&quot;,
          &quot;client&quot;: &quot;114.95.120.93&quot;,
          &quot;request_method&quot;: &quot;GET&quot;,
          &quot;scheme&quot;: &quot;http&quot;,
          &quot;domain&quot;: &quot;api.uecent.com&quot;,
          &quot;referer&quot;: &quot;-&quot;,
          &quot;request&quot;: &quot;&#x2F;udata&#x2F;api&#x2F;v1&#x2F;football&#x2F;common&#x2F;detail&#x2F;255719476464328704&quot;,
          &quot;args&quot;: &quot;-&quot;,
          &quot;size&quot;: 2580,
          &quot;status&quot;: 200,
          &quot;responsetime&quot;: 0.283,
          &quot;upstreamtime&quot;: &quot;0.282&quot;,
          &quot;upstreamaddr&quot;: &quot;172.19.115.50:80&quot;,
          &quot;http_user_agent&quot;: &quot;Java&#x2F;1.8.0_181&quot;,
          &quot;https&quot;: &quot;&quot;,
          &quot;logdate&quot;: &quot;2020-08-13T11:18:43.000000000+0800&quot;,
          &quot;@timestamp&quot;: &quot;2020-08-13T11:18:43.000000000+08:00&quot;,
          &quot;@log_name&quot;: &quot;nginx&quot;
        &#125;,
        &quot;fields&quot;: &#123;
          &quot;@timestamp&quot;: [
            1597288723000
          ]
        &#125;,
        &quot;sort&quot;: [
          1597288723000
        ]
      &#125;,
...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="聚合查询">聚合查询</h4>
<pre class="line-numbers language-none"><code class="language-none"># aggs为聚合条件
#    terms表示以city_name.keyword这个条件进行分组
#    geohash_grid表示在上面的基础再分组
GET &#x2F;uecent-20200813&#x2F;_search
&#123;
    &quot;size&quot;: 0,
    &quot;query&quot;: &#123;
        &quot;bool&quot;: &#123;
            &quot;filter&quot;: [
                &#123;
                    &quot;range&quot;: &#123;
                        &quot;@timestamp&quot;: &#123;
                            &quot;gte&quot;: &quot;1597305930213&quot;,
                            &quot;lte&quot;: &quot;1597306230213&quot;,
                            &quot;format&quot;: &quot;epoch_millis&quot;
                        &#125;
                    &#125;
                &#125;,
                &#123;
                    &quot;query_string&quot;: &#123;
                        &quot;analyze_wildcard&quot;: true,
                        &quot;query&quot;: &quot;domain.keyword:grafana.uecent.com AND fluentd-project:\&quot;nginx\&quot; AND status:(\&quot;101\&quot; OR \&quot;200\&quot; OR \&quot;304\&quot; OR \&quot;404\&quot; OR \&quot;499\&quot; OR \&quot;500\&quot;) AND NOT http_user_agent:&#39;Zabbix&#39;&quot;
                    &#125;
                &#125;
            ]
        &#125;
    &#125;,
    &quot;aggs&quot;: &#123;
        &quot;4&quot;: &#123;
            &quot;terms&quot;: &#123;
                &quot;field&quot;: &quot;city_name.keyword&quot;,
                &quot;size&quot;: 10,
                &quot;order&quot;: &#123;
                    &quot;_term&quot;: &quot;desc&quot;
                &#125;,
                &quot;min_doc_count&quot;: 1
            &#125;,
            &quot;aggs&quot;: &#123;
                &quot;3&quot;: &#123;
                    &quot;geohash_grid&quot;: &#123;
                        &quot;field&quot;: &quot;location&quot;,
                        &quot;precision&quot;: 3
                    &#125;,
                    &quot;aggs&quot;: &#123;&#125;
                &#125;
            &#125;
        &#125;
    &#125;
&#125;
 
输出：
&#123;
  &quot;took&quot;: 36,
  &quot;timed_out&quot;: false,
  &quot;_shards&quot;: &#123;
    &quot;total&quot;: 5,
    &quot;successful&quot;: 5,
    &quot;skipped&quot;: 0,
    &quot;failed&quot;: 0
  &#125;,
  &quot;hits&quot;: &#123;
    &quot;total&quot;: 11,
    &quot;max_score&quot;: 0,
    &quot;hits&quot;: []
  &#125;,
  &quot;aggregations&quot;: &#123;
    &quot;4&quot;: &#123;
      &quot;doc_count_error_upper_bound&quot;: 0,
      &quot;sum_other_doc_count&quot;: 0,
      &quot;buckets&quot;: [
        &#123;
          &quot;3&quot;: &#123;
            &quot;buckets&quot;: [
              &#123;
                &quot;key&quot;: &quot;wtw&quot;,
                &quot;doc_count&quot;: 11
              &#125;
            ]
          &#125;,
          &quot;key&quot;: &quot;上海&quot;,
          &quot;doc_count&quot;: 11
        &#125;
      ]
    &#125;
  &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="查询当前日志最多的项目">查询当前日志最多的项目</h4>
<pre class="line-numbers language-none"><code class="language-none">GET &#x2F;_search
&#123;
    &quot;size&quot;: 0,
    &quot;query&quot;: &#123;
        &quot;bool&quot;: &#123;
            &quot;filter&quot;: [
                &#123;
                    &quot;range&quot;: &#123;
                        &quot;@timestamp&quot;: &#123;
                            &quot;gte&quot;: &quot;1599098400000&quot;,
                            &quot;lte&quot;: &quot;1599102000000&quot;,
                            &quot;format&quot;: &quot;epoch_millis&quot;
                        &#125;
                    &#125;
                &#125;
            ]
        &#125;
    &#125;,
    &quot;aggs&quot;: &#123;
        &quot;3&quot;: &#123;
            &quot;terms&quot;: &#123;
                &quot;field&quot;: &quot;fluentd-project.keyword&quot;,
                &quot;size&quot;: 15,
                &quot;order&quot;: &#123;
                    &quot;_count&quot;: &quot;desc&quot;
                &#125;,
                &quot;min_doc_count&quot;: 1
            &#125;
        &#125;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch单机与集群</title>
    <url>/2021/12/23/elasticsearch%E5%8D%95%E6%9C%BA%E4%B8%8E%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h4 id="单机">单机</h4>
<p>docker-compose.yml</p>
<pre class="line-numbers language-none"><code class="language-none">version: &#39;2.2&#39;
services:
  elasticsearch:
    image: docker.elastic.co&#x2F;elasticsearch&#x2F;elasticsearch:6.7.2
    container_name: elasticsearch
    environment:
      - cluster.name&#x3D;docker-cluster
      - bootstrap.memory_lock&#x3D;true
      - &quot;ES_JAVA_OPTS&#x3D;-Xms512m -Xmx512m&quot;
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;data
    ports:
      - 9200:9200
    networks:
      - esnet
  elasticsearch2:
    image: docker.elastic.co&#x2F;elasticsearch&#x2F;elasticsearch:6.7.2
    container_name: elasticsearch2
    environment:
      - cluster.name&#x3D;docker-cluster
      - bootstrap.memory_lock&#x3D;true
      - &quot;ES_JAVA_OPTS&#x3D;-Xms512m -Xmx512m&quot;
      - &quot;discovery.zen.ping.unicast.hosts&#x3D;elasticsearch&quot;
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;data
    networks:
      - esnet
 
volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
 
networks:
  esnet:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="集群">集群</h4>
<p>1、设置工作目录</p>
<pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;data&#x2F;elasticsearch&#x2F;data &#x2F;data&#x2F;elasticsearch&#x2F;logs
chown -R 1000:1000 &#x2F;data&#x2F;elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>2、进入sysctl.conf文件添加一行（解决容器内存权限过小问题）</p>
<pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;sysctl.conf
vm.max_map_count&#x3D;262144
sysctl -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>3、配置文件elasticsearch.yml<br>
es-node-0(172.19.115.18):</p>
<pre class="line-numbers language-none"><code class="language-none">cluster.name: elasticsearch-cluster
node.name: es-node0
network.host: 172.19.115.18
http.port: 9200
transport.tcp.port: 9300
http.cors.enabled: true
http.cors.allow-origin: &quot;*&quot;
node.master: false 
node.data: true
discovery.seed_hosts: [&quot;172.19.115.62:9300&quot;,&quot;172.19.115.64:9300&quot;,&quot;172.19.115.65:9300&quot;]
cluster.initial_master_nodes: [&quot;es-node1&quot;,&quot;es-node2&quot;,&quot;es-node3&quot;]
gateway.recover_after_nodes: 3
gateway.recover_after_time: 5m
gateway.expected_nodes: 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>es-node-1(172.19.115.62):</p>
<pre class="line-numbers language-none"><code class="language-none">#集群名(广播形式构建集群，所以集群名称必须一致才会相互发现)
cluster.name: elasticsearch-cluster
#节点名:节点一：es-node1，节点二：es-node2，节点三：es-node3
node.name: es-node1
#设置绑定的ip地址，可以是ipv4或ipv6的，默认为0.0.0.0，
network.bind_host: 0.0.0.0
#设置其它节点和该节点交互的ip地址，如果不设置它会自动判断，
#值必须是个真实的ip地址
network.publish_host: 172.19.115.62
#设置对外服务的http端口，默认为9200
http.port: 9200
#设置节点之间交互的tcp端口，默认是9300
transport.tcp.port: 9300
#是否允许跨域REST请求（配置这个可以解决elasticsearch-head访问）
http.cors.enabled: true
#允许 REST 请求来自何处
http.cors.allow-origin: &quot;*&quot;
#节点角色设置
node.master: true
node.data: true
#有成为主节点资格的节点列表
discovery.zen.ping.unicast.hosts: [&quot;172.19.115.62:9300&quot;,&quot;172.19.115.64:9300&quot;,&quot;172.19.115.65:9300&quot;]
#集群中一直正常运行的，有成为master节点资格的最少节点数（默认为1）
discovery.zen.minimum_master_nodes: 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>es-node-2(172.19.115.64):</p>
<pre class="line-numbers language-none"><code class="language-none">cluster.name: elasticsearch-cluster
node.name: es-node2
network.bind_host: 0.0.0.0
network.publish_host: 172.19.115.64
http.port: 9200
transport.tcp.port: 9300
http.cors.enabled: true
http.cors.allow-origin: &quot;*&quot;
node.master: true
node.data: true
discovery.zen.ping.unicast.hosts: [&quot;172.19.115.62:9300&quot;,&quot;172.19.115.64:9300&quot;,&quot;172.19.115.65:9300&quot;]
discovery.zen.minimum_master_nodes: 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>es-node-3(172.19.115.65):</p>
<pre class="line-numbers language-none"><code class="language-none">cluster.name: elasticsearch-cluster
node.name: es-node3
network.bind_host: 0.0.0.0
network.publish_host: 172.19.115.65
http.port: 9200
transport.tcp.port: 9300
http.cors.enabled: true
http.cors.allow-origin: &quot;*&quot;
node.master: true
node.data: true 
discovery.zen.ping.unicast.hosts: [&quot;172.19.115.62:9300&quot;,&quot;172.19.115.64:9300&quot;,&quot;172.19.115.65:9300&quot;]
discovery.zen.minimum_master_nodes: 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>4、启动容器</p>
<pre class="line-numbers language-none"><code class="language-none"># 172.19.115.18上执行
docker run --restart always -e ES_JAVA_OPTS&#x3D;&quot;-Xms1200m -Xmx1200m&quot; -d -p 9200:9200 -p 9300:9300 -v &#x2F;data&#x2F;elasticsearch&#x2F;elasticsearch.yml:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml -v &#x2F;data&#x2F;elasticsearch&#x2F;data:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;data --name es-node0 elasticsearch:5.6.12
# 172.19.115.62上执行
docker run --restart always -e ES_JAVA_OPTS&#x3D;&quot;-Xms1200m -Xmx1200m&quot; -d -p 9200:9200 -p 9300:9300 -v &#x2F;data&#x2F;elasticsearch&#x2F;elasticsearch.yml:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml -v &#x2F;data&#x2F;elasticsearch&#x2F;data:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;data --name es-node1 elasticsearch:5.6.12
# 172.19.115.64上执行
docker run --restart always -e ES_JAVA_OPTS&#x3D;&quot;-Xms1200m -Xmx1200m&quot; -d -p 9200:9200 -p 9300:9300 -v &#x2F;data&#x2F;elasticsearch&#x2F;elasticsearch.yml:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml -v &#x2F;data&#x2F;elasticsearch&#x2F;data:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;data --name es-node2 elasticsearch:5.6.12
# 172.19.115.65上执行
docker run --restart always -e ES_JAVA_OPTS&#x3D;&quot;-Xms1200m -Xmx1200m&quot; -d -p 9200:9200 -p 9300:9300 -v &#x2F;data&#x2F;elasticsearch&#x2F;elasticsearch.yml:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml -v &#x2F;data&#x2F;elasticsearch&#x2F;data:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;data --name es-node3 elasticsearch:5.6.12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>fluentd配置</title>
    <url>/2021/12/23/fluentd%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p>fluentd用来收集日志，然后转发给elasticsearch，这样通过kibana查看日志</p>
</blockquote>
<p><img src="/2021/12/23/fluentd%E9%85%8D%E7%BD%AE/kibana.png" alt="最终效果"></p>
<h4 id="client配置：">client配置：</h4>
<pre class="line-numbers language-none"><code class="language-none"># fluentd&#x2F;etc&#x2F;fluent.conf
&lt;source&gt;
  @type forward
  port 24224
  bind 0.0.0.0
&lt;&#x2F;source&gt;
&lt;filter service.provider*&gt;
  @type concat
  timeout_label @NORMAL
  flush_interval 5s
  key log
  stream_identity_key container_id
  multiline_start_regexp &#x2F;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;(.|,)\d&#123;3&#125;&#x2F;
&lt;&#x2F;filter&gt;
&lt;filter service.component*&gt;
  @type concat
  timeout_label @NORMAL
  flush_interval 5s
  key log
  stream_identity_key container_id
  multiline_start_regexp &#x2F;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;(.|,)\d&#123;3&#125;&#x2F;
&lt;&#x2F;filter&gt;
&lt;filter service.nginx*&gt;
  @type parser
  format json
  reserve_data true
  key_name log
&lt;&#x2F;filter&gt;
&lt;match service.*&gt;
   @type relabel
   @label @NORMAL
&lt;&#x2F;match&gt;
&lt;label @NORMAL&gt;
  &lt;filter service.provider*&gt;
    @type parser
    key_name log
    reserve_data true
    &lt;parse&gt;
       @type regexp
       expression &#x2F;^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)\s&#123;1,2&#125;(?&lt;level&gt;[^\s]+) (?&lt;pid&gt;\S+) --- \[(?&lt;thread&gt;.*)\] &#x2F;
    &lt;&#x2F;parse&gt;
  &lt;&#x2F;filter&gt;
  &lt;filter service.component*&gt;
    @type parser
    key_name log
    reserve_data true
    &lt;parse&gt;
       @type regexp
       expression &#x2F;^(?&lt;time&gt;\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125; \d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;)\s&#123;1,2&#125;(?&lt;level&gt;[^\s]+) (?&lt;pid&gt;\S+) --- \[(?&lt;thread&gt;.*)\] &#x2F;
    &lt;&#x2F;parse&gt;
  &lt;&#x2F;filter&gt;
  &lt;match service.*&gt;
    @type forward
    send_timeout 60s
    recover_wait 10s
    hard_timeout 60s
    buffer_type memory
    flush_interval 1s
    buffer_chunk_limit 256M
    buffer_queue_limit 128
    num_threads 8
    &lt;server&gt;
        name server-efk
        host 172.19.115.18
        port 24225
    weight 60
    &lt;&#x2F;server&gt;
    &lt;server&gt;
    name server-selenium
    host 172.19.115.29
    port 24225
    weight 60
    &lt;&#x2F;server&gt;
    &lt;server&gt;
    name server-mqtt
    host 172.19.115.20
    port 24225
    weight 60
    &lt;&#x2F;server&gt;
  &lt;&#x2F;match&gt;
&lt;&#x2F;label&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="server配置：">server配置：</h4>
<pre class="line-numbers language-none"><code class="language-none"># fluentd&#x2F;etc&#x2F;fluent.conf
&lt;source&gt;
  @type forward
  port 24225
  bind 0.0.0.0
&lt;&#x2F;source&gt;
&lt;filter service.nginx&gt;
  @type parser
  format json
  reserve_data true
  key_name log
&lt;&#x2F;filter&gt;
&lt;match service.*&gt;
  @type forest
  subtype copy
  remove_prefix service
    &lt;template&gt;
      &lt;store&gt;
        @type elasticsearch
        host 172.19.115.18
        port 9200
        logstash_format true
        logstash_prefix fluentd
        logstash_dateformat %Y%m%d
        include_tag_key true
        type_name java_log
        tag_key @log_name
        buffer_type memory
        flush_interval 5s
        max_retry_wait 30
        disable_retry_limit
        buffer_chunk_limit 256M
        buffer_queue_limit 128
        num_threads 8
        reconnect_on_error true
        resurrect_after 5s
      &lt;&#x2F;store&gt;
        # &lt;store&gt;
        #       @type file
    #   path &#x2F;var&#x2F;log&#x2F;fluent&#x2F;$&#123;tag&#125;.*.log
    #   compress gzip
    #   time_slice_format %Y%m%d
    #   time_slice_wait 10m
    #   append true
    #   message_key log
    #   format single_value
    # &lt;&#x2F;store&gt;
   &lt;&#x2F;template&gt;
&lt;&#x2F;match&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Dockerfile配置">Dockerfile配置</h4>
<pre class="line-numbers language-none"><code class="language-none">FROM fluent&#x2F;fluentd:latest
 
USER root
 
VOLUME [&quot;&#x2F;var&#x2F;log&#x2F;fluent&quot;, &quot;&#x2F;fluentd&#x2F;etc&#x2F;&quot;]
 
RUN apk add --no-cache --update --virtual .build-deps \
        sudo build-base ruby-dev \
 &amp;&amp; sudo gem install fluent-plugin-elasticsearch \
 &amp;&amp; sudo gem install fluent-plugin-record-reformer \
 &amp;&amp; sudo gem install fluent-plugin-forest \
 &amp;&amp; sudo gem sources --clear-all \
 &amp;&amp; apk del .build-deps \
 &amp;&amp; rm -rf &#x2F;tmp&#x2F;* &#x2F;var&#x2F;tmp&#x2F;* &#x2F;usr&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;*&#x2F;cache&#x2F;*.gem
 
COPY fluent.conf &#x2F;fluentd&#x2F;etc&#x2F;
 
RUN echo &#39;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.6&#x2F;community&#x2F;&#39;&gt;&#x2F;etc&#x2F;apk&#x2F;repositories &amp;&amp; echo &#39;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.6&#x2F;main&#x2F;&#39;&gt;&gt;&#x2F;etc&#x2F;apk&#x2F;repositories &amp;&amp; apk add --no-cache tzdata
ENV TZ Asia&#x2F;Shanghai
RUN &#x2F;bin&#x2F;cp &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;$&#123;TZ&#125; &#x2F;etc&#x2F;localtime &amp;&amp; echo &#39;$&#123;TZ&#125;&#39; &gt;&#x2F;etc&#x2F;timezone
 
#RUN ln -sf &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime
 
# 多行匹配插件（client）
RUN [&quot;gem&quot;, &quot;install&quot;, &quot;fluent-plugin-concat&quot;, &quot;-no-rdoc&quot;, &quot;-no-ri&quot;, &quot;--version&quot;, &quot;2.1.0&quot;]
# elasticsearch插件（server）
# RUN [&quot;gem&quot;,&quot;install&quot;,&quot;fluent-plugin-elasticsearch&quot;,&quot;-no-rdoc&quot;,&quot;-no-ri&quot;,&quot;--version&quot;,&quot;1.9.2&quot;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>git</title>
    <url>/2021/12/21/git/</url>
    <content><![CDATA[<h4 id="1-全局配置">1.全局配置</h4>
<pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;yourname&quot;

git config --global user.email &quot;your@email.com&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="2-git中添加ssh说明">2.git中添加ssh说明</h4>
<pre class="line-numbers language-生成密钥" data-language="生成密钥"><code class="language-生成密钥">ssh-keygen -t rsa -C &quot;wangjingfeng2008@163.com&quot;

把专用密钥添加到 ssh-agent 的高速缓存中：
ssh-add ~&#x2F;.ssh&#x2F;id_rsa

如果在使用shh-add的时候提示：
Could not open a connection to your authentication agent.

则需手动开启ssh，如下；
eval &#96;ssh-agent -s&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="3-删除远程分支">3.删除远程分支</h4>
<pre class="line-numbers language-none"><code class="language-none">git branch -r -d origin&#x2F;branch-name git push origin :branch-name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="4-撤销未push的commit">4.撤销未push的commit</h4>
<pre class="line-numbers language-none"><code class="language-none">git log git reset --hard commit_id<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="5-翻墙">5.翻墙</h4>
<pre class="line-numbers language-none"><code class="language-none">git config --global https.proxy http:&#x2F;&#x2F;127.0.0.1:1080

git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:1080

git config --global --unset http.proxy

git config --global --unset https.proxy npm config delete proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建github博客</title>
    <url>/2021/12/21/hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>1）GitHub上面新建一个repository</p>
<p>2）clone到本地</p>
<p>3）安装hexo<br>
npm i hexo-cli -g</p>
<p>4）验证是否安装成功<br>
hexo -v</p>
<p>5）找个空目录初始化<br>
hexo init</p>
<p>6）生成静态页面<br>
hexo g</p>
<p>7）打开本地网页：<a href="http://localhost:4000">http://localhost:4000</a><br>
hexo s</p>
<p>8）修改配置文件_config.yml<br>
deploy:<br>
type: git<br>
repo: <a href="mailto:git@github.com">git@github.com</a>:wjf8882300/docs.git<br>
branch: master</p>
<p>9）安装git插件<br>
npm install --save hexo-deployer-git</p>
<p>10）把生成的文件拷贝到git目录</p>
<p>11）git提交<br>
hexo d</p>
<p>12）github选择repository——&gt;Settings——&gt;Pages，选择分支和主题。上面就是博客地址。</p>
<p>13）写文章<br>
hexo new post “docker”</p>
<p>14）新增评论功能<br>
npm install hexo-generator-searchdb --save</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>java lamda</title>
    <url>/2021/12/21/java-lamda/</url>
    <content><![CDATA[<h4 id="java-lamda">java lamda</h4>
<pre class="line-numbers language-none"><code class="language-none">@Data
class User &#123;
   &#x2F;** 用户id *&#x2F;
   private String id;
   &#x2F;** 用户姓名 *&#x2F;
   private String name;
   &#x2F;** 性别:0-男&#x2F;1-女 *&#x2F;
   private String sex;
   &#x2F;** 年龄 *&#x2F;
   private Integer age;
&#125;
 
@Data
class UserSum &#123;
   &#x2F;** 性别:0-男&#x2F;1-女 *&#x2F;
   private String sex;
   &#x2F;** 年龄 *&#x2F;
   private Integer age;
 
    public UserSum (String sex, Integer age) &#123;
            this.sex&#x3D; sex;
            this.age&#x3D; age;
        &#125;
 
        @Override
        public String toString() &#123;
            return this.sex+ &quot;:&quot; + this.age;
        &#125;
 
        @Override
        public boolean equals(Object obj) &#123;
            if(obj &#x3D;&#x3D; null) &#123;
                return false;
            &#125;
            if(!(obj instanceof UserSum)) &#123;
                return false;
            &#125;
            if(obj &#x3D;&#x3D; this) &#123;
                return  true;
            &#125;
            UserSum o &#x3D; (UserSum)obj;
            return this.sex.equals(o.sex) &amp;&amp; this.age.equals(o.age);
        &#125;
 
        @Override
        public int hashCode() &#123;
            return this.sex.hashCode() + this.age.hashCode();
        &#125;
&#125;
 
List&lt;User&gt; userList;
 
&#x2F;&#x2F; 循环
userList.foreach(m-&gt;&#123;
   &#x2F;&#x2F; do something
&#125;);
 
&#x2F;&#x2F; 过滤（筛选姓名为女的用户）
List&lt;User&gt; list &#x3D; userList.stream().filter(m-&gt;&quot;1&quot;.equals(m.getSex())).collect(Collectors.toList());
&#x2F;&#x2F; 两层过滤
List&lt;UserRole&gt; list &#x3D; userRoleList.stream().filter(m-&gt;userList.stream().filter(a-&gt;a.getId().equals(m.userId())).findFirst().isPresent()).collect(Collectors.toList());
 
&#x2F;&#x2F; list值转换(获取对象某个字段)
List&lt;String&gt; list &#x3D; userList.stream().map(User::getId).collect(Collectors.toList());
&#x2F;&#x2F; list值转换（某个对象转为另一个对象）
List&lt;UserVO&gt; list &#x3D; messageList.stream().map(m-&gt;&#123;
   UserVO userVO &#x3D; new UserVO();
   userVO.setId(m.getId());
   return userVO;
&#125;).collect(Collectors.toList());
 
&#x2F;&#x2F; list转map
Map&lt;String, String&gt; users &#x3D; userList.stream().collect(Collectors.toMap(User::getId, User::getName));
Map&lt;String, User&gt; users &#x3D; userList.stream().collect(Collectors.toMap(User::getName, Function.identity()));
Map&lt;String, String&gt; users &#x3D; userList.stream().collect(Collectors.toMap(User::getId, u-&gt;u.getAge().toString())); &#x2F;&#x2F; 类型转换
 &#x2F;&#x2F; 解决key值重复
Map&lt;String, User&gt; users &#x3D; userList.stream().collect(Collectors.toMap(User::getName, Function.identity(), (key1, key2) -&gt; key2));
 
&#x2F;&#x2F; map转list
List&lt;User&gt; userList &#x3D; map.entrySet().stream().map(e -&gt; new User(e.getKey(),e.getValue())).collect(Collectors.toList());
 
&#x2F;&#x2F; list去重
List&lt;User&gt; userList &#x3D; users.stream().collect(Collectors.collectingAndThen(Collectors.toCollection(() -&gt; new TreeSet&lt;&gt;(Comparator.comparing(user -&gt;user.getName()))), ArrayList::new));
 
&#x2F;&#x2F; 分组
Map&lt;String, List&lt;User&gt;&gt; map &#x3D; userList.parallelStream().collect(Collectors.groupingBy(User::getSex));
Map&lt;String, List&lt;User&gt;&gt; map &#x3D; userList.parallelStream().collect(Collectors.groupingBy(m-&gt;Integer.value(m.getSex())));
Map&lt;String, List&lt;String&gt;&gt; map &#x3D; userList.parallelStream().collect(Collectors.groupingBy(User::getSex, Collectors.mapping(User::getId, Collectors.toList())));
&#x2F;&#x2F; 分组并对key排序
TreeMap&lt;String, List&lt;User&gt;&gt;  map &#x3D; list.stream().collect(Collectors.groupingBy(User::getSex, TreeMap::new, Collectors.toList()));
&#x2F;&#x2F; 多条件分组
&#x2F;&#x2F; 方式一
Map&lt;String, Map&lt;String, List&lt;User&gt;&gt;&gt; collect &#x3D; list.stream().collect(Collectors.groupingBy(User::getSex, Collectors.groupingBy(User::getName)));
&#x2F;&#x2F; 方式二
Map&lt;UserSum, List&lt;User&gt;&gt; collect1 &#x3D; list.stream().collect(Collectors.groupingBy(um -&gt; new UserSum(um.getSex(), um.getName())));
&#x2F;&#x2F; 分组求和, BigDecimal可以用Collectors.reducing(BigDecimal.ZERO, User::getAge, BigDecimal::add)
Map&lt;String, Map&lt;String, Integer&gt;&gt; collect2 &#x3D; list.stream().collect(Collectors.groupingBy(User::getSex, Collectors.groupingBy(User::getName, Collectors.summarizingInt(User::getAge))));
&#x2F;&#x2F; 求每组最大值（返回对象）
Map&lt;String, User&gt; collect4 &#x3D; list.stream().collect(Collectors.groupingBy(User::getSex, Collectors.collectingAndThen(Collectors.maxBy(Comparator.comparing(User::getAge)), Optional::get)));
&#x2F;&#x2F; 求每组最大值（返回值）
Map&lt;String, Integer&gt; collect5 &#x3D; list.stream().collect(Collectors.groupingBy(User::getSex, Collectors.reducing(0, User::getAge, Integer::max)));
&#x2F;&#x2F; 求平均数
Map&lt;String, Double&gt; collect8 &#x3D; list.stream().collect(Collectors.groupingBy(User::getSex, Collectors.averagingInt(User::getAge)));
&#x2F;&#x2F; 获取年龄小于30岁的（having group by ）
Map&lt;Long, Long&gt; collect &#x3D; result.stream().collect(Collectors.collectingAndThen(Collectors.groupingBy(User::getAge, Collectors.counting()), m -&gt; &#123;
                m.values().removeIf(v -&gt; v &gt;&#x3D; 30);
                return m;
            &#125;));
 
&#x2F;&#x2F; 排序
&#x2F;&#x2F; 反序排序
List&lt;User&gt; list &#x3D; userList.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList());
&#x2F;&#x2F; 按照某个字段排序（默认正序）
List&lt;User&gt; collect &#x3D; users.stream().sorted(Comparator.comparing(User::getName)).collect(Collectors.toList());
&#x2F;&#x2F; 按照某个字段排序（倒叙）
List&lt;User&gt; collect &#x3D; users.stream().sorted(Comparator.comparing(User::getName).reversed()).collect(Collectors.toList());
&#x2F;&#x2F; 某个字段处理后再排序
Collections.sort(userList, (o1, o2)-&gt;Integer.valueOf(o1.getId()).compareTo(Integer.valueOf(o2.getId())));
&#x2F;&#x2F; 多字段排序先根据性别正序排序，再根据姓名倒叙排序
List&lt;User&gt; collection &#x3D; users.stream().sorted(Comparator.comparing(User::getSex).thenComparing(User::getName).reversed()).collect(Collectors.toList());
 
&#x2F;&#x2F; 求最大值、最小值
Integer max &#x3D; list.stream().map(User::getAge).max(Integer::compareTo).get();
Integer min&#x3D; list.stream().map(User::getAge).min(Integer::compareTo).get();
 
 
&#x2F;&#x2F; 分页，从0开始取前5条
List&lt;User&gt; collection &#x3D; list.stream().skip(0).limit(5).collect(Collectors.toList());
 
&#x2F;&#x2F; 初始化map
Map&lt;String, String&gt; events &#x3D; new ImmutableMap.Builder&lt;String, String&gt;().put(&quot;abc&quot;, &quot;123&quot;).build();    
 
 
&#x2F;&#x2F;String 字符串转换list&lt;Integer&gt;类型
List&lt;Integer&gt; channels &#x3D; Arrays.stream(ids.split(&quot;,&quot;)).mapToInt(Integer::parseInt).boxed().collect(Collectors.toList());<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>linux文件传输</title>
    <url>/2021/12/23/linux%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/</url>
    <content><![CDATA[<h4 id="1-Linux下scp的用法（不支持断点续传）">1.Linux下scp的用法（不支持断点续传）</h4>
<h5 id="1-1-将本机文件复制到远程服务器上">1.1.将本机文件复制到远程服务器上</h5>
<pre class="line-numbers language-none"><code class="language-none"># 将当前服务器&#x2F;data目录下面的test.txt复制到远程服务器192.168.6.129的tmp目录下面
scp &#x2F;data&#x2F;test.txt root@192.168.6.129:&#x2F;tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>参数说明：</p>
<ul>
<li>/data      本地文件的绝对路径</li>
<li>test.txt   要复制到服务器上的本地文件</li>
<li>root       通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</li>
<li>192.168.6.129 远程服务器的ip地址（也可以使用域名或机器名）</li>
<li>/etc/squid    将本地文件复制到位于远程服务器上的路径</li>
</ul>
<h5 id="1-2-将远程服务器上的文件复制到本机">1.2.将远程服务器上的文件复制到本机</h5>
<pre class="line-numbers language-none"><code class="language-none"># 将远程服务器192.168.6.129的tmp目录下面的test.txt复制到当前服务器&#x2F;data目录
scp root@192.168.6.129:&#x2F;tmp&#x2F;test.txt &#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>参数说明：</p>
<ul>
<li>root  通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</li>
<li>192.168.6.129 远程服务器的域名（当然也可以使用该服务器ip地址）</li>
<li>/tmp/test.txt  欲复制到本机的位于远程服务器上的文件</li>
<li>/data 将远程文件复制到本地的绝对路径</li>
</ul>
<h4 id="2-Linux下rsync用法（支持断点续传）">2.Linux下rsync用法（支持断点续传）</h4>
<h5 id="2-1文件断点下载">2.1文件断点下载</h5>
<pre class="line-numbers language-none"><code class="language-none"># 将远程服务器192.168.6.129的&#x2F;data&#x2F;large.tar.gz文件复制到当前服务器&#x2F;tmp目录
rsync -P --rsh&#x3D;ssh root@192.168.6.129:&#x2F;data&#x2F;large.tar.gz &#x2F;tmp&#x2F;targe.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h5 id="2-2文件断点上传">2.2文件断点上传</h5>
<pre class="line-numbers language-none"><code class="language-none"># 将当前服务器的&#x2F;tmp&#x2F;targe.tar.gz文件上传到远程服务器192.168.6.129的&#x2F;data目录下
rsync -P --rsh&#x3D;ssh &#x2F;tmp&#x2F;targe.tar.gz root@192.168.6.129:&#x2F;data&#x2F;large.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h5 id="2-3文件目录断点下载">2.3文件目录断点下载</h5>
<pre class="line-numbers language-none"><code class="language-none"># 将远程服务器192.168.6.129的&#x2F;data目录复制到当前服务器&#x2F;data目录
rsync -P --rsh&#x3D;ssh -r root@192.168.6.129:&#x2F;data &#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h5 id="2-4文件目录断点上传">2.4文件目录断点上传</h5>
<pre class="line-numbers language-none"><code class="language-none"># 将当前服务器的&#x2F;data目录上传到远程服务器192.168.6.129的&#x2F;data目录
rsync -P --rsh&#x3D;ssh -r &#x2F;data root@192.168.6.129:&#x2F;data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>java内存诊断</title>
    <url>/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/</url>
    <content><![CDATA[<p>针对内存溢出、内存泄露的情况，需要定位哪些数据占用了大量内存，且不释放，并定位内存溢出或者泄露的代码。</p>
<h4 id="1-通过dump解析">1.通过dump解析</h4>
<p>java通过dump生成内存分析的文件，再通过eclipse memory analyzer工具分析定位。</p>
<h5 id="1-1-启动时添加">1.1.启动时添加</h5>
<p>启动jar包时添加红字部分，便于通过jvm监控工具链接程序，并进行内存监控。</p>
<pre class="line-numbers language-none"><code class="language-none">java -jar \
-Dspring.profiles.active&#x3D;$&#123;PROFILE&#125; \
-Djava.rmi.server.hostname&#x3D;$&#123;IP&#125; \
-Dcom.sun.management.jmxremote \
-Dcom.sun.management.jmxremote.port&#x3D;1099 \
-Dcom.sun.management.jmxremote.rmi.port&#x3D;1099 \
-Dcom.sun.management.jmxremote.authenticate&#x3D;false \
-Dcom.sun.management.jmxremote.ssl&#x3D;false \
bill.1.0.0.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="1-2-jvm监控工具">1.2.jvm监控工具</h5>
<p>C:\Program Files (x86)\Java\jdk1.8.0_191\bin\jvisualvm.exe</p>
<h6 id="1）添加要监控的服务器">1）添加要监控的服务器</h6>
<p><img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-01.png" alt></p>
<h6 id="2）监控内存、cpu、线程使用情况">2）监控内存、cpu、线程使用情况</h6>
<p>点击堆Dump即可生成内存分析文件，系统会提示文件存储在服务器上的位置。Docker容器放在设置的数据目录下。</p>
<p>比如生成文件/tmp/heapdump-1589453851824.hprof，把文件下载到本地，等待分析。<br>
<img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-02.png" alt>	<br>
<img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-03.png" alt></p>
<h5 id="1-3-eclipse-memory-analyzer工具">1.3.eclipse memory analyzer工具</h5>
<p>使用本工具打开上个步骤生成的hprof文件，会生成如下图所示。<br>
<img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-04.png" alt></p>
<p><img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-05.png" alt></p>
<p><img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-06.png" alt></p>
<h4 id="2-通过arthas在线查看">2.通过arthas在线查看</h4>
<p>arthas服务端</p>
<pre class="line-numbers language-none"><code class="language-none">docker exec -i provider-auth \
&#x2F;bin&#x2F;sh -c &#39;java -jar &#x2F;opt&#x2F;arthas&#x2F;arthas-boot.jar 6 --attach-only --session-timeout&#x3D;31536000 --tunnel-server ws:&#x2F;&#x2F;172.19.115.12:7777&#x2F;ws --agent-id 172.19.115.8&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>手工调试：</p>
<pre class="line-numbers language-none"><code class="language-none">docker exec -it provider-auth sh

java -jar &#x2F;opt&#x2F;arthas&#x2F;arthas-boot.jar 6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>–attach-only # 表示非交互式启动<br>
–tunnel-server # 表示tunnel-server地址和端口<br>
–agent-id # 表示当前arthas的标识</p>
<p><img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-07.png" alt></p>
<p>常用命令：<br>
help    # 帮助<br>
dashboard # 查看面板<br>
thread  # 查看所有线程<br>
thread -b # 查看锁住的线程<br>
thread -n 3 # 查看前3个占用cpu最高的线程</p>
<p>dashboard命令的使用<br>
<img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-08.png" alt></p>
<p>thread命令的使用<br>
下面的例子查看线程id为103的线程，显示出这个线程执行的代码为rabbitmq监听，可以通过这种方式定位出问题的代码。<br>
<img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-09.png" alt></p>
<p>heapdum生成内存分析文件<br>
<img src="/2021/12/23/java%E5%86%85%E5%AD%98%E8%AF%8A%E6%96%AD/java-memory-10.png" alt></p>
]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>linux乱码文件重命名</title>
    <url>/2021/12/23/linux%E4%B9%B1%E7%A0%81%E6%96%87%E4%BB%B6%E9%87%8D%E5%91%BD%E5%90%8D/</url>
    <content><![CDATA[<h4 id="1-每个文件有唯一的索引号">1.每个文件有唯一的索引号</h4>
<h4 id="2-获得索引号-命令：ls-i">2.获得索引号(命令：ls -i)</h4>
<pre class="line-numbers language-none"><code class="language-none">$ ls -i
 281474977250287 _config.landscape.yml  3940649674488860 public&#x2F;
 281474977250288 _config.yml             281474977250290 scaffolds&#x2F;
1970324837515388 db.json                 281474977250294 source&#x2F;
 562949953960870 node_modules&#x2F;           281474977250297 themes&#x2F;
3940649674489031 package.json            281474977257164 yarn.lock
3377699721068038 package-lock.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="3-find命令重命名：">3.find命令重命名：</h4>
<pre class="line-numbers language-none"><code class="language-none"># -exec后为shell命令，&#123;&#125;代表当前文件名，\;表示shell命令结束
find . -inum 索引号 -exec mv &#123;&#125; newname \;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="4-批量重命名：">4.批量重命名：</h4>
<pre class="line-numbers language-none"><code class="language-none"># awk的printf命令与C语言类似，$1表示已空格分隔的第一个参数，++i变量未初始化，默认为0
ls -i | awk &#39;&#123;printf(&quot;find . -inum %s -exec mv &#123;&#125; %03d.txt \;\n&quot;,$1,++i)&#125;&#39; | sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql关联更新与删除</title>
    <url>/2021/12/23/mysql%E5%85%B3%E8%81%94%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%88%A0%E9%99%A4/</url>
    <content><![CDATA[<h4 id="1-更新子查询语法：">1.更新子查询语法：</h4>
<pre class="line-numbers language-none"><code class="language-none">UPDATE ycd_t_match_term t
INNER JOIN (
    SELECT r.&#96;term_id&#96;,
        DATE_ADD(
        MAX(m.&#96;start_date&#96;),
        INTERVAL 4 HOUR
        ) max_start_date
    FROM ycd_t_term_match_relation r, ycd_t_match m
    WHERE r.&#96;match_id&#96; &#x3D; m.id
    GROUP BY r.&#96;term_id&#96;
) a ON a.term_id &#x3D; t.&#96;id&#96;
SET t.&#96;settlement_date&#96; &#x3D; a.max_start_date
WHERE t.&#96;settlement_date&#96; IS NULL;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="2-删除子查询语法：">2.删除子查询语法：</h4>
<pre class="line-numbers language-none"><code class="language-none">DELETE d FROM ycd_t_user_activity d
WHERE d.id IN (
SELECT id
FROM
(
    SELECT a.id
    FROM ycd_t_user_activity a
    WHERE a.id !&#x3D; (
        SELECT MIN(e.id)
        FROM ycd_t_user_activity e
        WHERE e.&#96;user_id&#96; &#x3D; a.user_id)
    ) AS X
);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mongo安装</title>
    <url>/2021/12/23/mongo%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h4 id="安装">安装</h4>
<pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;data&#x2F;mongo
chown -R 1000:1000 &#x2F;data&#x2F;mongo
 
docker run --restart always \
-e MONGO_INITDB_ROOT_USERNAME&#x3D;root \
-e MONGO_INITDB_ROOT_PASSWORD&#x3D;LWOqa2FtfCZ9As6h \
-d -p 27017:27017 \
-v &#x2F;data&#x2F;mongo:&#x2F;data&#x2F;db \
--name mongo \
mongo:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>MONGO_INITDB_ROOT_USERNAME：用户名</li>
<li>MONGO_INITDB_ROOT_PASSWORD：密码</li>
<li>27017：端口号</li>
<li>/data/mongo：存放数据目录</li>
</ul>
<h4 id="创建用户">创建用户</h4>
<p>1、授权普通用户</p>
<pre class="line-numbers language-none"><code class="language-none">db.createUser(&#123;user: &quot;smartx-oa&quot;,pwd: &quot;FPob40Ddk7Wz&quot;,roles: [&#123; role: &quot;readWrite&quot;, db: &quot;smartx-oa&quot; &#125;]&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>2、创建admin用户</p>
<pre class="line-numbers language-none"><code class="language-none">db.createUser(&#123; user: &quot;root&quot;, pwd: &quot;LWOqa2FtfCZ9As6h&quot;, roles: [&#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125;] &#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>3、删除用户</p>
<pre class="line-numbers language-none"><code class="language-none">db.dropUser(&quot;smartx-oa&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mongo</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql分区表</title>
    <url>/2021/12/23/mysql%E5%88%86%E5%8C%BA%E8%A1%A8/</url>
    <content><![CDATA[<p>mysql 表分区的几种方式：</p>
<p>RANGE分区：基于属于一个给定连续区间的列值，把多行分配给分区。<br>
LIST分区：类似于按RANGE分区，区别在于LIST分区是基于列值匹配一个离散值集合中的某个值来进行选择。<br>
HASH分区：基于用户定义的表达式的返回值来进行选择的分区，该表达式使用将要插入到表中的这些行的列值进行计算。这个函数可以包含MySQL中有效的、产生非负整数值的任何表达式。<br>
KEY分区：类似于按HASH分区，区别在于KEY分区只支持计算一列或多列，且MySQL服务器提供其自身的哈希函数。必须有一列或多列包含整数值。<br>
以xxl-job为例，这是一张日志表，每天产上约30万条记录</p>
<h4 id="1-创建表xxl-job-log并创建分区">1. 创建表xxl_job_log并创建分区</h4>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;* 注意：需要id和trigger_time作为双主键，有主键的表但分区字段（trigger_time）不是主键，新建分区表时会报A PRIMARY KEY must include all columns in the table’s partitioning function *&#x2F;
CREATE TABLE &#96;xxl_job_log&#96; (
  &#96;id&#96; BIGINT(20) NOT NULL AUTO_INCREMENT,
  &#96;job_group&#96; INT(11) NOT NULL COMMENT &#39;执行器主键ID&#39;,
  &#96;job_id&#96; INT(11) NOT NULL COMMENT &#39;任务，主键ID&#39;,
  &#96;executor_address&#96; VARCHAR(255) DEFAULT NULL COMMENT &#39;执行器地址，本次执行的地址&#39;,
  &#96;executor_handler&#96; VARCHAR(255) DEFAULT NULL COMMENT &#39;执行器任务handler&#39;,
  &#96;executor_param&#96; VARCHAR(512) DEFAULT NULL COMMENT &#39;执行器任务参数&#39;,
  &#96;executor_sharding_param&#96; VARCHAR(20) DEFAULT NULL COMMENT &#39;执行器任务分片参数，格式如 1&#x2F;2&#39;,
  &#96;executor_fail_retry_count&#96; INT(11) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;失败重试次数&#39;,
  &#96;trigger_time&#96; DATETIME NOT NULL COMMENT &#39;调度-时间&#39;,
  &#96;trigger_code&#96; INT(11) NOT NULL COMMENT &#39;调度-结果&#39;,
  &#96;trigger_msg&#96; TEXT COMMENT &#39;调度-日志&#39;,
  &#96;handle_time&#96; DATETIME DEFAULT NULL COMMENT &#39;执行-时间&#39;,
  &#96;handle_code&#96; INT(11) NOT NULL COMMENT &#39;执行-状态&#39;,
  &#96;handle_msg&#96; TEXT COMMENT &#39;执行-日志&#39;,
  &#96;alarm_status&#96; TINYINT(4) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;告警状态：0-默认、1-无需告警、2-告警成功、3-告警失败&#39;,
  PRIMARY KEY (&#96;id&#96;, &#96;trigger_time&#96;),
  KEY &#96;I_trigger_time&#96; (&#96;trigger_time&#96;),
  KEY &#96;I_handle_code&#96; (&#96;handle_code&#96;),
  KEY &#96;I_alarm_status&#96; (&#96;alarm_status&#96;),
  KEY &#96;I_trigger_code&#96; (&#96;trigger_code&#96;),
  KEY &#96;I_job_group&#96; (&#96;job_group&#96;),
  KEY &#96;I_job_id&#96; (&#96;job_id&#96;)
) ENGINE&#x3D;INNODB AUTO_INCREMENT&#x3D;1 DEFAULT CHARSET&#x3D;utf8mb4;
 
&#x2F;* 依托字段trigger_time新建分区表，每天一个分区，此处手工创建，需再建一个定时创建分区的任务 *&#x2F;
ALTER TABLE xxl_job_log PARTITION BY RANGE COLUMNS(trigger_time)(
    PARTITION p20211212 VALUES LESS THAN(&#39;2021-12-12&#39;),
    PARTITION p20211213 VALUES LESS THAN(&#39;2021-12-13&#39;),
    PARTITION p20211214 VALUES LESS THAN(&#39;2021-12-14&#39;),
    PARTITION p20211215 VALUES LESS THAN(&#39;2021-12-15&#39;),
    PARTITION p20211216 VALUES LESS THAN(&#39;2021-12-16&#39;)
);
 
&#x2F;* 查询分区表情况 *&#x2F;
SELECT partition_name, partition_description AS val FROM information_schema.partitions
WHERE table_name&#x3D;&#39;xxl_job_log&#39; AND table_schema&#x3D;&#39;xxl_job&#39;;     
 
partition_name  val          
--------------  --------------
p20211212       &#39;2021-12-12&#39; 
p20211213       &#39;2021-12-13&#39; 
p20211214       &#39;2021-12-14&#39; 
p20211215       &#39;2021-12-15&#39; 
p20211216       &#39;2021-12-16&#39;
 
&#x2F;* 查询分区表情况 *&#x2F;
EXPLAIN PARTITIONS SELECT * FROM xxl_job_log;
    id  select_type  table        partitions                                                             type    possible_keys  key     key_len  ref       rows  filtered  Extra  
------  -----------  -----------  ---------------------------------------------------------------------  ------  -------------  ------  -------  ------  ------  --------  --------
     1  SIMPLE       xxl_job_log  p20211212,p20211213,p20211214,p20211215,p20211216,p20211217,p20211218  ALL     (NULL)         (NULL)  (NULL)   (NULL)  583426    100.00  (NULL)
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="2-创建自动分区">2.创建自动分区</h4>
<h5 id="2-1-创建自动分区存储过程pro-xxl-job-log">2.1 创建自动分区存储过程pro_xxl_job_log</h5>
<p>创建存储过程，每天新增3个分区，并删除15天前的分区</p>
<pre class="line-numbers language-none"><code class="language-none">DELIMITER $$
DROP PROCEDURE IF EXISTS pro_xxl_job_log
$$
CREATE PROCEDURE pro_xxl_job_log()
BEGIN
  DECLARE v_sysdate DATE;
  DECLARE v_mindate DATE;
  DECLARE v_maxdate DATE;
  DECLARE v_pt VARCHAR(20);
  DECLARE v_maxval VARCHAR(20);
  DECLARE i INT;
   
  &#x2F;*增加新分区代码，执行时，不要复制此行*&#x2F;
  SELECT MAX(CAST(REPLACE(partition_description, &#39;&#39;&#39;&#39;, &#39;&#39;) AS DATE)) AS val
  INTO   v_maxdate
  FROM   INFORMATION_SCHEMA.PARTITIONS
  WHERE  TABLE_NAME &#x3D; &#39;xxl_job_log&#39; AND TABLE_SCHEMA &#x3D; &#39;xxl_job&#39;;
   
  SET v_sysdate &#x3D; SYSDATE();
   
  WHILE v_maxdate &lt;&#x3D; (v_sysdate + INTERVAL 3 DAY) DO
    SET v_pt &#x3D; DATE_FORMAT(v_maxdate+ INTERVAL 1 DAY ,&#39;%Y%m%d&#39;);
    SET v_maxval &#x3D; DATE_FORMAT(v_maxdate + INTERVAL 1 DAY, &#39;%Y-%m-%d&#39;);
    SET @sql &#x3D; CONCAT(&#39;alter table xxl_job_log add partition (partition p&#39;, v_pt, &#39; values less than(&#39;&#39;&#39;, v_maxval, &#39;&#39;&#39;))&#39;);
    -- SELECT @sql;
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    SET v_maxdate &#x3D; v_maxdate + INTERVAL 1 DAY;
  END WHILE;
   
  &#x2F;*删除旧分区，执行时，不要复制此行*&#x2F;
  SELECT MIN(CAST(REPLACE(partition_description, &#39;&#39;&#39;&#39;, &#39;&#39;) AS DATE)) AS val
  INTO   v_mindate
  FROM   INFORMATION_SCHEMA.PARTITIONS
  WHERE  TABLE_NAME &#x3D; &#39;xxl_job_log&#39; AND TABLE_SCHEMA &#x3D; &#39;xxl_job&#39;;
     
  WHILE v_mindate &lt;&#x3D; (v_sysdate - INTERVAL 15 DAY) DO
    SET v_pt &#x3D; DATE_FORMAT(v_mindate - INTERVAL 1 DAY,&#39;%Y%m%d&#39;);
    SET @sql &#x3D; CONCAT(&#39;alter table xxl_job_log drop partition p&#39;, v_pt);
    -- SELECT @sql;
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    SET v_mindate &#x3D; v_mindate + INTERVAL 1 DAY;
  END WHILE;
  
END$$
DELIMITER ;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试存储过程</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;* 调用存储过程*&#x2F;
CALL pro_xxl_job_log;
 
 &#x2F;* 查询分区表情况 *&#x2F;
SELECT partition_name, partition_description AS val FROM information_schema.partitions
WHERE table_name&#x3D;&#39;xxl_job_log&#39; AND table_schema&#x3D;&#39;xxl_job&#39;;     
 
partition_name  val          
--------------  --------------
p20211212       &#39;2021-12-12&#39; 
p20211213       &#39;2021-12-13&#39; 
p20211214       &#39;2021-12-14&#39; 
p20211215       &#39;2021-12-15&#39; 
p20211216       &#39;2021-12-16&#39; 
p20211217       &#39;2021-12-17&#39; 
p20211218       &#39;2021-12-18&#39;
 
由上可见新增了p20211217、p20211218两个分区<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-2-开启事件">2.2 开启事件</h5>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;* 查询是否开启事件 *&#x2F;
show variables like &quot;event_scheduler&quot;;
Variable_name    Value  
---------------  --------
event_scheduler  OFF   
 
&#x2F;* 临时开启事件 *&#x2F;
SET GLOBAL event_scheduler &#x3D; ON;
永久开启事件：修改mysql配置文件my.cnf，在[mysqld]下面增加：event_scheduler&#x3D;ON
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-3-编写事件">2.3 编写事件</h5>
<p>设置从2021-12-15 00:00:00开始，每24小时执行一次</p>
<pre class="line-numbers language-none"><code class="language-none">DELIMITER $$
DROP EVENT IF EXISTS auto_pt $$
CREATE EVENT auto_pt
ON SCHEDULE
EVERY 24 HOUR
STARTS &#39;2021-12-15 00:00:00&#39;
DO
BEGIN
    CALL pro_xxl_job_log();
END$$
DELIMITER ;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>查看事件</p>
<pre class="line-numbers language-none"><code class="language-none">show events;
 
Db       Name     Definer  Time zone  Type       Execute at  Interval value  Interval field  Starts               Ends    Status   Originator  character_set_client  collation_connection  Database Collation 
-------  -------  -------  ---------  ---------  ----------  --------------  --------------  -------------------  ------  -------  ----------  --------------------  --------------------  --------------------
xxl_job  auto_pt  root@%   SYSTEM     RECURRING  (NULL)      24              HOUR            2021-12-15 00:00:00  (NULL)  ENABLED           1  utf8                  utf8_general_ci       utf8mb4_unicode_ci<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql查询慢SQL</title>
    <url>/2021/12/23/mysql%E6%9F%A5%E8%AF%A2%E6%85%A2SQL/</url>
    <content><![CDATA[<h4 id="1-查看日志是否打开">1.查看日志是否打开</h4>
<pre class="line-numbers language-none"><code class="language-none">SHOW VARIABLES LIKE &#39;%slow%&#39;;

Variable_name              Value                                              
-------------------------  ---------------------------------------------------
log_slow_admin_statements  OFF                                                
log_slow_slave_statements  OFF                                                
slow_launch_time           2                                                  
slow_query_log             ON                                                 
slow_query_log_file        &#x2F;data&#x2F;usr-data&#x2F;mysql-5.7.25&#x2F;2dc304b65a14-slow.log  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="2-设置打开日志">2.设置打开日志</h4>
<p>如果slow_query_log不是on，则设置为on</p>
<pre class="line-numbers language-none"><code class="language-none">SET GLOBAL slow_query_log &#x3D; on;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>slow_query_log_file表示日志路径</p>
<h4 id="3-设置时间大于1s的记录到慢日志中">3.设置时间大于1s的记录到慢日志中</h4>
<pre class="line-numbers language-none"><code class="language-none">SET GLOBAL long_query_time &#x3D; 1;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle安装</title>
    <url>/2021/12/23/oracle%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h4 id="oracle安装">oracle安装</h4>
<p>1.安装依赖包</p>
<pre class="line-numbers language-none"><code class="language-none">yum -y install gcc gcc-c++ make binutils compat-libstdc++-33 elfutils-libelf \
elfutils-libelf-devel glibc glibc-common glibc-devel \
libaio libaio-devel libgcc libstdc++ libstdc++-devel \
unixODBC unixODBC-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>2.修改内核参数</p>
<pre class="line-numbers language-none"><code class="language-none">[root@oracledb ~]# vi&#x2F;etc&#x2F;sysctl.conf #末尾添加如下

fs.aio-max-nr &#x3D; 1048576
fs.file-max &#x3D; 6553600

kernel.shmall &#x3D; 10523004
kernel.shmmax &#x3D; 107374182400
kernel.shmmni &#x3D; 4096
kernel.sem &#x3D; 610 86620 100 142

net.ipv4.ip_local_port_range&#x3D; 9000 65500
net.core.rmem_default&#x3D;262144
net.core.wmem_default&#x3D;4194304
net.core.rmem_max&#x3D;4194304
net.core.wmem_max&#x3D;1048576

[root@oracledb ~]# sysctl -p (备注：用于输出配置后的结果，如果有错误会提示)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>3.修改系统资源限制(打开进程数和文件数)</p>
<pre class="line-numbers language-none"><code class="language-none">[root@oracledb ~]# vi&#x2F;etc&#x2F;security&#x2F;limits.conf #末尾添加如下

[plain] view plain copy 在CODE上查看代码片派生到我的代码片
oracle soft nproc 2047
oracle hard nproc 16384
oracle soft nofile 1024
oracle hard nofile 65536

grid soft nproc 2047
grid hard nproc 16384
grid soft nofile 1024
grid hard nofile 65536

[root@oracledb ~]# vi &#x2F;etc&#x2F;pam.d&#x2F;login
session required pam_namespace.so #下面添加一条pam_limits.so
session required &#x2F;lib64&#x2F;security&#x2F;pam_limits.so
session required &#x2F;lib&#x2F;security&#x2F;pam_limits.so
session required pam_limits.so<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>4.创建用户和组</p>
<pre class="line-numbers language-none"><code class="language-none">[root@oracledb ~]# groupadd oinstall
[root@oracledb ~]# groupadd dba
[root@oracledb ~]# groupadd oper
[root@oracledb ~]# useradd -u600 -g oinstall oracle
[root@oracledb ~]# usermod -G dba,oper oracle
[root@oracledb ~]# id oracle
[root@oracledb ~]# passwd oracle<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>5.创建安装目录并赋权</p>
<pre class="line-numbers language-none"><code class="language-none">[root@oracledb ~]# mkdir &#x2F;u01
[root@oracledb ~]# mkdir &#x2F;u02
[root@oracledb ~]# chown -R oracle:oinstall &#x2F;u01
[root@oracledb ~]# chown -R oracle:oinstall &#x2F;u02
[root@oracledb ~]# su oracle
[root@oracledb ~]# mkdir -p &#x2F;u01&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;db_1
[root@oracledb ~]# mkdir -p &#x2F;u02&#x2F;oradata
[root@oracledb ~]# mkdir -p &#x2F;u02&#x2F;oradata&#x2F;oracledb #oracledb为你数据库实例名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>6.设置oracle环境变量(使用oracle帐号登录桌面，并开启terminal窗口文件最后最后加入如下环境变量的设置行)</p>
<pre class="line-numbers language-none"><code class="language-none">[oracle@oracledb ~]# vi &#x2F;home&#x2F;oracle&#x2F;.bash_profile
ORACLE_BASE&#x3D;&#x2F;u01&#x2F;app&#x2F;oracle; export ORACLE_BASE
ORACLE_HOME&#x3D;$ORACLE_BASE&#x2F;product&#x2F;11.2.0&#x2F;db_1; export ORACLE_HOME
LD_LIBRARY_PATH&#x3D;$ORACLE_HOME&#x2F;lib; export LD_LIBRARY_PATH
ORACLE_SID&#x3D;oracledb; export ORACLE_SID
ORA_NLS33&#x3D;$ORACLE_HOME&#x2F;nls&#x2F;admin&#x2F;data; export ORA_NLS33
NLS_LANG&#x3D;american_america.zhs16gbk;export NLS_LANG
PATH&#x3D;$ORACLE_HOME&#x2F;bin:$PATH; export PATH
[oracle@oracledb ~]# source &#x2F;home&#x2F;oracle&#x2F;.bash_profile（使配置立即生效）
[oracle@oracledb ~]# env（检查环境变量设置是否OK）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>7.上传安装文件</p>
<p>8.解压oracle安装文件(进入：/home/oracle/Downloads目录)</p>
<pre class="line-numbers language-none"><code class="language-none">[oracle@oracledb~]# unzip -o -d &#x2F;home&#x2F;oracle&#x2F;Downloads&#x2F;linuxamd64_12c_database_1of2.zip
[oracle@oracledb~]# unzip -o -d &#x2F;home&#x2F;oracle&#x2F;Downloads&#x2F;linuxamd64_12c_database_2of2.zip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>9.静默安装oracle</p>
<p>8、安装oracle软件</p>
<pre class="line-numbers language-none"><code class="language-none">$ cp -R &#x2F;home&#x2F;oracle&#x2F;database&#x2F;response &#x2F;home&#x2F;oracle &#x2F;&#x2F;复制一份模板
$ cd &#x2F;home&#x2F;oracle&#x2F;response
$ vi db_install.rsp &#x2F;&#x2F;修改安装应答文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>三个文件作用分别是：<br>
db_install.rsp：安装应答<br>
dbca.rsp：创建数据库应答<br>
netca.rsp：建立监听、本地服务名等网络设置应答</p>
<p>特别是组件配置事后请用如右语句查询核实(select comp_id, comp_name, version, status from dba_registry)</p>
<p>配置安装应答文件db_install.rsp，如下：</p>
<pre class="line-numbers language-none"><code class="language-none">oracle.install.option&#x3D;INSTALL_DB_SWONLY
ORACLE_HOSTNAME&#x3D;nmgdboracle &#x2F;&#x2F;通过hostname命令获取
UNIX_GROUP_NAME&#x3D;oinstall
INVENTORY_LOCATION&#x3D;&#x2F;home&#x2F;oracle&#x2F;oraInventory
SELECTED_LANGUAGES&#x3D;en,zh_CN
ORACLE_HOME&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;dbhome_1
ORACLE_BASE&#x3D;&#x2F;home&#x2F;oracle&#x2F;app
oracle.install.db.InstallEdition&#x3D;EE
oracle.install.db.EEOptionsSelection&#x3D;true
oracle.install.db.optionalComponents&#x3D;oracle.rdbms.partitioning:11.2.0.3.0,oracle.oraolap:11.2.0.3.0,oracle.rdbms.dm:11.2.0.3.0,oracle.rdbms.dv:11.2.0.3.0,oracle.rdbms.lbac:11.2.0.3.0,oracle.rdbms.rat:11.2.0.3.0
oracle.install.db.DBA_GROUP&#x3D;dba
oracle.install.db.OPER_GROUP&#x3D;oinstall
oracle.install.db.config.starterdb.type&#x3D;GENERAL_PURPOSE
oracle.install.db.config.starterdb.globalDBName&#x3D;xtwl
oracle.install.db.config.starterdb.SID&#x3D;xtwl
oracle.install.db.config.starterdb.characterSet&#x3D;AL32UTF8
oracle.install.db.config.starterdb.memoryOption&#x3D;true
oracle.install.db.config.starterdb.memoryLimit&#x3D;10240 &#x2F;&#x2F;物理内存的60%左右
oracle.install.db.config.starterdb.password.ALL&#x3D;oracle &#x2F;&#x2F;注意修改
oracle.install.db.config.starterdb.control&#x3D;DB_CONTROL
SECURITY_UPDATES_VIA_MYORACLESUPPORT&#x3D;false
DECLINE_SECURITY_UPDATES&#x3D;true &#x2F;&#x2F;一定要是true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">$cd &#x2F;home&#x2F;oracle&#x2F;database
$.&#x2F;runInstaller -silent -responseFile &#x2F;home&#x2F;oracle&#x2F;response&#x2F;db_install.rsp &#x2F;&#x2F;了解安装进度 tail -f &#x2F;home&#x2F;oracle&#x2F;oraInventory&#x2F;logs&#x2F;installActions*log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>//当安装界面出现如下信息的时候<br>
The installation of Oracle Database 11g was successful.<br>
Please check ‘/home/oracle/oraInventory/logs/silentInstall2016-02-04_09-21-13AM.log’ for more details.</p>
<p>As a root user, execute the following script(s):</p>
<ol>
<li>/home/oracle/oraInventory/orainstRoot.sh</li>
<li>/home/oracle/app/oracle/product/11.2.0/dbhome_1/root.sh</li>
</ol>
<p>Successfully Setup Software.</p>
<p>//在新打开的root登录的窗口中执行下面的脚本</p>
<pre class="line-numbers language-none"><code class="language-none">#&#x2F;home&#x2F;oracle&#x2F;oraInventory&#x2F;orainstRoot.sh
#&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oracle&#x2F;product&#x2F;11.2.0&#x2F;dbhome_1&#x2F;root.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>//执行完上面的脚本后回到安装界面按下Enter键以继续</p>
<p>9、配置oracle监听：</p>
<pre class="line-numbers language-none"><code class="language-none">$cd &#x2F;home&#x2F;oracle&#x2F;response

$netca &#x2F;silent &#x2F;responsefile &#x2F;home&#x2F;oracle&#x2F;response&#x2F;netca.rsp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>成功运行后，在/home/oracle/app/oracle/product/11.2.0/dbhome_1/network/admin目录下生成sqlnet.ora和listener.ora两个文件。<br>
通过 netstat -tlnp 命令，看到<br>
tcp 0 0 0.0.0.0:1521 0.0.0.0:* LISTEN 22494/tnslsnr<br>
说明监听器已经在1521端口上开始工作了</p>
<p>10、安装oracle数据库</p>
<pre class="line-numbers language-none"><code class="language-none">$cd &#x2F;home&#x2F;oracle&#x2F;response
$vi dbca.rsp &#x2F;&#x2F;修改创建数据库应答文件

RESPONSEFILE_VERSION &#x3D; &quot;11.2.0&quot;
OPERATION_TYPE &#x3D; &quot;createDatabase&quot;
#-----------------------*** End of GENERAL section ***------------------------
GDBNAME &#x3D; &quot;xtwl&quot;
SID &#x3D; &quot;xtwl&quot;
TEMPLATENAME &#x3D; &quot;General_Purpose.dbc&quot;
SYSPASSWORD &#x3D; &quot;oracle&quot;
SYSTEMPASSWORD &#x3D; &quot;oracle&quot;
DATAFILEDESTINATION &#x3D; &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata
#RECOVERYAREADESTINATION&#x3D;&#x2F;home&#x2F;oracle&#x2F;backup &#x2F;&#x2F;该项参数设置无效，默认恢复表空间仍然是$ORACLE_BASE&#x2F;flash_recovery_area
CHARACTERSET &#x3D; &quot;AL32UTF8&quot;
TOTALMEMORY &#x3D; &quot;10240&quot; &#x2F;&#x2F;物理内存的60%左右
#-----------------------*** End of CREATEDATABASE section ***------------------------

$dbca -silent -responseFile &#x2F;home&#x2F;oracle&#x2F;response&#x2F;dbca.rsp (静默卸载：dbca -silent -deleteDatabase -sourcedb xtwl -sid xtwl)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>看到下面语句说明创建成功<br>
Look at the log file “/home/oracle/app/cfgtoollogs/dbca/xtwl/xtwl.log” for further details.</p>
<p>查看创建情况</p>
<pre class="line-numbers language-none"><code class="language-none">$cat &#x2F;home&#x2F;oracle&#x2F;app&#x2F;cfgtoollogs&#x2F;dbca&#x2F;xtwl&#x2F;xtwl.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>建库后实例检查：</p>
<pre class="line-numbers language-none"><code class="language-none">$ps -ef | grep ora_ | grep -v grep
oracle 39754 1 0 10:20 ? 00:00:00 ora_pmon_xtwl
oracle 39756 1 0 10:20 ? 00:00:00 ora_vktm_xtwl
oracle 39760 1 0 10:20 ? 00:00:00 ora_gen0_xtwl
oracle 39762 1 0 10:20 ? 00:00:00 ora_diag_xtwl
oracle 39764 1 0 10:20 ? 00:00:00 ora_dbrm_xtwl
oracle 39766 1 0 10:20 ? 00:00:00 ora_psp0_xtwl
oracle 39768 1 0 10:20 ? 00:00:00 ora_dia0_xtwl
oracle 39770 1 0 10:20 ? 00:00:00 ora_mman_xtwl
oracle 39772 1 0 10:20 ? 00:00:00 ora_dbw0_xtwl
oracle 39774 1 0 10:20 ? 00:00:00 ora_lgwr_xtwl
oracle 39776 1 0 10:20 ? 00:00:00 ora_ckpt_xtwl
oracle 39778 1 0 10:20 ? 00:00:00 ora_smon_xtwl
oracle 39780 1 0 10:20 ? 00:00:00 ora_reco_xtwl
oracle 39782 1 0 10:20 ? 00:00:00 ora_mmon_xtwl
oracle 39784 1 0 10:20 ? 00:00:00 ora_mmnl_xtwl
oracle 39786 1 0 10:20 ? 00:00:00 ora_d000_xtwl
oracle 39788 1 0 10:20 ? 00:00:00 ora_s000_xtwl
oracle 39798 1 0 10:20 ? 00:00:00 ora_qmnc_xtwl
oracle 39813 1 0 10:20 ? 00:00:00 ora_cjq0_xtwl
oracle 39815 1 0 10:20 ? 00:00:00 ora_q000_xtwl
oracle 39817 1 0 10:20 ? 00:00:00 ora_q001_xtwl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>查看监听状态</p>
<pre class="line-numbers language-none"><code class="language-none">$lsnrctl status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>三、参数修改：</p>
<p>需要手动备份spfile文件：</p>
<pre class="line-numbers language-none"><code class="language-none">cp $ORACLE_HOME&#x2F;dbs&#x2F;spfilextwl.ora $ORACLE_HOME&#x2F;dbs&#x2F;spfilextwl_bak.ora<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>1、修改最大连接数：</p>
<pre class="line-numbers language-none"><code class="language-none">sql&gt; show parameter processes;
sql&gt; alter system set processes&#x3D;2000 scope &#x3D; spfile;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>2、禁止回收站功能：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; show parameter recyclebin;
SQL&gt; alter system set recyclebin&#x3D;off scope&#x3D;spfile;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>3、关闭审计功能：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; show parameter audit;
SQL&gt; alter system set audit_trail&#x3D;NONE scope&#x3D;spfile;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>4、修改用户密码用不过期：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; select * from dba_profiles s where s.profile&#x3D;&#39;DEFAULT&#39; and resource_name&#x3D;&#39;PASSWORD_LIFE_TIME&#39;;
PROFILE RESOURCE_NAME RESOURCE
------------------------------ -------------------------------- --------
LIMIT
----------------------------------------
DEFAULT PASSWORD_LIFE_TIME PASSWORD
180
SQL&gt; alter profile default limit password_life_time unlimited;
Profile altered.
SQL&gt; select * from dba_profiles s where s.profile&#x3D;&#39;DEFAULT&#39; and resource_name&#x3D;&#39;FAILED_LOGIN_ATTEMPTS&#39;;
PROFILE RESOURCE_NAME RESOURCE
------------------------------ -------------------------------- --------
LIMIT
----------------------------------------
DEFAULT FAILED_LOGIN_ATTEMPTS PASSWORD
10
SQL&gt; alter profile default limit failed_login_attempts unlimited;
Profile altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>5、修改控制文件里可重复使用的记录所能保存的最小天数：（一般设置为45天）</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; show parameter control;

NAME TYPE VALUE
------------------------------------ ----------- ------------------------------
control_file_record_keep_time integer 7
control_files string &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwl&#x2F;control01.ctl, &#x2F;home&#x2F;oracle&#x2F;app&#x2F;flash_recovery_area&#x2F;xtwl&#x2F;control02.ctl
control_management_pack_access string DIAGNOSTIC+TUNING

SQL&gt; alter system set control_file_record_keep_time&#x3D;45 scope&#x3D;spfile;

System altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>6、设置数据库为自动内存管理模式：</p>
<p>（1）修改数据库为自动内存管理模式：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter system set memory_target&#x3D;10240M scope&#x3D;spfile; &#x2F;&#x2F;物理内存的60%左右。
System altered.

SQL&gt; alter system set memory_max_target&#x3D;10240M scope&#x3D;spfile; &#x2F;&#x2F;物理内存的60%左右。
System altered.

SQL&gt; alter system set sga_target&#x3D;0 scope&#x3D;spfile;
System altered.

SQL&gt; alter system set sga_max_size&#x3D;7168M scope&#x3D;spfile; &#x2F;&#x2F;实例内存的70%左右，即memory_max_target*70%，也即物理内存*60%*70%。
System altered.

SQL&gt; alter system set pga_aggregate_target&#x3D;0 scope&#x3D;spfile;
System altered.

SQL&gt; alter system set pre_page_sga&#x3D;FALSE scope&#x3D;spfile;
System altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>（2）重启数据库：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; shutdown immediate;
Database closed.
Database dismounted.
ORACLE instance shut down.
SQL&gt; startup;
ORACLE instance started.

Total System Global Area 2254802944 bytes
Fixed Size 2215344 bytes
Variable Size 1073742416 bytes
Database Buffers 1174405120 bytes
Redo Buffers 4440064 bytes
Database mounted.
Database opened.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>（3）查看各个内存参数设置：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; show parameter sga;

NAME TYPE VALUE
------------------------------------ ----------- ------------------------------
lock_sga boolean FALSE
pre_page_sga boolean FALSE
sga_max_size big integer 7G
sga_target big integer 0
SQL&gt; show parameter pga;

NAME TYPE VALUE
------------------------------------ ----------- ------------------------------
pga_aggregate_target big integer 0
SQL&gt; show parameter memory;

NAME TYPE VALUE
------------------------------------ ----------- ------------------------------
hi_shared_memory_address integer 0
memory_max_target big integer 10G
memory_target big integer 10G
shared_memory_address integer 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>四、修改redo log组以及大小：–为防止日志频繁切换，引起数据库性能低下问题。</p>
<p>1、创建redo日志存放目录：</p>
<pre class="line-numbers language-none"><code class="language-none">$ mkdir -p &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;
$ chmod 750 &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>2、查询日志信息：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; select group#,bytes&#x2F;1024&#x2F;1024,status from v$log;

GROUP# BYTES&#x2F;1024&#x2F;1024 STATUS
---------- --------------- ----------------
1 50 ACTIVE
2 50 CURRENT
3 50 ACTIVE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>3、查询日志目录：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; select * from v$logfile order by group#;

GROUP# STATUS TYPE MEMBER IS_
---------- ------- ------- ------------------------------------------ ----------------
1 ONLINE &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwl&#x2F;redo01.log NO
2 ONLINE &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwl&#x2F;redo02.log NO
3 ONLINE &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwl&#x2F;redo03.log NO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>4、新增两组日志组，每组500M：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter database add logfile group 4 &#39;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo04.log&#39; size 500M;

Database altered.

SQL&gt; alter database add logfile group 5 &#39;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo05.log&#39; size 500M;

Database altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>5、查询4、5两组日志是否成功添加：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; select group#,bytes&#x2F;1024&#x2F;1024,status from v$log;

GROUP# BYTES&#x2F;1024&#x2F;1024 STATUS
---------- --------------- ----------------
1 50 INACTIVE
2 50 CURRENT
3 50 INACTIVE
4 500 UNUSED
5 500 UNUSED<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>6、删除日志组1：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter database drop logfile group 1;

Database altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>7、删除日志组2报错：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter database drop logfile group 2;
alter database drop logfile group 2
*
ERROR at line 1:
ORA-01623: log 2 is current log for instance xtwl (thread 1) - cannot drop
ORA-00312: online log 2 thread 1: &#39;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwl&#x2F;redo02.log&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>8、需要手动切换日志多次，使新建的日志组能够应用：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter system switch logfile;

System altered.


SQL&gt; select group#,bytes&#x2F;1024&#x2F;1024,status from v$log;

GROUP# BYTES&#x2F;1024&#x2F;1024 STATUS
---------- --------------- ----------------
2 50 ACTIVE
3 50 INACTIVE
4 500 CURRENT
5 500 UNUSED

SQL&gt; alter system switch logfile;

System altered.

SQL&gt; select group#,bytes&#x2F;1024&#x2F;1024,status from v$log;

GROUP# BYTES&#x2F;1024&#x2F;1024 STATUS
---------- --------------- ----------------
2 50 ACTIVE
3 50 INACTIVE
4 500 ACTIVE
5 500 CURRENT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>9、使用alter system checkpoint将Active的日志状态置为INACTIVE：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter system checkpoint;

System altered.

SQL&gt; select group#,bytes&#x2F;1024&#x2F;1024,status from v$log;

GROUP# BYTES&#x2F;1024&#x2F;1024 STATUS
---------- --------------- ----------------
2 50 INACTIVE
3 50 INACTIVE
4 500 INACTIVE
5 500 CURRENT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>10、删除原2，3日志组：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter database drop logfile group 2;

Database altered.

SQL&gt; alter database drop logfile group 3;

Database altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>11、新增1，2，3日志组，每组500M：</p>
<pre class="line-numbers language-none"><code class="language-none">
SQL&gt; alter database add logfile group 1 &#39;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo01.log&#39; size 500M;

Database altered.

SQL&gt; alter database add logfile group 2 &#39;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo02.log&#39; size 500M;

Database altered.

SQL&gt; alter database add logfile group 3 &#39;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo03.log&#39; size 500M;

Database altered.

SQL&gt; SELECT group#, members, bytes&#x2F;1024&#x2F;1024 byte_mb, status FROM v$log;


GROUP# MEMBERS BYTE_MB STATUS
---------- ---------- ---------- ----------------
1 1 500 UNUSED
2 1 500 UNUSED
3 1 500 UNUSED
4 1 500 INACTIVE
5 1 500 CURRENT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>12、多次执行切换日志操作，使新建的日志组都能正常应用：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter system switch logfile;

System altered.

SQL&gt; alter system switch logfile;

System altered.

SQL&gt; alter system switch logfile;

System altered.

SQL&gt; SELECT group#, members, bytes&#x2F;1024&#x2F;1024 byte_mb, status FROM v$log;

GROUP# MEMBERS BYTE_MB STATUS
---------- ---------- ---------- ----------------
1 1 500 ACTIVE
2 1 500 ACTIVE
3 1 500 CURRENT
4 1 500 INACTIVE
5 1 500 ACTIVE


SQL&gt; select * from v$logfile order by group#;
GROUP# STATUS TYPE MEMBER IS_
---------- ------- ------- ------------------------------------------ ----------------
1 ONLINE &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo01.log NO
2 ONLINE &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo02.log NO
3 ONLINE &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo03.log NO
4 ONLINE &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo04.log NO
5 ONLINE &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwllog&#x2F;redo05.log NO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>13、删除原redo日志文件，释放磁盘空间：</p>
<pre class="line-numbers language-none"><code class="language-none">$ rm &#x2F;home&#x2F;oracle&#x2F;app&#x2F;oradata&#x2F;xtwl&#x2F;redo0*.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>五、修改数据库为归档日志模式：<br>
1、新建归档日志存放目录：</p>
<pre class="line-numbers language-none"><code class="language-none">$ mkdir -p &#x2F;home&#x2F;oracle&#x2F;app&#x2F;archlog
$ chmod 750 &#x2F;home&#x2F;oracle&#x2F;app&#x2F;archlog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>2、停止数据库：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; shutdown immediate
Database closed.
Database dismounted.
ORACLE instance shut down.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>3、启动数据库到mount状态：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; startup mount
ORACLE instance started.
Total System Global Area 1603411968 bytes
Fixed Size 2213776 bytes
Variable Size 1023412336 bytes
Database Buffers 570425344 bytes
Redo Buffers 7360512 bytes
Database mounted.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>4、修改日志模式为归档模式：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter database archivelog;
Database altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>5、修改归档日志格式：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter system set log_archive_format&#x3D;&#39;xtwldb_%t_%s_%r.log&#39; scope&#x3D;spfile;
System altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>6、修改归档日志路径：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter system set log_archive_dest1&#x3D;&#39;location&#x3D;&#x2F;home&#x2F;oracle&#x2F;app&#x2F;archlog&#39; scope&#x3D;spfile;
System altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>7、打开数据库：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; alter database open;
Database altered.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>8、重启数据库使各参数生效：</p>
<pre class="line-numbers language-none"><code class="language-none">SQL&gt; shutdown immediate;
Database closed.
Database dismounted.
ORACLE instance shut down.


SQL&gt; startup;
ORACLE instance started.

Total System Global Area 1603411968 bytes
Fixed Size 2213776 bytes
Variable Size 570427504 bytes
Database Buffers 1023410176 bytes
Redo Buffers 7360512 bytes
Database mounted.
Database opened.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="日常维护">日常维护</h4>
<p>(1)启动监听</p>
<pre class="line-numbers language-none"><code class="language-none">[oracle@oracledb~]lsnrctl start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>(2)启动数据库</p>
<pre class="line-numbers language-none"><code class="language-none">sqlplus system&#x2F;system as sysdba
SQL&gt; startup
SQL&gt; alter system register;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>(3)查看监听状态</p>
<pre class="line-numbers language-none"><code class="language-none">lsnrctl status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>(3)启动管理平台</p>
<pre class="line-numbers language-none"><code class="language-none">[oracle@oracledb~]emctl start dbconsole<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>photoshop保留线条</title>
    <url>/2021/12/23/photoshop%E4%BF%9D%E7%95%99%E7%BA%BF%E6%9D%A1/</url>
    <content><![CDATA[<p><img src="/2021/12/23/photoshop%E4%BF%9D%E7%95%99%E7%BA%BF%E6%9D%A1/photoshop-01.png" alt="原图"></p>
<p>1、ctrl + shift + alt + b，把画变成黑白</p>
<p><img src="/2021/12/23/photoshop%E4%BF%9D%E7%95%99%E7%BA%BF%E6%9D%A1/photoshop-02.png" alt></p>
<p>2、ctrl + j 复制图层</p>
<p><img src="/2021/12/23/photoshop%E4%BF%9D%E7%95%99%E7%BA%BF%E6%9D%A1/photoshop-03.png" alt></p>
<p>3、ctrl + i 反相</p>
<p><img src="/2021/12/23/photoshop%E4%BF%9D%E7%95%99%E7%BA%BF%E6%9D%A1/photoshop-04.png" alt></p>
<p>4、图层属性：”颜色减淡“</p>
<p><img src="/2021/12/23/photoshop%E4%BF%9D%E7%95%99%E7%BA%BF%E6%9D%A1/photoshop-05.png" alt></p>
<p>5、滤镜——&gt;其他——&gt;最小值</p>
<p><img src="/2021/12/23/photoshop%E4%BF%9D%E7%95%99%E7%BA%BF%E6%9D%A1/photoshop-06.png" alt></p>
]]></content>
      <categories>
        <category>UI</category>
      </categories>
      <tags>
        <tag>photoshop</tag>
      </tags>
  </entry>
  <entry>
    <title>postgresql安装</title>
    <url>/2021/12/23/postgresql%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h4 id="官方版本（不带备份目录）">官方版本（不带备份目录）</h4>
<pre class="line-numbers language-none"><code class="language-none">docker run -it --rm -d --name postgres --shm-size&#x3D;&quot;2g&quot; -e POSTGRES_PASSWORD&#x3D;cygkzPfq5xsT4Qh2 -p 5432:5432 -v &#x2F;data&#x2F;postgresql:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data postgres:12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="自制镜像版本（带备份目录）">自制镜像版本（带备份目录）</h4>
<p>Dockerfile</p>
<pre class="line-numbers language-none"><code class="language-none">FROM postgres:12
 
COPY .&#x2F;docker-entrypoint.sh &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-entrypoint.sh
RUN chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-entrypoint.sh
ENTRYPOINT [&quot;docker-entrypoint.sh&quot;]
CMD [&quot;postgres&quot;]
docker-entrypoint.sh

#!&#x2F;usr&#x2F;bin&#x2F;env bash
set -Eeo pipefail
# TODO swap to -Eeuo pipefail above (after handling all potentially-unset variables)
 
# usage: file_env VAR [DEFAULT]
#    ie: file_env &#39;XYZ_DB_PASSWORD&#39; &#39;example&#39;
# (will allow for &quot;$XYZ_DB_PASSWORD_FILE&quot; to fill in the value of
#  &quot;$XYZ_DB_PASSWORD&quot; from a file, especially for Docker&#39;s secrets feature)
file_env() &#123;
    local var&#x3D;&quot;$1&quot;
    local fileVar&#x3D;&quot;$&#123;var&#125;_FILE&quot;
    local def&#x3D;&quot;$&#123;2:-&#125;&quot;
    if [ &quot;$&#123;!var:-&#125;&quot; ] &amp;&amp; [ &quot;$&#123;!fileVar:-&#125;&quot; ]; then
        echo &gt;&amp;2 &quot;error: both $var and $fileVar are set (but are exclusive)&quot;
        exit 1
    fi
    local val&#x3D;&quot;$def&quot;
    if [ &quot;$&#123;!var:-&#125;&quot; ]; then
        val&#x3D;&quot;$&#123;!var&#125;&quot;
    elif [ &quot;$&#123;!fileVar:-&#125;&quot; ]; then
        val&#x3D;&quot;$(&lt; &quot;$&#123;!fileVar&#125;&quot;)&quot;
    fi
    export &quot;$var&quot;&#x3D;&quot;$val&quot;
    unset &quot;$fileVar&quot;
&#125;
 
# check to see if this file is being run or sourced from another script
_is_sourced() &#123;
    # https:&#x2F;&#x2F;unix.stackexchange.com&#x2F;a&#x2F;215279
    [ &quot;$&#123;#FUNCNAME[@]&#125;&quot; -ge 2 ] \
        &amp;&amp; [ &quot;$&#123;FUNCNAME[0]&#125;&quot; &#x3D; &#39;_is_sourced&#39; ] \
        &amp;&amp; [ &quot;$&#123;FUNCNAME[1]&#125;&quot; &#x3D; &#39;source&#39; ]
&#125;
 
# used to create initial postgres directories and if run as root, ensure ownership to the &quot;postgres&quot; user
docker_create_db_directories() &#123;
    local user; user&#x3D;&quot;$(id -u)&quot;
 
    mkdir -p &quot;$PGDATA&quot;
        mkdir -p &quot;$PGDATA&quot;&#x2F;..&#x2F;backup
    chmod 700 &quot;$PGDATA&quot;
        chmod 700 &quot;$PGDATA&quot;&#x2F;..&#x2F;backup
 
    # ignore failure since it will be fine when using the image provided directory; see also https:&#x2F;&#x2F;github.com&#x2F;docker-library&#x2F;postgres&#x2F;pull&#x2F;289
    mkdir -p &#x2F;var&#x2F;run&#x2F;postgresql || :
    chmod 775 &#x2F;var&#x2F;run&#x2F;postgresql || :
 
    # Create the transaction log directory before initdb is run so the directory is owned by the correct user
    if [ -n &quot;$POSTGRES_INITDB_WALDIR&quot; ]; then
        mkdir -p &quot;$POSTGRES_INITDB_WALDIR&quot;
        if [ &quot;$user&quot; &#x3D; &#39;0&#39; ]; then
            find &quot;$POSTGRES_INITDB_WALDIR&quot; \! -user postgres -exec chown postgres &#39;&#123;&#125;&#39; +
        fi
        chmod 700 &quot;$POSTGRES_INITDB_WALDIR&quot;
    fi
 
    # allow the container to be started with &#96;--user&#96;
    if [ &quot;$user&quot; &#x3D; &#39;0&#39; ]; then
        find &quot;$PGDATA&quot; \! -user postgres -exec chown postgres &#39;&#123;&#125;&#39; +
                find &quot;$PGDATA&quot;&#x2F;..&#x2F;backup \! -user postgres -exec chown postgres &#39;&#123;&#125;&#39; +
        find &#x2F;var&#x2F;run&#x2F;postgresql \! -user postgres -exec chown postgres &#39;&#123;&#125;&#39; +
    fi
&#125;
 
# initialize empty PGDATA directory with new database via &#39;initdb&#39;
# arguments to &#96;initdb&#96; can be passed via POSTGRES_INITDB_ARGS or as arguments to this function
# &#96;initdb&#96; automatically creates the &quot;postgres&quot;, &quot;template0&quot;, and &quot;template1&quot; dbnames
# this is also where the database user is created, specified by &#96;POSTGRES_USER&#96; env
docker_init_database_dir() &#123;
    # &quot;initdb&quot; is particular about the current user existing in &quot;&#x2F;etc&#x2F;passwd&quot;, so we use &quot;nss_wrapper&quot; to fake that if necessary
    # see https:&#x2F;&#x2F;github.com&#x2F;docker-library&#x2F;postgres&#x2F;pull&#x2F;253, https:&#x2F;&#x2F;github.com&#x2F;docker-library&#x2F;postgres&#x2F;issues&#x2F;359, https:&#x2F;&#x2F;cwrap.org&#x2F;nss_wrapper.html
    if ! getent passwd &quot;$(id -u)&quot; &amp;&gt; &#x2F;dev&#x2F;null &amp;&amp; [ -e &#x2F;usr&#x2F;lib&#x2F;libnss_wrapper.so ]; then
        export LD_PRELOAD&#x3D;&#39;&#x2F;usr&#x2F;lib&#x2F;libnss_wrapper.so&#39;
        export NSS_WRAPPER_PASSWD&#x3D;&quot;$(mktemp)&quot;
        export NSS_WRAPPER_GROUP&#x3D;&quot;$(mktemp)&quot;
        echo &quot;postgres:x:$(id -u):$(id -g):PostgreSQL:$PGDATA:&#x2F;bin&#x2F;false&quot; &gt; &quot;$NSS_WRAPPER_PASSWD&quot;
        echo &quot;postgres:x:$(id -g):&quot; &gt; &quot;$NSS_WRAPPER_GROUP&quot;
    fi
 
    if [ -n &quot;$POSTGRES_INITDB_WALDIR&quot; ]; then
        set -- --waldir &quot;$POSTGRES_INITDB_WALDIR&quot; &quot;$@&quot;
    fi
 
    eval &#39;initdb --username&#x3D;&quot;$POSTGRES_USER&quot; --pwfile&#x3D;&lt;(echo &quot;$POSTGRES_PASSWORD&quot;) &#39;&quot;$POSTGRES_INITDB_ARGS&quot;&#39; &quot;$@&quot;&#39;
 
    # unset&#x2F;cleanup &quot;nss_wrapper&quot; bits
    if [ &quot;$&#123;LD_PRELOAD:-&#125;&quot; &#x3D; &#39;&#x2F;usr&#x2F;lib&#x2F;libnss_wrapper.so&#39; ]; then
        rm -f &quot;$NSS_WRAPPER_PASSWD&quot; &quot;$NSS_WRAPPER_GROUP&quot;
        unset LD_PRELOAD NSS_WRAPPER_PASSWD NSS_WRAPPER_GROUP
    fi
&#125;
 
# print large warning if POSTGRES_PASSWORD is long
# error if both POSTGRES_PASSWORD is empty and POSTGRES_HOST_AUTH_METHOD is not &#39;trust&#39;
# print large warning if POSTGRES_HOST_AUTH_METHOD is set to &#39;trust&#39;
# assumes database is not set up, ie: [ -z &quot;$DATABASE_ALREADY_EXISTS&quot; ]
docker_verify_minimum_env() &#123;
    # check password first so we can output the warning before postgres
    # messes it up
    if [ &quot;$&#123;#POSTGRES_PASSWORD&#125;&quot; -ge 100 ]; then
        cat &gt;&amp;2 &lt;&lt;-&#39;EOWARN&#39;
 
            WARNING: The supplied POSTGRES_PASSWORD is 100+ characters.
 
              This will not work if used via PGPASSWORD with &quot;psql&quot;.
 
              https:&#x2F;&#x2F;www.postgresql.org&#x2F;message-id&#x2F;flat&#x2F;E1Rqxp2-0004Qt-PL%40wrigleys.postgresql.org (BUG #6412)
              https:&#x2F;&#x2F;github.com&#x2F;docker-library&#x2F;postgres&#x2F;issues&#x2F;507
 
        EOWARN
    fi
    if [ -z &quot;$POSTGRES_PASSWORD&quot; ] &amp;&amp; [ &#39;trust&#39; !&#x3D; &quot;$POSTGRES_HOST_AUTH_METHOD&quot; ]; then
        # The - option suppresses leading tabs but *not* spaces. :)
        cat &gt;&amp;2 &lt;&lt;-&#39;EOE&#39;
            Error: Database is uninitialized and superuser password is not specified.
                   You must specify POSTGRES_PASSWORD to a non-empty value for the
                   superuser. For example, &quot;-e POSTGRES_PASSWORD&#x3D;password&quot; on &quot;docker run&quot;.
 
                   You may also use &quot;POSTGRES_HOST_AUTH_METHOD&#x3D;trust&quot; to allow all
                   connections without a password. This is *not* recommended.
 
                   See PostgreSQL documentation about &quot;trust&quot;:
                   https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;current&#x2F;auth-trust.html
        EOE
        exit 1
    fi
    if [ &#39;trust&#39; &#x3D; &quot;$POSTGRES_HOST_AUTH_METHOD&quot; ]; then
        cat &gt;&amp;2 &lt;&lt;-&#39;EOWARN&#39;
            ********************************************************************************
            WARNING: POSTGRES_HOST_AUTH_METHOD has been set to &quot;trust&quot;. This will allow
                     anyone with access to the Postgres port to access your database without
                     a password, even if POSTGRES_PASSWORD is set. See PostgreSQL
                     documentation about &quot;trust&quot;:
                     https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;current&#x2F;auth-trust.html
                     In Docker&#39;s default configuration, this is effectively any other
                     container on the same system.
 
                     It is not recommended to use POSTGRES_HOST_AUTH_METHOD&#x3D;trust. Replace
                     it with &quot;-e POSTGRES_PASSWORD&#x3D;password&quot; instead to set a password in
                     &quot;docker run&quot;.
            ********************************************************************************
        EOWARN
    fi
&#125;
 
# usage: docker_process_init_files [file [file [...]]]
#    ie: docker_process_init_files &#x2F;always-initdb.d&#x2F;*
# process initializer files, based on file extensions and permissions
docker_process_init_files() &#123;
    # psql here for backwards compatiblilty &quot;$&#123;psql[@]&#125;&quot;
    psql&#x3D;( docker_process_sql )
 
    echo
    local f
    for f; do
        case &quot;$f&quot; in
            *.sh)
                # https:&#x2F;&#x2F;github.com&#x2F;docker-library&#x2F;postgres&#x2F;issues&#x2F;450#issuecomment-393167936
                # https:&#x2F;&#x2F;github.com&#x2F;docker-library&#x2F;postgres&#x2F;pull&#x2F;452
                if [ -x &quot;$f&quot; ]; then
                    echo &quot;$0: running $f&quot;
                    &quot;$f&quot;
                else
                    echo &quot;$0: sourcing $f&quot;
                    . &quot;$f&quot;
                fi
                ;;
            *.sql)    echo &quot;$0: running $f&quot;; docker_process_sql -f &quot;$f&quot;; echo ;;
            *.sql.gz) echo &quot;$0: running $f&quot;; gunzip -c &quot;$f&quot; | docker_process_sql; echo ;;
            *.sql.xz) echo &quot;$0: running $f&quot;; xzcat &quot;$f&quot; | docker_process_sql; echo ;;
            *)        echo &quot;$0: ignoring $f&quot; ;;
        esac
        echo
    done
&#125;
 
# Execute sql script, passed via stdin (or -f flag of pqsl)
# usage: docker_process_sql [psql-cli-args]
#    ie: docker_process_sql --dbname&#x3D;mydb &lt;&lt;&lt;&#39;INSERT ...&#39;
#    ie: docker_process_sql -f my-file.sql
#    ie: docker_process_sql &lt;my-file.sql
docker_process_sql() &#123;
    local query_runner&#x3D;( psql -v ON_ERROR_STOP&#x3D;1 --username &quot;$POSTGRES_USER&quot; --no-password )
    if [ -n &quot;$POSTGRES_DB&quot; ]; then
        query_runner+&#x3D;( --dbname &quot;$POSTGRES_DB&quot; )
    fi
 
    &quot;$&#123;query_runner[@]&#125;&quot; &quot;$@&quot;
&#125;
 
# create initial database
# uses environment variables for input: POSTGRES_DB
docker_setup_db() &#123;
    if [ &quot;$POSTGRES_DB&quot; !&#x3D; &#39;postgres&#39; ]; then
        POSTGRES_DB&#x3D; docker_process_sql --dbname postgres --set db&#x3D;&quot;$POSTGRES_DB&quot; &lt;&lt;-&#39;EOSQL&#39;
            CREATE DATABASE :&quot;db&quot; ;
        EOSQL
        echo
    fi
&#125;
 
# Loads various settings that are used elsewhere in the script
# This should be called before any other functions
docker_setup_env() &#123;
    file_env &#39;POSTGRES_PASSWORD&#39;
 
    file_env &#39;POSTGRES_USER&#39; &#39;postgres&#39;
    file_env &#39;POSTGRES_DB&#39; &quot;$POSTGRES_USER&quot;
    file_env &#39;POSTGRES_INITDB_ARGS&#39;
    # default authentication method is md5
    : &quot;$&#123;POSTGRES_HOST_AUTH_METHOD:&#x3D;md5&#125;&quot;
 
    declare -g DATABASE_ALREADY_EXISTS
    # look specifically for PG_VERSION, as it is expected in the DB dir
    if [ -s &quot;$PGDATA&#x2F;PG_VERSION&quot; ]; then
        DATABASE_ALREADY_EXISTS&#x3D;&#39;true&#39;
    fi
&#125;
 
# append POSTGRES_HOST_AUTH_METHOD to pg_hba.conf for &quot;host&quot; connections
pg_setup_hba_conf() &#123;
    &#123;
        echo
        if [ &#39;trust&#39; &#x3D; &quot;$POSTGRES_HOST_AUTH_METHOD&quot; ]; then
            echo &#39;# warning trust is enabled for all connections&#39;
            echo &#39;# see https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;12&#x2F;auth-trust.html&#39;
        fi
        echo &quot;host all all all $POSTGRES_HOST_AUTH_METHOD&quot;
    &#125; &gt;&gt; &quot;$PGDATA&#x2F;pg_hba.conf&quot;
&#125;
 
# start socket-only postgresql server for setting up or running scripts
# all arguments will be passed along as arguments to &#96;postgres&#96; (via pg_ctl)
docker_temp_server_start() &#123;
    if [ &quot;$1&quot; &#x3D; &#39;postgres&#39; ]; then
        shift
    fi
 
    # internal start of server in order to allow setup using psql client
    # does not listen on external TCP&#x2F;IP and waits until start finishes
    set -- &quot;$@&quot; -c listen_addresses&#x3D;&#39;&#39; -p &quot;$&#123;PGPORT:-5432&#125;&quot;
 
    PGUSER&#x3D;&quot;$&#123;PGUSER:-$POSTGRES_USER&#125;&quot; \
    pg_ctl -D &quot;$PGDATA&quot; \
        -o &quot;$(printf &#39;%q &#39; &quot;$@&quot;)&quot; \
        -w start
&#125;
 
# stop postgresql server after done setting up user and running scripts
docker_temp_server_stop() &#123;
    PGUSER&#x3D;&quot;$&#123;PGUSER:-postgres&#125;&quot; \
    pg_ctl -D &quot;$PGDATA&quot; -m fast -w stop
&#125;
 
# check arguments for an option that would cause postgres to stop
# return true if there is one
_pg_want_help() &#123;
    local arg
    for arg; do
        case &quot;$arg&quot; in
            # postgres --help | grep &#39;then exit&#39;
            # leaving out -C on purpose since it always fails and is unhelpful:
            # postgres: could not access the server configuration file &quot;&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data&#x2F;postgresql.conf&quot;: No such file or directory
            -&#39;?&#39;|--help|--describe-config|-V|--version)
                return 0
                ;;
        esac
    done
    return 1
&#125;
 
_main() &#123;
    # if first arg looks like a flag, assume we want to run postgres server
    if [ &quot;$&#123;1:0:1&#125;&quot; &#x3D; &#39;-&#39; ]; then
        set -- postgres &quot;$@&quot;
    fi
 
    if [ &quot;$1&quot; &#x3D; &#39;postgres&#39; ] &amp;&amp; ! _pg_want_help &quot;$@&quot;; then
        docker_setup_env
        # setup data directories and permissions (when run as root)
        docker_create_db_directories
        if [ &quot;$(id -u)&quot; &#x3D; &#39;0&#39; ]; then
            # then restart script as postgres user
            exec gosu postgres &quot;$BASH_SOURCE&quot; &quot;$@&quot;
        fi
 
        # only run initialization on an empty data directory
        if [ -z &quot;$DATABASE_ALREADY_EXISTS&quot; ]; then
            docker_verify_minimum_env
 
            # check dir permissions to reduce likelihood of half-initialized database
            ls &#x2F;docker-entrypoint-initdb.d&#x2F; &gt; &#x2F;dev&#x2F;null
 
            docker_init_database_dir
            pg_setup_hba_conf
 
            # PGPASSWORD is required for psql when authentication is required for &#39;local&#39; connections via pg_hba.conf and is otherwise harmless
            # e.g. when &#39;--auth&#x3D;md5&#39; or &#39;--auth-local&#x3D;md5&#39; is used in POSTGRES_INITDB_ARGS
            export PGPASSWORD&#x3D;&quot;$&#123;PGPASSWORD:-$POSTGRES_PASSWORD&#125;&quot;
            docker_temp_server_start &quot;$@&quot;
 
            docker_setup_db
            docker_process_init_files &#x2F;docker-entrypoint-initdb.d&#x2F;*
 
            docker_temp_server_stop
            unset PGPASSWORD
 
            echo
            echo &#39;PostgreSQL init process complete; ready for start up.&#39;
            echo
        else
            echo
            echo &#39;PostgreSQL Database directory appears to contain a database; Skipping initialization&#39;
            echo
        fi
    fi
 
    exec &quot;$@&quot;
&#125;
 
if ! _is_sourced; then
    _main &quot;$@&quot;
fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">docker build -t wjf8882300&#x2F;postgres:12 .
mkdir -p &#x2F;data&#x2F;postgresql&#x2F;data
mkdir -p &#x2F;data&#x2F;postgresql&#x2F;backup
chown -R 1000:1000 &#x2F;data&#x2F;postgresql&#x2F;data
chown -R 1000:1000 &#x2F;data&#x2F;postgresql&#x2F;backup
docker run -it --rm -d --name postgres --shm-size&#x3D;&quot;2g&quot; -e POSTGRES_PASSWORD&#x3D;cygkzPfq5xsT4Qh2 -p 5432:5432 -v &#x2F;data&#x2F;postgresql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data -v &#x2F;data&#x2F;postgresql&#x2F;backup:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;backup wjf8882300&#x2F;postgres:12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitmq安装</title>
    <url>/2021/12/23/rabbitmq%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h4 id="docker安装">docker安装</h4>
<pre class="line-numbers language-none"><code class="language-none">docker run -d \
--hostname my-rabbit \
--name rabbitmq \
--restart&#x3D;always \
-e RABBITMQ_DEFAULT_USER&#x3D;rabbitmq \
-e RABBITMQ_DEFAULT_PASS&#x3D;IJH1Acq7F8mVgot5 \
-p 15672:15672 \
-p 5672:5672 \
rabbitmq:management<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>RABBITMQ_DEFAULT_USER 用户名<br>
RABBITMQ_DEFAULT_PASS 密码<br>
15672: web管理端口号<br>
5672: TCP端口</p>
</blockquote>
<h4 id="windows上安装">windows上安装</h4>
<p>windows下载安装包，解压即可，然后切换到目录下</p>
<p>1）设置默认自启动</p>
<pre class="line-numbers language-none"><code class="language-none">rabbitmq-service start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>2）安装管理插件，通过http://localhost:15672可以访问</p>
<pre class="line-numbers language-none"><code class="language-none">rabbitmq-plugins enable rabbitmq_management<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>3）创建用户，并设置权限</p>
<pre class="line-numbers language-none"><code class="language-none">rabbitmqctl add_user rabbitmq IJH1Acq7F8mVgot5
rabbitmqctl set_user_tags rabbitmq administrator
rabbitmqctl set_permissions -p &#x2F; rabbitmq &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitmq批量删除指定队列</title>
    <url>/2021/12/23/rabbitmq%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<h4 id="linux下面删除">linux下面删除</h4>
<p>首先进入到rabbitmq目录下的sbin目录<br>
方法1：</p>
<pre class="line-numbers language-none"><code class="language-none">.&#x2F;rabbitmqctl list_queues| grep helloQueue | awk &#39;&#123;print $1&#125;&#39; | xargs -n1 rabbitmqctl delete_queue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>方法2：</p>
<pre class="line-numbers language-none"><code class="language-none">.&#x2F;rabbitmqctl list_queues| grep helloQueue | awk &#39;&#123;a[$1]&#125; END &#123;for(i in a)&#123;rabbitmqctl delete_queue i;&#125;&#125;&#39;、<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="docker下面删除">docker下面删除</h4>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;opt&#x2F;rabbitmq&#x2F;sbin&#x2F;rabbitmqctl list_queues| grep &#39;udata.climb&#39; | awk &#39;&#123;print $1&#125;&#39; | xargs -n1 rabbitmqctl delete_queue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="windows下面删除">windows下面删除</h4>
<pre class="line-numbers language-none"><code class="language-none">.&#x2F;rabbitmqctl.bat list_queues| grep &#39;udata.climb&#39; | awk &#39;&#123;print $1&#125;&#39; | xargs -n1 .&#x2F;rabbitmqctl.bat delete_queue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="通用删除（推荐）">通用删除（推荐）</h4>
<p>通用删除即通过python脚本删除</p>
<blockquote>
<p>批量删除带有udata.climb的队列：python3 rabbitmq_delete.py -k ‘udata.climb’ -d 1<br>
批量删除带有udata.climb的交换机：python3 rabbitmq_delete.py -k ‘udata.climb’ -d 2</p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">##### rabbitmq_delete.py
# -*- coding:UTF-8 -*-
from rabbitmq.rabbitmq_api import AdminAPI
import sys
import getopt
 
############################################
# example:
# delete queues: python3 rabbitmq_delete.py  -k &#39;udata.climb&#39; -d 1
# delete exchanges:  python3 rabbitmq_delete.py  -k &#39;udata.climb&#39; -d 2
############################################
 
host &#x3D; &#39;127.0.0.1&#39;
port &#x3D; &#39;15672&#39;
username &#x3D; &#39;rabbitmq&#39;
password &#x3D; &#39;Qfka7ls2A40JEoMw&#39;
 
def delete_exchange(key):
    api &#x3D; AdminAPI(url&#x3D;&#39;http:&#x2F;&#x2F;%s:%s&#39; % (host, port), auth&#x3D;(username, password))
    exchanges &#x3D; api.list_exchanges()
    for exchange in exchanges:
        if exchange[&quot;name&quot;].find(key) !&#x3D; -1:
            api.delete_exchange_for_vhost(exchange[&quot;name&quot;], &quot;&#x2F;&quot;)
 
def delete_quques(key):
    api &#x3D; AdminAPI(url&#x3D;&#39;http:&#x2F;&#x2F;%s:%s&#39; % (host, port), auth&#x3D;(username, password))
    queues &#x3D; api.list_queues()
    for queue in queues:
        if queue[&quot;name&quot;].find(key) !&#x3D; -1:
            api.delete_queue(queue[&quot;name&quot;], &quot;&#x2F;&quot;)
 
if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    root_path &#x3D; &quot;&quot;
    is_rename &#x3D; True
 
    argv &#x3D; sys.argv[1:]
    if len(argv) &lt; 1:
        print(&#39;rabbitmq_delete.py -k &lt;Key&gt; -d &lt;Type&gt;&#39;)
        sys.exit()
 
    # 获取命令行参数
    try:
        opts, args &#x3D; getopt.getopt(argv, &quot;hk:d:&quot;, [&quot;kKey&#x3D;&quot;, &quot;dType&#x3D;&quot;])
    except getopt.GetoptError:
        print(&#39;rabbitmq_delete.py -k &lt;Key&gt; -d &lt;Type&gt;&#39;)
        sys.exit(2)
 
    for opt, arg in opts:
        if opt &#x3D;&#x3D; &#39;-h&#39;:
            print(&#39;rabbitmq_delete.py -k &lt;Key&gt; -d &lt;Type&gt;&#39;)
            sys.exit()
        elif opt in (&quot;-k&quot;, &quot;--kKey&quot;):
            key &#x3D; arg
        elif opt in (&quot;-d&quot;, &quot;--dType&quot;):
            type &#x3D; arg
    if type &#x3D;&#x3D; 1:
        delete_quques(key)
    elif type &#x3D;&#x3D; 2:
        delete_exchange(key)

##### base.py

import json
import requests
from copy import deepcopy


class Resource(object):
    &quot;&quot;&quot;
    A base class for API resources
    &quot;&quot;&quot;

    # &quot;&quot;&quot;List of allowed methods, allowed values are
    # [&#39;GET&#39;, &#39;PUT&#39;, &#39;POST&#39;, &#39;DELETE&#39;]&quot;&quot;&quot;
    # ALLOWED_METHODS &#x3D; []

    def __init__(self, url, auth):
        &quot;&quot;&quot;
        :param url: The RabbitMQ API url to connect to. This should include the
            protocol and port number.
        :type url: str

        :param auth: The authentication to pass to the request. See
            &#96;Requests&#39; authentication&#96;_ documentation. For the simplest case of
            a username and password, simply pass in a tuple of
            &#96;&#96;(&#39;username&#39;, &#39;password&#39;)&#96;&#96;
        :type auth: Requests auth

        .. _Requests&#39; authentication: http:&#x2F;&#x2F;docs.python-requests.org&#x2F;en&#x2F;latest&#x2F;user&#x2F;authentication&#x2F;
        &quot;&quot;&quot;
        self.url &#x3D; url.rstrip(&#39;&#x2F;&#39;)
        self.auth &#x3D; auth

        self.headers &#x3D; &#123;
            &#39;Content-type&#39;: &#39;application&#x2F;json&#39;,
        &#125;

    def _api_get(self, url, **kwargs):
        &quot;&quot;&quot;
        A convenience wrapper for _get. Adds headers, auth and base url by
        default
        &quot;&quot;&quot;
        kwargs[&#39;url&#39;] &#x3D; self.url + url
        kwargs[&#39;auth&#39;] &#x3D; self.auth

        headers &#x3D; deepcopy(self.headers)
        headers.update(kwargs.get(&#39;headers&#39;, &#123;&#125;))
        kwargs[&#39;headers&#39;] &#x3D; headers
        return self._get(**kwargs)

    def _get(self, *args, **kwargs):
        &quot;&quot;&quot;
        A wrapper for getting things

        :returns: The response of your get
        :rtype: dict
        &quot;&quot;&quot;
        response &#x3D; requests.get(*args, **kwargs)

        response.raise_for_status()

        return response.json()

    def _api_put(self, url, **kwargs):
        &quot;&quot;&quot;
        A convenience wrapper for _put. Adds headers, auth and base url by
        default
        &quot;&quot;&quot;
        kwargs[&#39;url&#39;] &#x3D; self.url + url
        kwargs[&#39;auth&#39;] &#x3D; self.auth

        headers &#x3D; deepcopy(self.headers)
        headers.update(kwargs.get(&#39;headers&#39;, &#123;&#125;))
        kwargs[&#39;headers&#39;] &#x3D; headers
        self._put(**kwargs)

    def _put(self, *args, **kwargs):
        &quot;&quot;&quot;
        A wrapper for putting things. It will also json encode your &#39;data&#39; parameter

        :returns: The response of your put
        :rtype: dict
        &quot;&quot;&quot;
        if &#39;data&#39; in kwargs:
            kwargs[&#39;data&#39;] &#x3D; json.dumps(kwargs[&#39;data&#39;])
        response &#x3D; requests.put(*args, **kwargs)
        response.raise_for_status()

    def _api_post(self, url, **kwargs):
        &quot;&quot;&quot;
        A convenience wrapper for _post. Adds headers, auth and base url by
        default
        &quot;&quot;&quot;
        kwargs[&#39;url&#39;] &#x3D; self.url + url
        kwargs[&#39;auth&#39;] &#x3D; self.auth

        headers &#x3D; deepcopy(self.headers)
        headers.update(kwargs.get(&#39;headers&#39;, &#123;&#125;))
        kwargs[&#39;headers&#39;] &#x3D; headers
        self._post(**kwargs)

    def _post(self, *args, **kwargs):
        &quot;&quot;&quot;
        A wrapper for posting things. It will also json encode your &#39;data&#39; parameter

        :returns: The response of your post
        :rtype: dict
        &quot;&quot;&quot;
        if &#39;data&#39; in kwargs:
            kwargs[&#39;data&#39;] &#x3D; json.dumps(kwargs[&#39;data&#39;])
        response &#x3D; requests.post(*args, **kwargs)
        response.raise_for_status()

    def _api_delete(self, url, **kwargs):
        &quot;&quot;&quot;
        A convenience wrapper for _delete. Adds headers, auth and base url by
        default
        &quot;&quot;&quot;
        kwargs[&#39;url&#39;] &#x3D; self.url + url
        kwargs[&#39;auth&#39;] &#x3D; self.auth

        headers &#x3D; deepcopy(self.headers)
        headers.update(kwargs.get(&#39;headers&#39;, &#123;&#125;))
        kwargs[&#39;headers&#39;] &#x3D; headers
        self._delete(**kwargs)

    def _delete(self, *args, **kwargs):
        &quot;&quot;&quot;
        A wrapper for deleting things

        :returns: The response of your delete
        :rtype: dict
        &quot;&quot;&quot;
        response &#x3D; requests.delete(*args, **kwargs)
        response.raise_for_status()

 
#### rabbitmq_api.py

from rabbitmq_admin.base import Resource
from six.moves import urllib


class AdminAPI(Resource):
    &quot;&quot;&quot;
    The entrypoint for interacting with the RabbitMQ Management HTTP API
    &quot;&quot;&quot;

    def overview(self):
        &quot;&quot;&quot;
        Various random bits of information that describe the whole system
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;overview&#39;)

    def get_cluster_name(self):
        &quot;&quot;&quot;
        Name identifying this RabbitMQ cluster.
        &quot;&quot;&quot;
        return self._get(
            url&#x3D;self.url + &#39;&#x2F;api&#x2F;cluster-name&#39;,
            headers&#x3D;self.headers,
            auth&#x3D;self.auth
        )

    def list_nodes(self):
        &quot;&quot;&quot;
        A list of nodes in the RabbitMQ cluster.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;nodes&#39;)

    def get_node(self, name, memory&#x3D;False, binary&#x3D;False):
        &quot;&quot;&quot;
        An individual node in the RabbitMQ cluster. Set &quot;memory&#x3D;true&quot; to get
        memory statistics, and &quot;binary&#x3D;true&quot; to get a breakdown of binary
        memory use (may be expensive if there are many small binaries in the
        system).
        &quot;&quot;&quot;
        return self._api_get(
            url&#x3D;&#39;&#x2F;api&#x2F;nodes&#x2F;&#123;0&#125;&#39;.format(name),
            params&#x3D;dict(
                binary&#x3D;binary,
                memory&#x3D;memory,
            ),
        )

    def list_extensions(self):
        &quot;&quot;&quot;
        A list of extensions to the management plugin.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;extensions&#39;)

    def get_definitions(self):
        &quot;&quot;&quot;
        The server definitions - exchanges, queues, bindings, users, virtual
        hosts, permissions and parameters. Everything apart from messages.

        This method can be used for backing up the configuration of a server
        or cluster.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;definitions&#39;)

    def post_definitions(self, data):
        &quot;&quot;&quot;
        The server definitions - exchanges, queues, bindings, users, virtual
        hosts, permissions and parameters. Everything apart from messages.
        POST to upload an existing set of definitions. Note that:

            - The definitions are merged. Anything already existing on the
              server but not in the uploaded definitions is untouched.
            - Conflicting definitions on immutable objects (exchanges, queues
              and bindings) will cause an error.
            - Conflicting definitions on mutable objects will cause the object
              in the server to be overwritten with the object from the
              definitions.
            - In the event of an error you will be left with a part-applied set
              of definitions.

        This method can be used for restoring the configuration of a server
        or cluster.

        :param data: The definitions for a RabbitMQ server
        :type data: dict
        &quot;&quot;&quot;
        self._api_post(&#39;&#x2F;api&#x2F;definitions&#39;, data&#x3D;data)

    def list_connections(self):
        &quot;&quot;&quot;
        A list of all open connections.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;connections&#39;)

    def get_connection(self, name):
        &quot;&quot;&quot;
        An individual connection.

        :param name: The connection name
        :type name: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;connections&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(name)
        ))

    def delete_connection(self, name, reason&#x3D;None):
        &quot;&quot;&quot;
        Closes an individual connection. Give an optional reason

        :param name: The connection name
        :type name: str

        :param reason: An option reason why the connection was deleted
        :type reason: str
        &quot;&quot;&quot;
        headers &#x3D; &#123;&#39;X-Reason&#39;: reason&#125; if reason else &#123;&#125;

        self._api_delete(
            &#39;&#x2F;api&#x2F;connections&#x2F;&#123;0&#125;&#39;.format(
                urllib.parse.quote_plus(name)
            ),
            headers&#x3D;headers,
        )

    def list_connection_channels(self, name):
        &quot;&quot;&quot;
        List of all channels for a given connection.

        :param name: The connection name
        :type name: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;connections&#x2F;&#123;0&#125;&#x2F;channels&#39;.format(
            urllib.parse.quote_plus(name)
        ))

    def list_channels(self):
        &quot;&quot;&quot;
        A list of all open channels.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;channels&#39;)

    def get_channel(self, name):
        &quot;&quot;&quot;
        Details about an individual channel.

        :param name: The channel name
        :type name: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;channels&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(name)
        ))

    def list_consumers(self):
        &quot;&quot;&quot;
        A list of all consumers.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;consumers&#39;)

    def list_consumers_for_vhost(self, vhost):
        &quot;&quot;&quot;
        A list of all consumers in a given virtual host.

        :param vhost: The vhost name
        :type vhost: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;consumers&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(vhost)
        ))

    def list_queues(self):
        &quot;&quot;&quot;
                A list of all queues.
                &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;queues&#39;)

    def delete_queue(self, queue, vhost, if_unused&#x3D;False):
        &quot;&quot;&quot;
        Delete a queue.

        :param name: The vhost name
        :type name: str
        &quot;&quot;&quot;
        return self._api_delete(
        &#39;&#x2F;api&#x2F;queues&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
            urllib.parse.quote_plus(vhost),
            urllib.parse.quote_plus(queue)),
        params&#x3D;&#123;
            &#39;if-unused&#39;: if_unused
        &#125;)

    def list_exchanges(self):
        &quot;&quot;&quot;
        A list of all exchanges.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;exchanges&#39;)

    def list_exchanges_for_vhost(self, vhost):
        &quot;&quot;&quot;
        A list of all exchanges in a given virtual host.

        :param vhost: The vhost name
        :type vhost: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;exchanges&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(vhost)
        ))

    def get_exchange_for_vhost(self, exchange, vhost):
        &quot;&quot;&quot;
        An individual exchange

        :param exchange: The exchange name
        :type exchange: str

        :param vhost: The vhost name
        :type vhost: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;exchanges&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
            urllib.parse.quote_plus(vhost),
            urllib.parse.quote_plus(exchange)
        ))

    def create_exchange_for_vhost(self, exchange, vhost, body):
        &quot;&quot;&quot;
        Create an individual exchange.
        The body should look like:
        ::

            &#123;
                &quot;type&quot;: &quot;direct&quot;,
                &quot;auto_delete&quot;: false,
                &quot;durable&quot;: true,
                &quot;internal&quot;: false,
                &quot;arguments&quot;: &#123;&#125;
            &#125;

        The type key is mandatory; other keys are optional.

        :param exchange: The exchange name
        :type exchange: str

        :param vhost: The vhost name
        :type vhost: str

        :param body: A body for the exchange.
        :type body: dict
        &quot;&quot;&quot;
        self._api_put(
            &#39;&#x2F;api&#x2F;exchanges&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
                urllib.parse.quote_plus(vhost),
                urllib.parse.quote_plus(exchange)),
            data&#x3D;body
        )

    def delete_exchange_for_vhost(self, exchange, vhost, if_unused&#x3D;False):
        &quot;&quot;&quot;
        Delete an individual exchange. You can add the parameter
        &#96;&#96;if_unused&#x3D;True&#96;&#96;. This prevents the delete from succeeding if the
        exchange is bound to a queue or as a source to another exchange.

        :param exchange: The exchange name
        :type exchange: str

        :param vhost: The vhost name
        :type vhost: str

        :param if_unused: Set to &#96;&#96;True&#96;&#96; to only delete if it is unused
        :type if_unused: bool
        &quot;&quot;&quot;
        self._api_delete(
            &#39;&#x2F;api&#x2F;exchanges&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
                urllib.parse.quote_plus(vhost),
                urllib.parse.quote_plus(exchange)),
            params&#x3D;&#123;
                &#39;if-unused&#39;: if_unused
            &#125;,
        )

    def list_bindings(self):
        &quot;&quot;&quot;
        A list of all bindings.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;bindings&#39;)

    def list_bindings_for_vhost(self, vhost):
        &quot;&quot;&quot;
        A list of all bindings in a given virtual host.

        :param vhost: The vhost name
        :type vhost: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;bindings&#x2F;&#123;&#125;&#39;.format(
            urllib.parse.quote_plus(vhost)
        ))

    def list_vhosts(self):
        &quot;&quot;&quot;
        A list of all vhosts.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;vhosts&#39;)

    def get_vhost(self, name):
        &quot;&quot;&quot;
        Details about an individual vhost.

        :param name: The vhost name
        :type name: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;vhosts&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(name)
        ))

    def delete_vhost(self, name):
        &quot;&quot;&quot;
        Delete a vhost.

        :param name: The vhost name
        :type name: str
        &quot;&quot;&quot;
        self._api_delete(&#39;&#x2F;api&#x2F;vhosts&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(name)
        ))

    def create_vhost(self, name, tracing&#x3D;False):
        &quot;&quot;&quot;
        Create an individual vhost.

        :param name: The vhost name
        :type name: str

        :param tracing: Set to &#96;&#96;True&#96;&#96; to enable tracing
        :type tracing: bool
        &quot;&quot;&quot;
        data &#x3D; &#123;&#39;tracing&#39;: True&#125; if tracing else &#123;&#125;
        self._api_put(
            &#39;&#x2F;api&#x2F;vhosts&#x2F;&#123;0&#125;&#39;.format(urllib.parse.quote_plus(name)),
            data&#x3D;data,
        )

    def list_users(self):
        &quot;&quot;&quot;
        A list of all users.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;users&#39;)

    def get_user(self, name):
        &quot;&quot;&quot;
        Details about an individual user.

        :param name: The user&#39;s name
        :type name: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;users&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(name)
        ))

    def delete_user(self, name):
        &quot;&quot;&quot;
        Delete a user.

        :param name: The user&#39;s name
        :type name: str
        &quot;&quot;&quot;
        self._api_delete(&#39;&#x2F;api&#x2F;users&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(name)
        ))

    def create_user(self, name, password, password_hash&#x3D;None, tags&#x3D;None):
        &quot;&quot;&quot;
        Create a user

        :param name: The user&#39;s name
        :type name: str
        :param password: The user&#39;s password. Set to &quot;&quot; if no password is
            desired. Takes precedence if &#96;&#96;password_hash&#96;&#96; is also set.
        :type password: str
        :param password_hash: An optional password hash for the user.
        :type password_hash: str
        :param tags: A list of tags for the user. Currently recognised tags are
            &quot;administrator&quot;, &quot;monitoring&quot; and &quot;management&quot;. If no tags are
            supplied, the user will have no permissions.
        :type tags: list of str
        &quot;&quot;&quot;
        data &#x3D; &#123;
            &#39;tags&#39;: &#39;, &#39;.join(tags or [])
        &#125;
        if password:
            data[&#39;password&#39;] &#x3D; password
        elif password_hash:
            data[&#39;password_hash&#39;] &#x3D; password_hash
        else:
            data[&#39;password_hash&#39;] &#x3D; &quot;&quot;

        self._api_put(
            &#39;&#x2F;api&#x2F;users&#x2F;&#123;0&#125;&#39;.format(urllib.parse.quote_plus(name)),
            data&#x3D;data,
        )

    def list_user_permissions(self, name):
        &quot;&quot;&quot;
        A list of all permissions for a given user.

        :param name: The user&#39;s name
        :type name: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;users&#x2F;&#123;0&#125;&#x2F;permissions&#39;.format(
            urllib.parse.quote_plus(name)
        ))

    def whoami(self):
        &quot;&quot;&quot;
        Details of the currently authenticated user.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;whoami&#39;)

    def list_permissions(self):
        &quot;&quot;&quot;
        A list of all permissions for all users.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;permissions&#39;)

    def get_user_permission(self, vhost, name):
        &quot;&quot;&quot;
        An individual permission of a user and virtual host.

        :param vhost: The vhost name
        :type vhost: str

        :param name: The user&#39;s name
        :type name: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;permissions&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
            urllib.parse.quote_plus(vhost),
            urllib.parse.quote_plus(name)
        ))

    def delete_user_permission(self, name, vhost):
        &quot;&quot;&quot;
        Delete an individual permission of a user and virtual host.

        :param name: The user&#39;s name
        :type name: str

        :param vhost: The vhost name
        :type vhost: str
        &quot;&quot;&quot;
        self._api_delete(&#39;&#x2F;api&#x2F;permissions&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
            urllib.parse.quote_plus(vhost),
            urllib.parse.quote_plus(name)
        ))

    def create_user_permission(self,
                               name,
                               vhost,
                               configure&#x3D;None,
                               write&#x3D;None,
                               read&#x3D;None):
        &quot;&quot;&quot;
        Create a user permission
        :param name: The user&#39;s name
        :type name: str
        :param vhost: The vhost to assign the permission to
        :type vhost: str

        :param configure: A regex for the user permission. Default is &#96;&#96;.*&#96;&#96;
        :type configure: str
        :param write: A regex for the user permission. Default is &#96;&#96;.*&#96;&#96;
        :type write: str
        :param read: A regex for the user permission. Default is &#96;&#96;.*&#96;&#96;
        :type read: str
        &quot;&quot;&quot;
        data &#x3D; &#123;
            &#39;configure&#39;: configure or &#39;.*&#39;,
            &#39;write&#39;: write or &#39;.*&#39;,
            &#39;read&#39;: read or &#39;.*&#39;,
        &#125;
        self._api_put(
            &#39;&#x2F;api&#x2F;permissions&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
                urllib.parse.quote_plus(vhost),
                urllib.parse.quote_plus(name)
            ),
            data&#x3D;data
        )

    def list_policies(self):
        &quot;&quot;&quot;
        A list of all policies
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;policies&#39;)

    def list_policies_for_vhost(self, vhost):
        &quot;&quot;&quot;
        A list of all policies for a vhost.
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;policies&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(vhost)
        ))

    def get_policy_for_vhost(self, vhost, name):
        &quot;&quot;&quot;
        Get a specific policy for a vhost.

        :param vhost: The virtual host the policy is for
        :type vhost: str
        :param name: The name of the policy
        :type name: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;policies&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
            urllib.parse.quote_plus(vhost),
            urllib.parse.quote_plus(name),
        ))

    def create_policy_for_vhost(
            self, vhost, name,
            definition,
            pattern&#x3D;None,
            priority&#x3D;0,
            apply_to&#x3D;&#39;all&#39;):
        &quot;&quot;&quot;
        Create a policy for a vhost.

        :param vhost: The virtual host the policy is for
        :type vhost: str
        :param name: The name of the policy
        :type name: str

        :param definition: The definition of the policy. Required
        :type definition: dict
        :param priority: The priority of the policy. Defaults to 0
        :param pattern: The pattern of resource names to apply the policy to
        :type pattern: str
        :type priority: int
        :param apply_to: What resource type to apply the policy to.
            Usually &quot;exchanges&quot;, &quot;queues&quot;, or &quot;all&quot;. Defaults to &quot;all&quot;
        :type apply_to: str

        Example ::

            # Makes all queues and exchanges on vhost &quot;&#x2F;&quot; highly available
            &gt;&gt;&gt; api.create_policy_for_vhost(
            ... vhost&#x3D;&quot;&#x2F;&quot;,
            ... name&#x3D;&quot;ha-all&quot;,
            ... definition&#x3D;&#123;&quot;ha-mode&quot;: &quot;all&quot;&#125;,
            ... pattern&#x3D;&quot;&quot;,
            ... apply_to&#x3D;&quot;all&quot;)

        &quot;&quot;&quot;
        data &#x3D; &#123;
            &quot;pattern&quot;: pattern,
            &quot;definition&quot;: definition,
            &quot;priority&quot;: priority,
            &quot;apply-to&quot;: apply_to
        &#125;
        self._api_put(
            &#39;&#x2F;api&#x2F;policies&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#39;.format(
                urllib.parse.quote_plus(vhost),
                urllib.parse.quote_plus(name),
            ),
            data&#x3D;data,
        )

    def delete_policy_for_vhost(self, vhost, name):
        &quot;&quot;&quot;
        Delete a specific policy for a vhost.

        :param vhost: The virtual host of the policy
        :type vhost: str
        :param name: The name of the policy
        :type name: str
        &quot;&quot;&quot;
        self._api_delete(&#39;&#x2F;api&#x2F;policies&#x2F;&#123;0&#125;&#x2F;&#123;1&#125;&#x2F;&#39;.format(
            urllib.parse.quote_plus(vhost),
            urllib.parse.quote_plus(name),
        ))

    def is_vhost_alive(self, vhost):
        &quot;&quot;&quot;
        Declares a test queue, then publishes and consumes a message.
        Intended for use by monitoring tools.

        :param vhost: The vhost name to check
        :type vhost: str
        &quot;&quot;&quot;
        return self._api_get(&#39;&#x2F;api&#x2F;aliveness-test&#x2F;&#123;0&#125;&#39;.format(
            urllib.parse.quote_plus(vhost)
        ))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>redis安装</title>
    <url>/2021/12/21/redis%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h4 id="后端启动：">后端启动：</h4>
<pre class="line-numbers language-none"><code class="language-none">.&#x2F;redis-server &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="windows服务：">windows服务：</h4>
<pre class="line-numbers language-none"><code class="language-none"># 注册redis服务
redis-server --service-install redis.conf --service-name redis
# 启动redis服务
net start redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="docker方式启动：">docker方式启动：</h4>
<pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;data&#x2F;redis
chown -R 1000:1000 &#x2F;data&#x2F;redis
 
docker run -d --name redis --restart&#x3D;always -p 6379:6379 -v &#x2F;data&#x2F;redis:&#x2F;data wjf8882300&#x2F;redis:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Dockerfile">Dockerfile</h4>
<pre class="line-numbers language-none"><code class="language-none">FROM redis
MAINTAINER wangjingfeng2008@163.com
COPY redis.conf &#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf
EXPOSE 6379
CMD [ &quot;redis-server&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf&quot; ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="修改配置文件-redis-conf">修改配置文件 redis.conf</h4>
<pre class="line-numbers language-none"><code class="language-none">#bind 127.0.0.1
 
requirepass n2dasUhH0Iziq18Z
 
port 6379
 
notify-keyspace-events &quot;Ex&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis批量删除key</title>
    <url>/2021/12/21/redis%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4key/</url>
    <content><![CDATA[<p>比如删除com:uecent:udata:basketball*</p>
<pre class="line-numbers language-none"><code class="language-none">python3 redis_delete.py -d 3 -k com:uecent:udata:basketball<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>参数说明：<br>
-d 表示第几个数据库<br>
-k 表示前缀</p>
<p>redis_delete.py源码</p>
<pre class="line-numbers language-none"><code class="language-none"># -*- coding:UTF-8 -*-
import redis
import sys
import getopt
 
############################################
# example:
# delete db0: python3 redis_delete.py  -k &#39;udata.climb&#39; -d 0
# delete db1: python3 redis_delete.py  -k &#39;udata.climb&#39; -d 1
############################################
 
host &#x3D; &#39;127.0.0.1&#39;
port &#x3D; &#39;6379&#39;
password &#x3D; &#39;n2dasUhH0Iziq18Z&#39;
 
def delete(key, database):
    r &#x3D; redis.Redis(host&#x3D;host, port&#x3D;port, db&#x3D;database, password&#x3D;password, decode_responses&#x3D;True)
    list_keys &#x3D; r.keys(&quot;%s*&quot; % key)
 
    for key in list_keys:
        r.delete(key)
 
if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    root_path &#x3D; &quot;&quot;
    is_rename &#x3D; True
 
    argv &#x3D; sys.argv[1:]
    if len(argv) &lt; 1:
        print(&#39;redis_delete.py -k &lt;Key&gt; -d &lt;Database&gt;&#39;)
        sys.exit()
 
    # 获取命令行参数
    try:
        opts, args &#x3D; getopt.getopt(argv, &quot;hk:d:&quot;, [&quot;kKey&#x3D;&quot;, &quot;dDatabase&#x3D;&quot;])
    except getopt.GetoptError:
        print(&#39;redis_delete.py -k &lt;Key&gt; -d &lt;Database&gt;&#39;)
        sys.exit(2)
 
    for opt, arg in opts:
        if opt &#x3D;&#x3D; &#39;-h&#39;:
            print(&#39;redis_delete.py -k &lt;Key&gt; -d &lt;Database&gt;&#39;)
            sys.exit()
        elif opt in (&quot;-k&quot;, &quot;--kKey&quot;):
            key &#x3D; arg
        elif opt in (&quot;-d&quot;, &quot;--dDatabase&quot;):
            database &#x3D; arg
    delete(key, int(database))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>redis集群</title>
    <url>/2021/12/21/redis%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<p>一主多从集群<br>
以三台机器为例<br>
node1: 172.19.192.179:6379<br>
node2: 172.19.192.179:6380<br>
node3: 172.19.192.179:6381</p>
<pre class="line-numbers language-none"><code class="language-none"># node1: 172.19.192.179:6379
docker run -d --name redis-node1 -p 6379:6379 -v &#x2F;data&#x2F;redis&#x2F;node1:&#x2F;data redis:5.0.5
# node2: 172.19.192.179:6380
docker run -d --name redis-node2 -p 6380:6379 -v &#x2F;data&#x2F;redis&#x2F;node2:&#x2F;data redis:5.0.5
# node3: 172.19.192.179:6381
docker run -d --name redis-node3 -p 6381:6379 -v &#x2F;data&#x2F;redis&#x2F;node3:&#x2F;data redis:5.0.5

# node2上执行
docker exec -it redis-node2 redis-cli
127.0.0.1:6379&gt; auth n2dasUhH0Iziq18Z
OK
127.0.0.1:6379&gt; slaveof 172.19.192.179 6379
OK
 
# node3上执行
docker exec -it redis-node3 redis-cli
127.0.0.1:6379&gt; auth n2dasUhH0Iziq18Z
OK
127.0.0.1:6379&gt; slaveof 172.19.192.179 6379
OK
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="cluster集群">cluster集群</h4>
<h5 id="1-编写redis-cluster-tmpl">1.编写redis-cluster.tmpl</h5>
<pre class="line-numbers language-none"><code class="language-none"># redis端口
port $&#123;PORT&#125;
# 设置密码
requirepass n2dasUhH0Iziq18Z
masterauth n2dasUhH0Iziq18Z
# 关闭保护模式
protected-mode no
# 开启集群
cluster-enabled yes
# 集群节点配置
cluster-config-file nodes.conf
# 超时
cluster-node-timeout 5000
# 集群节点IP host模式为宿主机IP
cluster-announce-ip 172.19.192.179
# 集群节点端口 7001 - 7006
cluster-announce-port $&#123;PORT&#125;
cluster-announce-bus-port 1$&#123;PORT&#125;
# 开启 appendonly 备份模式
appendonly yes
# 每秒钟备份
appendfsync everysec
# 对aof文件进行压缩时，是否执行同步操作
no-appendfsync-on-rewrite no
# 当目前aof文件大小超过上一次重写时的aof文件大小的100%时会再次进行重写
auto-aof-rewrite-percentage 100
# 重写前AOF文件的大小最小值 默认 64mb
auto-aof-rewrite-min-size 64mb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-编写redis-cluster-config-sh"><a href="http://2.xn--redis-cluster-config-v596ay077d.sh">2.编写redis-cluster-config.sh</a></h5>
<pre class="line-numbers language-none"><code class="language-none">for port in &#96;seq 7001 7006&#96;; do \
  mkdir -p .&#x2F;redis-cluster&#x2F;$&#123;port&#125;&#x2F;conf \
  &amp;&amp; PORT&#x3D;$&#123;port&#125; envsubst &lt; .&#x2F;redis-cluster.tmpl &gt; .&#x2F;redis-cluster&#x2F;$&#123;port&#125;&#x2F;conf&#x2F;redis.conf \
  &amp;&amp; mkdir -p .&#x2F;redis-cluster&#x2F;$&#123;port&#125;&#x2F;data; \
done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="3-执行redis-cluster-config-sh创建集群所需目录">3.执行redis-cluster-config.sh创建集群所需目录</h5>
<h5 id="4-编写docker-compose-yaml">4.编写docker-compose.yaml</h5>
<pre class="line-numbers language-none"><code class="language-none">version: &#39;2.2&#39;
 
services:
  redis7001:
    image: &#39;redis&#39;
    container_name: redis7001
    command:
      [&quot;redis-server&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf&quot;]
    volumes:
      - .&#x2F;redis-cluster&#x2F;7001&#x2F;conf&#x2F;redis.conf:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf
      - .&#x2F;redis-cluster&#x2F;7001&#x2F;data:&#x2F;data
    ports:
      - &quot;7001:7001&quot;
      - &quot;17001:17001&quot;
    environment:
      # 设置时区为上海，否则时间会有问题
      - TZ&#x3D;Asia&#x2F;Shanghai
    logging:
      driver: &quot;json-file&quot;
      options:
        max-size: &quot;100m&quot;
        max-file: &quot;3&quot;
       
         
 
  redis7002:
    image: &#39;redis&#39;
    container_name: redis7002
    command:
      [&quot;redis-server&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf&quot;]
    volumes:
      - .&#x2F;redis-cluster&#x2F;7002&#x2F;conf&#x2F;redis.conf:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf
      - .&#x2F;redis-cluster&#x2F;7002&#x2F;data:&#x2F;data
    ports:
      - &quot;7002:7002&quot;
      - &quot;17002:17002&quot;
    environment:
      # 设置时区为上海，否则时间会有问题
      - TZ&#x3D;Asia&#x2F;Shanghai
    logging:
      driver: &quot;json-file&quot;
      options:
        max-size: &quot;100m&quot;
        max-file: &quot;3&quot;  
 
  redis7003:
    image: &#39;redis&#39;
    container_name: redis7003
    command:
      [&quot;redis-server&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf&quot;]
    volumes:
      - .&#x2F;redis-cluster&#x2F;7003&#x2F;conf&#x2F;redis.conf:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf
      - .&#x2F;redis-cluster&#x2F;7003&#x2F;data:&#x2F;data
    ports:
      - &quot;7003:7003&quot;
      - &quot;17003:17003&quot;
    environment:
      # 设置时区为上海，否则时间会有问题
      - TZ&#x3D;Asia&#x2F;Shanghai
    logging:
      driver: &quot;json-file&quot;
      options:
        max-size: &quot;100m&quot;
        max-file: &quot;3&quot;    
       
  redis7004:
    image: &#39;redis&#39;
    container_name: redis7004
    command:
      [&quot;redis-server&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf&quot;]
    volumes:
      - .&#x2F;redis-cluster&#x2F;7004&#x2F;conf&#x2F;redis.conf:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf
      - .&#x2F;redis-cluster&#x2F;7004&#x2F;data:&#x2F;data
    ports:
      - &quot;7004:7004&quot;
      - &quot;17004:17004&quot;
    environment:
      # 设置时区为上海，否则时间会有问题
      - TZ&#x3D;Asia&#x2F;Shanghai
    logging:
      driver: &quot;json-file&quot;
      options:
        max-size: &quot;100m&quot;
        max-file: &quot;3&quot;  
 
  redis7005:
    image: &#39;redis&#39;
    container_name: redis7005
    command:
      [&quot;redis-server&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf&quot;]
    volumes:
      - .&#x2F;redis-cluster&#x2F;7005&#x2F;conf&#x2F;redis.conf:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf
      - .&#x2F;redis-cluster&#x2F;7005&#x2F;data:&#x2F;data
    ports:
      - &quot;7005:7005&quot;
      - &quot;17005:17005&quot;
    environment:
      # 设置时区为上海，否则时间会有问题
      - TZ&#x3D;Asia&#x2F;Shanghai
    logging:
      driver: &quot;json-file&quot;
      options:
        max-size: &quot;100m&quot;
        max-file: &quot;3&quot;   
 
  redis7006:
    image: &#39;redis&#39;
    container_name: redis7006
    command:
      [&quot;redis-server&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf&quot;]
    volumes:
      - .&#x2F;redis-cluster&#x2F;7006&#x2F;conf&#x2F;redis.conf:&#x2F;usr&#x2F;local&#x2F;etc&#x2F;redis&#x2F;redis.conf
      - .&#x2F;redis-cluster&#x2F;7006&#x2F;data:&#x2F;data
    ports:
      - &quot;7006:7006&quot;
      - &quot;17006:17006&quot;
    environment:
      # 设置时区为上海，否则时间会有问题
      - TZ&#x3D;Asia&#x2F;Shanghai   
    logging:
      driver: &quot;json-file&quot;
      options:
        max-size: &quot;100m&quot;
        max-file: &quot;3&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="5-启动redis集群容器">5.启动redis集群容器</h5>
<pre class="line-numbers language-none"><code class="language-none">docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h5 id="6-执行命令完成集群配置">6.执行命令完成集群配置</h5>
<pre class="line-numbers language-none"><code class="language-none">docker exec -it redis7001 redis-cli -p 7001 -a n2dasUhH0Iziq18Z --cluster create 172.19.192.179:7001 172.19.192.179:7002 172.19.192.179:7003 172.19.192.179:7004 172.19.192.179:7005 172.19.192.179:7006 --cluster-replicas 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h5 id="7-测试集群">7.测试集群</h5>
<pre class="line-numbers language-none"><code class="language-none">docker exec -it redis7001 redis-cli -h 172.19.192.179 -p 7005 -a n2dasUhH0Iziq18Z ping<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot druid监控</title>
    <url>/2021/12/23/spring-boot-druid%E7%9B%91%E6%8E%A7/</url>
    <content><![CDATA[<h4 id="1、配置文件">1、配置文件</h4>
<pre class="line-numbers language-none"><code class="language-none">datasource:
  druid:
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@xxx.xxx.xxx.xxx:1521:orcl
    username: bt_test
    password: bt_test2
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select &#39;x&#39; from dual
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    # 下面开启监控功能
    web-stat-filter:
      enabled: true
      url-pattern: &#x2F;*
      exclusions: &#x2F;*.js,&#x2F;*.gif,&#x2F;*.jpg,&#x2F;*.bmp,&#x2F;*.png,&#x2F;*.css,&#x2F;*.ico,&#x2F;druid&#x2F;*
    filter:
      stat:
        enabled: true
        log-slow-sql: true
        slow-sql-millis: 10000
        merge-sql: true
    aop-patterns: com.btong.*
    stat-view-servlet:
      enabled: true
      login-username: btong
      login-password: 
      allow:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="2-访问监控日志">2.访问监控日志</h4>
<h5 id="2-1-登录网站">2.1.登录网站</h5>
<p><a href="http://xxx.xxx.xxx.xxx/druid/login.html">http://xxx.xxx.xxx.xxx/druid/login.html</a><br>
输入用户名：btong<br>
输入密码：btong@123</p>
<h5 id="2-2-监控截图">2.2.监控截图</h5>
<p><img src="/2021/12/23/spring-boot-druid%E7%9B%91%E6%8E%A7/druid.png" alt="这是druid监控页面截图"></p>
]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 多数据源</title>
    <url>/2021/12/23/spring-boot-%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/</url>
    <content><![CDATA[<h4 id="1-配置文件">1.配置文件</h4>
<pre class="line-numbers language-none"><code class="language-none">datasource:
    druid:
      football:
        url: jdbc:postgresql:&#x2F;&#x2F;xxx.xxx.xxx:5432&#x2F;xxx
        username: xxx
        password: xxxxxx
        driver-class-name: org.postgresql.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select &#39;x&#39;
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
      basketball:
        url: jdbc:postgresql:&#x2F;&#x2F;xxx.xxx.xxx:5432&#x2F;xxx
        username: xxx
        password: xxxxxx
        driver-class-name: org.postgresql.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select &#39;x&#39;
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="2-DataSourceConfig配置类">2.DataSourceConfig配置类</h4>
<pre class="line-numbers language-none"><code class="language-none">package com.uecent.provider.api.module.common.config;

import com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import javax.sql.DataSource;

@Configuration
public class DataSourceConfig &#123;

    @Bean(name &#x3D; &quot;footballDataSource&quot;)
    @ConfigurationProperties(prefix&#x3D;&quot;spring.datasource.druid.football&quot;)
    public DataSource footballDataSource() &#123;
        return DruidDataSourceBuilder.create().build();
    &#125;

    @Bean(name &#x3D; &quot;basketballDataSource&quot;)
    @ConfigurationProperties(prefix&#x3D;&quot;spring.datasource.druid.basketball&quot;)
    public DataSource basketballDataSource() &#123;
        return DruidDataSourceBuilder.create().build();
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="3-针对两个数据源的配置类">3.针对两个数据源的配置类</h4>
<p>MybatisBasketballConfig.java</p>
<pre class="line-numbers language-none"><code class="language-none">package com.uecent.provider.api.module.common.config;

import com.baomidou.mybatisplus.core.MybatisConfiguration;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.type.JdbcType;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.mybatis.spring.SqlSessionTemplate;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.support.PathMatchingResourcePatternResolver;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;

import javax.sql.DataSource;

&#x2F;**
 * Mybatis配置
 *&#x2F;
@MapperScan(value &#x3D; MybatisBasketballConfig.PACKAGE, nameGenerator &#x3D; MybatisGenerator.class, sqlSessionTemplateRef &#x3D; &quot;basketballSqlSessionTemplate&quot;)
@Configuration
public class MybatisBasketballConfig &#123;

    static final String PACKAGE &#x3D; &quot;com.uecent.provider.api.mapper.basketball&quot;;
    static final String MAPPER_LOCATION &#x3D; &quot;classpath:mapper&#x2F;basketball&#x2F;*.xml&quot;;

    @Bean(name &#x3D; &quot;basketballTransactionManager&quot;)
    public DataSourceTransactionManager basketballTransactionManager(@Qualifier(&quot;basketballDataSource&quot;) DataSource dataSource) &#123;
        return new DataSourceTransactionManager(dataSource);
    &#125;

    @Bean(name &#x3D; &quot;basketballSqlSessionFactory&quot;)
    public SqlSessionFactory basketballSqlSessionFactory(@Qualifier(&quot;basketballDataSource&quot;) DataSource dataSource)
            throws Exception &#123;
        final SqlSessionFactoryBean sessionFactory &#x3D; new SqlSessionFactoryBean();
        sessionFactory.setDataSource(dataSource);
        sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(MybatisBasketballConfig.MAPPER_LOCATION));
        MybatisConfiguration configuration &#x3D; new MybatisConfiguration();
        configuration.setJdbcTypeForNull(JdbcType.NULL);
        configuration.setMapUnderscoreToCamelCase(true);
        configuration.setCacheEnabled(false);
        sessionFactory.setConfiguration(configuration);
        return sessionFactory.getObject();
    &#125;


    @Bean(name &#x3D; &quot;basketballSqlSessionTemplate&quot;)
    public SqlSessionTemplate sqlSessionTemplateOne(@Qualifier(&quot;basketballSqlSessionFactory&quot;) SqlSessionFactory sqlSessionFactory) throws Exception &#123;
        return new SqlSessionTemplate(sqlSessionFactory);
    &#125;
&#125;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>MybatisFootballConfig.java</p>
<pre class="line-numbers language-none"><code class="language-none">package com.uecent.provider.api.module.common.config;

import com.baomidou.mybatisplus.core.MybatisConfiguration;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.type.JdbcType;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.mybatis.spring.SqlSessionTemplate;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.core.io.support.PathMatchingResourcePatternResolver;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;

import javax.sql.DataSource;

&#x2F;**
 * Mybatis配置
 *&#x2F;
@MapperScan(value &#x3D; MybatisFootballConfig.PACKAGE, nameGenerator &#x3D; MybatisGenerator.class, sqlSessionTemplateRef &#x3D; &quot;footballSqlSessionTemplate&quot;)
@Configuration
public class MybatisFootballConfig &#123;

    static final String PACKAGE &#x3D; &quot;com.uecent.provider.api.mapper.football&quot;;
    static final String MAPPER_LOCATION &#x3D; &quot;classpath:mapper&#x2F;football&#x2F;*.xml&quot;;

    @Bean(name &#x3D; &quot;footballTransactionManager&quot;)
    @Primary
    public DataSourceTransactionManager footballTransactionManager(@Qualifier(&quot;footballDataSource&quot;) DataSource dataSource) &#123;
        return new DataSourceTransactionManager(dataSource);
    &#125;

    @Bean(name &#x3D; &quot;footballSqlSessionFactory&quot;)
    @Primary
    public SqlSessionFactory footballSqlSessionFactory(@Qualifier(&quot;footballDataSource&quot;) DataSource dataSource)
            throws Exception &#123;
        final SqlSessionFactoryBean sessionFactory &#x3D; new SqlSessionFactoryBean();
        sessionFactory.setDataSource(dataSource);
        sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(MybatisFootballConfig.MAPPER_LOCATION));
        MybatisConfiguration configuration &#x3D; new MybatisConfiguration();
        configuration.setJdbcTypeForNull(JdbcType.NULL);
        configuration.setMapUnderscoreToCamelCase(true);
        configuration.setCacheEnabled(false);
        sessionFactory.setConfiguration(configuration);
        return sessionFactory.getObject();
    &#125;

    @Bean(name &#x3D; &quot;footballSqlSessionTemplate&quot;)
    @Primary
    public SqlSessionTemplate sqlSessionTemplateOne(@Qualifier(&quot;footballSqlSessionFactory&quot;) SqlSessionFactory sqlSessionFactory) throws Exception &#123;
        return new SqlSessionTemplate(sqlSessionFactory);
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 原始报文日志</title>
    <url>/2021/12/23/spring-boot-%E5%8E%9F%E5%A7%8B%E6%8A%A5%E6%96%87%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<p>日志记录在进入controller之前</p>
<h4 id="1-配置FilterConfig">1.配置FilterConfig</h4>
<pre class="line-numbers language-none"><code class="language-none">package com.yier.platform.aop;
 
import org.springframework.boot.web.servlet.FilterRegistrationBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
 
@Configuration
public class FilterConfig &#123;
 
    @Bean
    public FilterRegistrationBean registFilter() &#123;
        FilterRegistrationBean registration &#x3D; new FilterRegistrationBean();
        registration.setFilter(new LogParamFilter());
        registration.addUrlPatterns(&quot;&#x2F;*&quot;);
        registration.setName(&quot;LogFilter&quot;);
        registration.setOrder(0);
        return registration;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="2-配置LogParamFilter">2.配置LogParamFilter</h4>
<pre class="line-numbers language-none"><code class="language-none">package com.yier.platform.aop;
import lombok.extern.slf4j.Slf4j;
import org.springframework.core.Ordered;
import org.springframework.web.filter.OncePerRequestFilter;
import org.springframework.web.util.ContentCachingRequestWrapper;
import org.springframework.web.util.ContentCachingResponseWrapper;
import org.springframework.web.util.WebUtils;
 
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;
 
@Slf4j
public class LogParamFilter extends OncePerRequestFilter implements Ordered &#123;
    &#x2F;&#x2F; put filter at the end of all other filters to make sure we are processing after all others
    private int order &#x3D; Ordered.LOWEST_PRECEDENCE - 8;
    public static final String SPLIT_STRING_M &#x3D; &quot;&#x3D;&quot;;
    public static final String SPLIT_STRING_DOT &#x3D; &quot;, &quot;;
 
    @Override
    public int getOrder() &#123;
        return order;
    &#125;
 
    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response,
                                    FilterChain filterChain) throws ServletException, IOException &#123;
        ContentCachingRequestWrapper wrapperRequest &#x3D; new ContentCachingRequestWrapper(request);
        ContentCachingResponseWrapper wrapperResponse &#x3D; new ContentCachingResponseWrapper(response);
        &#x2F;&#x2F;String urlParams &#x3D; getRequestParams(request);
        filterChain.doFilter(wrapperRequest, wrapperResponse);
 
 
        String requestBodyStr &#x3D; getRequestBody(wrapperRequest);
        log.info(&quot;url:&#123;&#125;, request body:&#123;&#125;&quot;, request.getRequestURI(), requestBodyStr);
 
        String responseBodyStr &#x3D; getResponseBody(wrapperResponse);
        log.info(&quot;url:&#123;&#125;, response body:&#123;&#125;&quot;, request.getRequestURI(), responseBodyStr);
        wrapperResponse.copyBodyToResponse();
    &#125;
 
    &#x2F;**
     * 打印请求参数
     *
     * @param request
     *&#x2F;
    private String getRequestBody(ContentCachingRequestWrapper request) &#123;
        ContentCachingRequestWrapper wrapper &#x3D; WebUtils.getNativeRequest(request, ContentCachingRequestWrapper.class);
        if (wrapper !&#x3D; null) &#123;
            byte[] buf &#x3D; wrapper.getContentAsByteArray();
            if (buf.length &gt; 0) &#123;
                String payload;
                try &#123;
                    payload &#x3D; new String(buf, 0, buf.length, wrapper.getCharacterEncoding());
                &#125; catch (UnsupportedEncodingException e) &#123;
                    payload &#x3D; &quot;[unknown]&quot;;
                &#125;
                return payload.replaceAll(&quot;\\n&quot;, &quot;&quot;);
            &#125;
        &#125;
        return &quot;&quot;;
    &#125;
 
    &#x2F;**
     * 打印返回参数
     *
     * @param response
     *&#x2F;
    private String getResponseBody(ContentCachingResponseWrapper response) &#123;
        ContentCachingResponseWrapper wrapper &#x3D; WebUtils.getNativeResponse(response,
                ContentCachingResponseWrapper.class);
        if (wrapper !&#x3D; null) &#123;
            byte[] buf &#x3D; wrapper.getContentAsByteArray();
            if (buf.length &gt; 0) &#123;
                String payload;
                try &#123;
                    payload &#x3D; new String(buf, 0, buf.length, wrapper.getCharacterEncoding());
                &#125; catch (UnsupportedEncodingException e) &#123;
                    payload &#x3D; &quot;[unknown]&quot;;
                &#125;
                return payload;
            &#125;
        &#125;
        return &quot;&quot;;
    &#125;
 
    &#x2F;**
     * 获取请求地址上的参数
     *
     * @param request
     * @return
     *&#x2F;
    public static String getRequestParams(HttpServletRequest request) &#123;
        StringBuilder sb &#x3D; new StringBuilder();
        Enumeration&lt;String&gt; enu &#x3D; request.getParameterNames();
        &#x2F;&#x2F;获取请求参数
        while (enu.hasMoreElements()) &#123;
            String name &#x3D; enu.nextElement();
            sb.append(name + SPLIT_STRING_M).append(request.getParameter(name));
            if (enu.hasMoreElements()) &#123;
                sb.append(SPLIT_STRING_DOT);
            &#125;
        &#125;
        return sb.toString();
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot 访问日志</title>
    <url>/2021/12/23/spring-boot-%E8%AE%BF%E9%97%AE%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<p>访问日志在进入controller时才调用，若之前发生错误（如参数转换json对象时，参考spring-boot-原始报文日志），此处无法调用。</p>
<pre class="line-numbers language-none"><code class="language-none">package com.yier.platform.aop;
 
import com.yier.platform.common.po.medical.res.BaseMedicalRes;
import com.yier.platform.common.util.JsonUtils;
import com.yier.platform.common.util.WebUtil;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
 
@Aspect
@Component
public class VisitLogIntercept &#123;
 
    private Logger logger &#x3D; LoggerFactory.getLogger(getClass());
 
    private static final int MAX_RESULT_LENGTH &#x3D; 10000;
 
    &#x2F;** 打印日志与响应时间 *&#x2F;
    @Around(&quot;within(com.yier.platform.controller..*Controller)&quot;)
    public Object around(ProceedingJoinPoint pjp) throws Throwable &#123;
        long curTime &#x3D; System.currentTimeMillis();
        ServletRequestAttributes req &#x3D; (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();
        String controller &#x3D; pjp.getTarget().getClass().getName();
        String method &#x3D;  pjp.getSignature().getName();
        Object args &#x3D; WebUtil.getArgs(pjp.getArgs());
 
        if(req &#x3D;&#x3D; null || req.getRequest() &#x3D;&#x3D; null)&#123;
            return pjp.proceed();
        &#125;
 
        if(args &#x3D;&#x3D; null &amp;&amp; req.getRequest().getParameterMap() !&#x3D; null) &#123;
            args &#x3D; req.getRequest().getParameterMap();
        &#125;
        logger.info(&quot;IP：&#123;&#125;，类：&#123;&#125;，方法：&#123;&#125;，参数：&#123;&#125;&quot;, WebUtil.getHost(req.getRequest()), controller, method, JsonUtils.toJsonString(args));
        Object result &#x3D; pjp.proceed();
 
        &#x2F;&#x2F; 若返回结果超过1万，则截取前1万个字符打印（实测发现有超过100万的）
        String strResult &#x3D; &quot;&quot;;
        if(result !&#x3D; null) &#123;
            if(result instanceof BaseMedicalRes) &#123;
                strResult &#x3D; JsonUtils.toJsonString(result);
            &#125; else &#123;
                strResult &#x3D; result.toString();
            &#125;
            if(strResult.length() &gt; MAX_RESULT_LENGTH) &#123;
                strResult &#x3D; strResult.substring(0, MAX_RESULT_LENGTH) + &quot;...&quot;;
            &#125;
        &#125;
 
        logger.info(&quot;类：&#123;&#125;，方法：&#123;&#125;，消耗时间：&#123;&#125;ms，结果：&#123;&#125;&quot;, controller, method, System.currentTimeMillis() - curTime, strResult);
        return result;
    &#125;
 
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">package com.yier.platform.common.util;
 
import com.google.common.collect.Lists;
import org.apache.commons.lang3.StringUtils;
import org.springframework.ui.Model;
import org.springframework.util.CollectionUtils;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;
 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.List;
 
&#x2F;**
 * Web层辅助工具类
 * @author zhimou.qu
 * @create 2018年7月12日
 *&#x2F;
public class WebUtil &#123;
 
    &#x2F;** 获取当前ServletRequestAttributes *&#x2F;
    public static ServletRequestAttributes getCurServletRequestAttributes() &#123;
        return (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();
    &#125;
 
    &#x2F;** 获取当前HttpServletRequest *&#x2F;
    public static HttpServletRequest getCurRequest() &#123;
        return getCurServletRequestAttributes().getRequest();
    &#125;
 
    &#x2F;** 获取当前HttpServletResponse *&#x2F;
    public static HttpServletResponse getCurResponse() &#123;
        return getCurServletRequestAttributes().getResponse();
    &#125;
 
    &#x2F;** 获取客户端IP *&#x2F;
    public static final String getHost(HttpServletRequest request) &#123;
        String ip &#x3D; request.getHeader(&quot;X-Forwarded-For&quot;);
        if (StringUtils.isBlank(ip) || &quot;unknown&quot;.equalsIgnoreCase(ip)) &#123;
            ip &#x3D; request.getHeader(&quot;Proxy-Client-IP&quot;);
        &#125;
        if (StringUtils.isBlank(ip) || &quot;unknown&quot;.equalsIgnoreCase(ip)) &#123;
            ip &#x3D; request.getHeader(&quot;WL-Proxy-Client-IP&quot;);
        &#125;
        if (StringUtils.isBlank(ip) || &quot;unknown&quot;.equalsIgnoreCase(ip)) &#123;
            ip &#x3D; request.getHeader(&quot;X-Real-IP&quot;);
        &#125;
        if (StringUtils.isBlank(ip) || &quot;unknown&quot;.equalsIgnoreCase(ip)) &#123;
            ip &#x3D; request.getRemoteAddr();
        &#125;
        if (&quot;127.0.0.1&quot;.equals(ip)) &#123;
            InetAddress inet &#x3D; null;
            try &#123;
                inet &#x3D; InetAddress.getLocalHost();
            &#125; catch (UnknownHostException e) &#123;
                e.printStackTrace();
            &#125;
            ip &#x3D; inet.getHostAddress();
        &#125;
        if (ip !&#x3D; null &amp;&amp; ip.length() &gt; 15) &#123;
            if (ip.indexOf(&quot;,&quot;) &gt; 0) &#123;
                ip &#x3D; ip.substring(0, ip.indexOf(&quot;,&quot;));
            &#125;
        &#125;
        return ip;
    &#125;
 
    &#x2F;**
     * 获取路径
     *
     * @author  wangjf
     * @date    2019年1月24日 下午5:20:22
     * @param request
     * @return
     *&#x2F;
    public static final String getRequestPath(HttpServletRequest request) &#123;
        return request.getServletPath();
    &#125;
 
 
    &#x2F;**
     * 获取参数
     * @param args
     * @return
     *&#x2F;
    public static final Object getArgs(Object args) &#123;
        if(args !&#x3D; null) &#123;
            if(args instanceof Object[]) &#123;
                List&lt;Object&gt; argList &#x3D; Lists.newArrayList();
                for(Object object : (Object[])args)&#123;
                    if(isServletObject(object)) &#123;
                        continue;
                    &#125;
                    argList.add(object);
                &#125;
                if(CollectionUtils.isEmpty(argList)) &#123;
                    args &#x3D; null;
                &#125; else &#123;
                    args &#x3D; argList.toArray();
                &#125;
            &#125; else if(isServletObject(args)) &#123;
                args &#x3D; null;
            &#125;
        &#125;
        return args;
    &#125;
 
    &#x2F;**
     * 判断是否是servlet对象
     * @param object
     * @return
     *&#x2F;
    private static boolean isServletObject(Object object) &#123;
        if(object instanceof Model || object instanceof HttpServletRequest || object instanceof ModelAndView || object instanceof MultipartFile) &#123;
            return true;
        &#125;
        return false;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot读取属性文件properties的几种方式</title>
    <url>/2021/12/23/spring-boot%E8%AF%BB%E5%8F%96%E5%B1%9E%E6%80%A7%E6%96%87%E4%BB%B6properties%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>前三种测试配置文件为springboot默认的application.properties文件</p>
<blockquote><p>com.zyd.url=http://www.baidu.com</p>
</blockquote>
<h4 id="一、-ConfigurationProperties方式">一、@ConfigurationProperties方式</h4>
<pre class="line-numbers language-none"><code class="language-none">@Configuration
@ConfigurationProperties(prefix &#x3D; &quot;com.zyd&quot;)
public class PropertiesConfig &#123;
    private String url;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="二、使用-Value注解方式">二、使用@Value注解方式</h4>
<pre class="line-numbers language-none"><code class="language-none">@Controller
public class TestController &#123;
 
    @Value(&quot;$&#123;com.zyd.url&#125;&quot;)
    private String url;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="三、使用Environment">三、使用Environment</h4>
<pre class="line-numbers language-none"><code class="language-none">@Controller
public class TestController &#123;
    @Autowired
    private Environment env;
 
    @RequestMapping(&quot;&#x2F;env&quot;)
    public Map&lt;String, Object&gt; env() throws UnsupportedEncodingException &#123;
        Map&lt;String, Object&gt; map &#x3D; new HashMap&lt;String, Object&gt;();
        map.put(&quot;url&quot;, env.getProperty(&quot;com.zyd.url&quot;));
        return map;
    &#125;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="四、使用PropertiesLoaderUtils">四、使用PropertiesLoaderUtils</h4>
<p>可以自定义属性文件，如app-config.properties</p>
<blockquote>
<p>com.zyd.url=http://www.baidu.com</p>
</blockquote>
<pre><code>try &#123;
            Properties properties = PropertiesLoaderUtils.loadAllProperties(&quot;app-config.properties&quot;);
            String url = properties.get(&quot;com.zyd.url&quot;);
        &#125; catch (IOException e) &#123;
            e.printStackTrace();
        &#125;
</code></pre>
]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>以太坊geth安装</title>
    <url>/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ageth%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>geth是以太坊的客户端，可用于跟以太坊的链进行交互。它可以同步区块到本地，也可以发布交易到区块上，甚至可以挖矿。<br>
对于我来说，我用geth来获取以太坊交易信息，用户余额，部署合约，调用合约等。</p>
<h3 id="1-镜像">1.镜像</h3>
<p>以太坊 网站 列出以下可用的镜像及其说明。<br>
ethereum/client-go:latest是Geth的最新开发版本<br>
ethereum/client-go:stable是Geth的最新稳定版本<br>
ethereum/client-go:{version}是Geth在特定版本号上的稳定版本<br>
ethereum/client-go:release-{version}是Geth在特定版本系列上的最新稳定版本<br>
从容器运行时，默认情况下打开以下端口。<br>
8545 TCP，由基于HTTP的JSON RPC API使用<br>
8546 TCP，由基于WebSocket的JSON RPC API使用<br>
30303 TCP和UDP，由运行网络的P2P协议使用<br>
30304 UDP，由P2P协议的新对等发现覆盖使用</p>
<h3 id="2-docker安装">2.docker安装</h3>
<p>安装rinkeby测试链为例</p>
<pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;data&#x2F;rinkeby
cd &#x2F;data
 
docker run -itd \
--restart&#x3D;unless-stopped \
-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime \
-v &#x2F;etc&#x2F;timezone:&#x2F;etc&#x2F;timezone \
--name rinkeby-eth \
-v $(pwd)&#x2F;rinkeby:&#x2F;root&#x2F;.ethereum&#x2F;rinkeby \
-p 8545:8545 -p 30303:30303 \
ethereum&#x2F;client-go \
--rinkeby \
--rpcapi db,eth,net,web3,personal,web3,txpool \
--syncmode&#x3D;fast \
--rpc --rpcaddr 0.0.0.0 \
--cache 2048 \
--maxpeers 30 \--allow-insecure-unlock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="3-执行geth">3.执行geth</h3>
<pre class="line-numbers language-none"><code class="language-none">
docker exec -it rinkeby-eth bash
geth attach &#x2F;root&#x2F;.ethereum&#x2F;rinkeby&#x2F;geth.ipc
 
# 查看区块同步状态
&gt;eth.syncing<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="3-1-geth命令">3.1 geth命令</h4>
<ul>
<li>eth.syncing 如果返回的是false，证明同步完成了，可以使用当前节点。否则会返回同步状态</li>
<li>currentBlock为当前下载到的区块高度，请注意，下载块不等于同步数据了，下载块是一个简单快速的过程，只验证相关的工作量证明，在下载块的同时geth也在一直下载所有的区块数据，当数据下载完成后届时才会处理曾经发生过的所有交易，重新组装整个链。</li>
<li>txpool.content 获取池内交易详情</li>
<li>txpool.inspect 获取池内交易概况</li>
<li>txpool.status 获取交易状态</li>
</ul>
<h4 id="3-2清空池">3.2清空池</h4>
<p>有时会出现所有交易都被阻塞的情况，可以手工清空池，然后重启服务，重新同步。</p>
<pre class="line-numbers language-none"><code class="language-none">rm -rf &#x2F;root&#x2F;.ethereum&#x2F;rinkeby&#x2F;transactions.rlp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      <categories>
        <category>区块链</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>以太坊hash与签名</title>
    <url>/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ahash%E4%B8%8E%E7%AD%BE%E5%90%8D/</url>
    <content><![CDATA[<h2 id="1-交易签名">1.交易签名</h2>
<h3 id="1-1-交易签名的构成">1.1 交易签名的构成</h3>
<p>下面以授权为例：<br>
0xf8ac8201368502540be400830c350094425c2d431065fcf120e78d47b88067349795fe3e80b844095ea7b300000000000<br>
0000000000000629aa1e54564fe9f917143bed33fc280a8fdd93f0000000000000000000000000000000000000000000000<br>
000000b5e620f480002ba0474d4e4e464e415abba86600fd7f0a75261cd89a3857c0e0d3e9676f028d534ea028b64c84c86<br>
dc60eba4186db8922946c2b30d42f7bcd698a86cd65740ce6580f</p>
<ul>
<li>0136 表示nonce</li>
<li>02540be400 表示gas price，转换为10进制为10000000000，即10Gwei</li>
<li>0c3500 表示gas limit，转为10进制即800000</li>
<li>425C2D431065fcf120E78d47b88067349795Fe3e 即to，表示合约地址0x425C2D431065fcf120E78d47b88067349795Fe3e</li>
<li>b844表示value，按理应该是0，不知道具体含义</li>
<li>095ea7b3 methodId</li>
<li>000000000000000000000000629aa1e54564fe9f917143bed33fc280a8fdd93f 授权的钱包或者合约地址0x629aa1e54564fe9f917143bed33fc280a8fdd93f</li>
<li>0000000000000000000000000000000000000000000000000000b5e620f48000 授权的金额即0.0002个ETH</li>
<li>2ba0474d4e4e464e415abba86600fd7f0a75261cd89a3857c0e0d3e9676f028d534ea028b64c84c86dc60eba4186db892294<br>
6c2b30d42f7bcd698a86cd65740ce6580f为签名数据<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ahash%E4%B8%8E%E7%AD%BE%E5%90%8D/eth-01.png" alt></li>
</ul>
<h3 id="1-2-js版本交易签名">1.2 js版本交易签名</h3>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;**
 * 授权
 * @author wangjf 
 * @version v1.0
 * @date 2021-12-7
 *&#x2F;
var Tx     &#x3D; require(&#39;ethereumjs-tx&#39;).Transaction
var ethUtil &#x3D; require(&#39;ethereumjs-util&#39;);
const Web3 &#x3D; require(&#39;web3&#39;)
const rpcURL &#x3D; &quot;http:&#x2F;&#x2F;xxx.xxx.xxx.xxx:18545&quot;

const web3 &#x3D; new Web3(rpcURL)

&#x2F;** 
 * 买家、卖家、平台地址、私钥 
 *&#x2F;
const buyer &#x3D; &quot;0xCD2bedb135ba3e16F54d2B51959506297e78739D&quot;
const buyer_privateKey &#x3D; Buffer.from(&#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;, &#39;hex&#39;)

&#x2F;** 
 * 交易金额： 0.0002 ether
 *&#x2F;
const value &#x3D; &#39;0.0002&#39;

&#x2F;**
 * 代币合约地址
 *&#x2F;
const usdtAddress &#x3D; &#39;0x425C2D431065fcf120E78d47b88067349795Fe3e&#39;
&#x2F;**
 * 业务合约地址
 *&#x2F;
const contractAddress &#x3D; &#39;0x629aa1e54564fe9f917143bed33fc280a8fdd93f&#39;

&#x2F;**
 * 代币合约的abi文件
 *&#x2F;
const contractABI &#x3D; [
	&#123;
		&quot;constant&quot;: false,
		&quot;inputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;spender&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;name&quot;: &quot;value&quot;,
				&quot;type&quot;: &quot;uint256&quot;
			&#125;
		],
		&quot;name&quot;: &quot;approve&quot;,
		&quot;outputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;&quot;,
				&quot;type&quot;: &quot;bool&quot;
			&#125;
		],
		&quot;payable&quot;: false,
		&quot;stateMutability&quot;: &quot;nonpayable&quot;,
		&quot;type&quot;: &quot;function&quot;
	&#125;,
	&#123;
		&quot;constant&quot;: false,
		&quot;inputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;from&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;name&quot;: &quot;to&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;name&quot;: &quot;value&quot;,
				&quot;type&quot;: &quot;uint256&quot;
			&#125;
		],
		&quot;name&quot;: &quot;transferFrom&quot;,
		&quot;outputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;&quot;,
				&quot;type&quot;: &quot;bool&quot;
			&#125;
		],
		&quot;payable&quot;: false,
		&quot;stateMutability&quot;: &quot;nonpayable&quot;,
		&quot;type&quot;: &quot;function&quot;
	&#125;,
	&#123;
		&quot;constant&quot;: true,
		&quot;inputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;who&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;
		],
		&quot;name&quot;: &quot;balanceOf&quot;,
		&quot;outputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;&quot;,
				&quot;type&quot;: &quot;uint256&quot;
			&#125;
		],
		&quot;payable&quot;: false,
		&quot;stateMutability&quot;: &quot;view&quot;,
		&quot;type&quot;: &quot;function&quot;
	&#125;,
	&#123;
		&quot;constant&quot;: false,
		&quot;inputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;to&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;name&quot;: &quot;value&quot;,
				&quot;type&quot;: &quot;uint256&quot;
			&#125;
		],
		&quot;name&quot;: &quot;transfer&quot;,
		&quot;outputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;&quot;,
				&quot;type&quot;: &quot;bool&quot;
			&#125;
		],
		&quot;payable&quot;: false,
		&quot;stateMutability&quot;: &quot;nonpayable&quot;,
		&quot;type&quot;: &quot;function&quot;
	&#125;,
	&#123;
		&quot;constant&quot;: true,
		&quot;inputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;owner&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;name&quot;: &quot;spender&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;
		],
		&quot;name&quot;: &quot;allowance&quot;,
		&quot;outputs&quot;: [
			&#123;
				&quot;name&quot;: &quot;&quot;,
				&quot;type&quot;: &quot;uint256&quot;
			&#125;
		],
		&quot;payable&quot;: false,
		&quot;stateMutability&quot;: &quot;view&quot;,
		&quot;type&quot;: &quot;function&quot;
	&#125;,
	&#123;
		&quot;anonymous&quot;: false,
		&quot;inputs&quot;: [
			&#123;
				&quot;indexed&quot;: true,
				&quot;name&quot;: &quot;from&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;indexed&quot;: true,
				&quot;name&quot;: &quot;to&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;indexed&quot;: false,
				&quot;name&quot;: &quot;value&quot;,
				&quot;type&quot;: &quot;uint256&quot;
			&#125;
		],
		&quot;name&quot;: &quot;Transfer&quot;,
		&quot;type&quot;: &quot;event&quot;
	&#125;,
	&#123;
		&quot;anonymous&quot;: false,
		&quot;inputs&quot;: [
			&#123;
				&quot;indexed&quot;: true,
				&quot;name&quot;: &quot;owner&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;indexed&quot;: true,
				&quot;name&quot;: &quot;spender&quot;,
				&quot;type&quot;: &quot;address&quot;
			&#125;,
			&#123;
				&quot;indexed&quot;: false,
				&quot;name&quot;: &quot;value&quot;,
				&quot;type&quot;: &quot;uint256&quot;
			&#125;
		],
		&quot;name&quot;: &quot;Approval&quot;,
		&quot;type&quot;: &quot;event&quot;
	&#125;
]

&#x2F;**
 * 创建合约对象
 *&#x2F;
const contract &#x3D; new web3.eth.Contract(contractABI, usdtAddress)

&#x2F;**
 * 生成调用合约的abi对象
 *&#x2F;
const data &#x3D; contract.methods.approve(contractAddress, web3.utils.toWei(value, &#39;ether&#39;)).encodeABI()

&#x2F;**
 * 获取nonce并调用合约
 * @note  注意付款由买家发起
 *&#x2F;
web3.eth.getTransactionCount(buyer, (err, txCount) &#x3D;&gt; &#123;

    &#x2F;&#x2F; 创建交易对象
    const txObject &#x3D; &#123;
        nonce:    web3.utils.toHex(txCount),
        gasLimit: web3.utils.toHex(800000),
        gasPrice: web3.utils.toHex(web3.utils.toWei(&#39;10&#39;, &#39;gwei&#39;)),
        to: usdtAddress,
		data: data,
		value : 0,
      &#125;
  
    &#x2F;&#x2F; 签署交易
	const tx &#x3D; new Tx(txObject, &#123; chain: &#39;rinkeby&#39;, hardfork: &#39;petersburg&#39; &#125;)
	&#x2F;&#x2F; 买家私钥签名
	tx.sign(buyer_privateKey)
	
	&#x2F;&#x2F; 查看即将序列化的数据
	console.log(tx.raw);
	const serializedTx &#x3D; tx.serialize()
	const raw &#x3D; &#39;0x&#39; + serializedTx.toString(&#39;hex&#39;)
	&#x2F;&#x2F; 查看16进制数据
	console.log(raw);

	
  
    &#x2F;&#x2F; 广播交易
    web3.eth.sendSignedTransaction(raw, (err, txHash) &#x3D;&gt; &#123;
      console.log(&#39;txHash:&#39;, txHash)
      &#x2F;&#x2F; 可以去ropsten.etherscan.io查看交易详情
    &#125;)
  &#125;)  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>js输出：</p>
<pre class="line-numbers language-none"><code class="language-none">$ node viv-contract-usdt-aprrove
[
  &lt;Buffer 01 36&gt;,
  &lt;Buffer 02 54 0b e4 00&gt;,
  &lt;Buffer 0c 35 00&gt;,
  &lt;Buffer 42 5c 2d 43 10 65 fc f1 20 e7 8d 47 b8 80 67 34 97 95 fe 3e&gt;,
  &lt;Buffer &gt;,
  &lt;Buffer 09 5e a7 b3 00 00 00 00 00 00 00 00 00 00 00 00 62 9a a1 e5 45 64 fe 9f 91 71 43 be d3 3f c2 80 a8 fd d9 3f 00 00 00 00 00 00 00 00 00 00 00 00 00 0
0 ... 18 more bytes&gt;,
  &lt;Buffer 2b&gt;,
  &lt;Buffer 47 4d 4e 4e 46 4e 41 5a bb a8 66 00 fd 7f 0a 75 26 1c d8 9a 38 57 c0 e0 d3 e9 67 6f 02 8d 53 4e&gt;,
  &lt;Buffer 28 b6 4c 84 c8 6d c6 0e ba 41 86 db 89 22 94 6c 2b 30 d4 2f 7b cd 69 8a 86 cd 65 74 0c e6 58 0f&gt;
]
0xf8ac8201368502540be400830c350094425c2d431065fcf120e78d47b88067349795fe3e80b844095ea7b3000000000000000000000000629aa1e54564fe9f917143bed33fc280a8fdd93f000000
0000000000000000000000000000000000000000000000b5e620f480002ba0474d4e4e464e415abba86600fd7f0a75261cd89a3857c0e0d3e9676f028d534ea028b64c84c86dc60eba4186db892294
6c2b30d42f7bcd698a86cd65740ce6580f
txHash: 0x578e7508be076fbf9c7c29b1440b2719b8f593e2ef8be8cf278d3a90c5d0c03c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>从输出可以看出签名数据的整个结构</p>
<h3 id="1-3-java版本交易签名">1.3 java版本交易签名</h3>
<pre class="line-numbers language-none"><code class="language-none">public String transferContractTransaction(String fromAddress, String fromPrivateKey, String contractAddress, String contractFunction, BigInteger gasPrice, BigInteger gasLimit, BigInteger value, List&lt;Type&gt; inputParameters, List&lt;TypeReference&lt;?&gt;&gt; outputParameters) throws Exception &#123;
        Function function &#x3D; new Function(
                contractFunction,
                inputParameters,
                outputParameters);
        String encodedFunction &#x3D; FunctionEncoder.encode(function);
        Credentials credentials &#x3D; Credentials.create(fromPrivateKey);
 
        BigInteger nonce &#x3D; getNonce(credentials.getAddress());
        RawTransaction rawTransaction &#x3D; RawTransaction.createTransaction(nonce, gasPrice, gasLimit, contractAddress, value, encodedFunction);
 
        &#x2F;&#x2F;签名
        byte[] signedMessage &#x3D; TransactionEncoder.signMessage(rawTransaction, vivConfig.getEth().getChainId(), credentials);
        String hexValue &#x3D; Numeric.toHexString(signedMessage);
        log.info(&quot;transferContract hexValue: &#123;&#125;&quot;, hexValue);
 
        &#x2F;&#x2F;发起交易
        EthSendTransaction ethSendTransaction &#x3D;
                Web3jUtil.getInstance().ethSendRawTransaction(hexValue).send();
        if (ethSendTransaction.hasError()) &#123;
            throw new CustomException(500, ethSendTransaction.getError().getMessage());
        &#125;
        String transactionHash &#x3D; ethSendTransaction.getTransactionHash();
        return transactionHash;
    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="1-4-java解析签名">1.4 java解析签名</h3>
<pre class="line-numbers language-none"><code class="language-none">public EthApproveVO getUsdtApprove(String hexValue) throws Exception &#123;
        SignedRawTransaction rawTransaction &#x3D; (SignedRawTransaction)TransactionDecoder.decode(hexValue);
        String data &#x3D; rawTransaction.getData();
        String methodHex &#x3D; &quot;0x&quot; + data.substring(0, 8);
        if(!CommonConst.Contract.ERC20.METHOD_APPROVAL.getCode().equals(methodHex)) &#123;
            log.error(&quot;16进制数据有误，非授权！&#123;&#125;&quot;, hexValue);
            return null;
        &#125;

        &#x2F;&#x2F; function approve(address spender, uint256 value) external returns (bool);
        List&lt;Type&gt; result &#x3D; FunctionReturnDecoder.decode(data.substring(8), Utils.convert(Arrays.&lt;TypeReference&lt;?&gt;&gt;asList(
                new TypeReference&lt;Address&gt;() &#123;&#125;,
                new TypeReference&lt;Uint&gt;() &#123;&#125;
        )));
        EthApproveVO ethApproveVO &#x3D; new EthApproveVO();
        ethApproveVO.setNonce(rawTransaction.getNonce());
        ethApproveVO.setGasPrice(Convert.fromWei(new BigDecimal(rawTransaction.getGasPrice()), Convert.Unit.ETHER));
        ethApproveVO.setGasLimit(new BigDecimal(rawTransaction.getGasLimit()));
        ethApproveVO.setSpender(((Address)result.get(0)).getValue());
        ethApproveVO.setValue(Convert.fromWei(new BigDecimal(((Uint) result.get(1)).getValue()), Convert.Unit.ETHER));
        ethApproveVO.setFrom(rawTransaction.getFrom());
        return ethApproveVO;
    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="2-普通签名">2.普通签名</h2>
<h3 id="2-1-需求">2.1 需求</h3>
<p>我们经常需要在solidity中通过恢复签名的钱包地址来判断用户身份，需要在remix自带计算的签名、java中计算的签名、javascript中计算的签名均保持一致，并在solidity中可以恢复出地址。</p>
<h3 id="2-2-测试数据">2.2 测试数据</h3>
<p>remix计算hash和签名需要先转为ascii码。457542584823209984====&gt;0x343537353432353834383233323039393834</p>
<p>测试账户如图<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ahash%E4%B8%8E%E7%AD%BE%E5%90%8D/eth-02.png" alt><br>
原始串：457542584823209984</p>
<p>原始串ASCII码：0x343537353432353834383233323039393834</p>
<p>钱包地址：0x865Af88273B9218b94c46d12f34be460865B0A0d</p>
<h3 id="2-3-remix签名">2.3 remix签名</h3>
<h4 id="2-3-1-按如下图切换账户">2.3.1 按如下图切换账户</h4>
<p>用于签名的数据：457542584823209984<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ahash%E4%B8%8E%E7%AD%BE%E5%90%8D/eth-03.png" alt></p>
<h4 id="2-3-2-需要MetaMask授权">2.3.2 需要MetaMask授权</h4>
<p><img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ahash%E4%B8%8E%E7%AD%BE%E5%90%8D/eth-04.png" alt></p>
<h4 id="2-3-3-得到签名结果">2.3.3 得到签名结果</h4>
<p>下面是加密结果：<br>
hash：<br>
0x8a590edede2c24dad749a698c8f018863fda7ae9d26b9d32716d45b46ee632c5<br>
signature：<br>
0x2d27aaeebc445d4fa1fba84e1261fa2431406fb49554ff88e76e892b5b59031a6adf3d151dd088e1bae2e488b40305965995ec2a9ea5c9b84f792beb6bedb1161b<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ahash%E4%B8%8E%E7%AD%BE%E5%90%8D/eth-05.png" alt></p>
<h3 id="2-4-solidity中还原出钱包地址">2.4 solidity中还原出钱包地址</h3>
<p>在solidity中通过签名和原始串还原出钱包地址</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; SPDX-License-Identifier: GPL-3.0  solidity
pragma solidity ^0.8.4;
contract Test &#123;
 
    &#x2F;**
    * get hash
    * @param message The message will be used to hash.
    *&#x2F;
   function getHash(bytes memory message) internal pure returns (bytes32) &#123;
        return
            keccak256(
                abi.encodePacked(&quot;\x19Ethereum Signed Message:\n18&quot;, message)
            );
    &#125;
 
    &#x2F;**
     * Extract the public key
     * @param hash hash for sign
     * @param sig signed
     *&#x2F;
    function ecrecovery(bytes32 hash, bytes memory sig) internal pure returns (address) &#123;
        bytes32 h;
        bytes32 r;
        bytes32 s;
        uint8 v;
     
        if (sig.length !&#x3D; 65) &#123;
          return address(0);
        &#125;
     
        assembly &#123;
          h :&#x3D; hash
          r :&#x3D; mload(add(sig, 32))
          s :&#x3D; mload(add(sig, 64))
          v :&#x3D; and(mload(add(sig, 65)), 255)
        &#125;
     
        if (v &lt; 27) &#123;
          v +&#x3D; 27;
        &#125;
     
        if (v !&#x3D; 27 &amp;&amp; v !&#x3D; 28) &#123;
          return address(0);
        &#125;
     
        return ecrecover(h, v, r, s);
  &#125;
 
    function test(bytes memory tid, bytes memory sign) external pure returns (address)&#123;
        bytes32 hashValue &#x3D; getHash(tid);
        return ecrecovery(hashValue, sign);
    &#125;
     
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输入如下数据：</p>
<p>注意传给solidity必须是ASCII码格式的0x343537353432353834383233323039393834</p>
<p>tid：0x343537353432353834383233323039393834<br>
sign：0x2d27aaeebc445d4fa1fba84e1261fa2431406fb49554ff88e76e892b5b59031a6adf3d151dd088e1bae2e488b40305965995ec2a9ea5c9b84f792beb6bedb1161b</p>
<p><img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ahash%E4%B8%8E%E7%AD%BE%E5%90%8D/eth-06.png" alt></p>
<p>获取到钱包地址：0x865Af88273B9218b94c46d12f34be460865B0A0d</p>
<h3 id="2-5-javascript中的签名">2.5 javascript中的签名</h3>
<p>sign-3.js</p>
<pre class="line-numbers language-none"><code class="language-none">let ethUtil &#x3D; require(&quot;ethereumjs-util&quot;);
let msg &#x3D; &quot;457542584823209984&quot;; &#x2F;&#x2F;457542584823209984
 
&#x2F;**
 * 计算hash
 * @param &#123;*&#125; msg 源字符串
 *&#x2F;
function getHash(msg) &#123;
  const data &#x3D; ethUtil.toBuffer(Buffer.from(msg, &quot;utf8&quot;));
  const buf &#x3D; Buffer.concat([
    Buffer.from(
      &quot;\u0019Ethereum Signed Message:\n&quot; + data.length.toString(),
      &quot;utf8&quot;
    ),
    data
  ]);
  const hash &#x3D; ethUtil.keccak256(buf);
  return ethUtil.bufferToHex(hash);
&#125;
 
const tid &#x3D; ethUtil.toBuffer(Buffer.from(msg, &quot;utf8&quot;));
console.log(&quot;原始串：0x&quot; + msg);
console.log(&quot;ASCII码：&quot; + ethUtil.bufferToHex(tid));
 
var msgHash &#x3D; ethUtil.toBuffer(getHash(msg));
 
&#x2F;** 平台 *&#x2F;
let prikey &#x3D; ethUtil.toBuffer(&quot;0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;);
const rsv2 &#x3D; ethUtil.ecsign(msgHash, prikey);
console.log(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;平台&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;);
console.log(&quot;hash: 0x&quot; + msgHash.toString(&#39;hex&#39;));
console.log(&quot;r: 0x&quot; + rsv2.r.toString(&#39;hex&#39;));
console.log(&quot;s: 0x&quot; + rsv2.s.toString(&#39;hex&#39;));
console.log(&quot;v: &quot; + rsv2.v.toString(16));
console.log(&quot;sign: 0x&quot; + rsv2.r.toString(&#39;hex&#39;) + rsv2.s.toString(&#39;hex&#39;) + rsv2.v.toString(16));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出：</p>
<pre class="line-numbers language-none"><code class="language-none">DELL@WJF MINGW64 &#x2F;d&#x2F;workspace-viv&#x2F;viv-solidity&#x2F;viv&#x2F;test
$ node sign-3
原始串：0x457542584823209984
ASCII码：0x343537353432353834383233323039393834
&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;平台&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;
hash: 0x8a590edede2c24dad749a698c8f018863fda7ae9d26b9d32716d45b46ee632c5
r: 0x2d27aaeebc445d4fa1fba84e1261fa2431406fb49554ff88e76e892b5b59031a
s: 0x6adf3d151dd088e1bae2e488b40305965995ec2a9ea5c9b84f792beb6bedb116
v: 1b
sign: 0x2d27aaeebc445d4fa1fba84e1261fa2431406fb49554ff88e76e892b5b59031a6adf3d151dd088e1bae2e488b40305965995ec2a9ea5c9b84f792beb6bedb1161b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可见hash与sign均与remix计算出来的相同</p>
<h3 id="2-6-java代码中的签名">2.6 java代码中的签名</h3>
<p>引入web3j</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;dependency&gt;
    &lt;groupId&gt;org.web3j&lt;&#x2F;groupId&gt;
    &lt;artifactId&gt;core&lt;&#x2F;artifactId&gt;
    &lt;version&gt;5.0.0&lt;&#x2F;version&gt;
&lt;&#x2F;dependency&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>hash与签名</p>
<pre class="line-numbers language-none"><code class="language-none">package com.uecent.viv.provider.blockchain.module.common.util;
 
import org.bouncycastle.asn1.x9.X9IntegerConverter;
import org.bouncycastle.crypto.params.ECDomainParameters;
import org.bouncycastle.math.ec.ECAlgorithms;
import org.bouncycastle.math.ec.ECPoint;
import org.bouncycastle.math.ec.custom.sec.SecP256K1Curve;
import org.web3j.crypto.Credentials;
import org.web3j.crypto.ECDSASignature;
import org.web3j.crypto.ECKeyPair;
import org.web3j.crypto.Hash;
import org.web3j.utils.Assertions;
import org.web3j.utils.Numeric;
 
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
 
import static org.web3j.crypto.Sign.CURVE_PARAMS;
 
&#x2F;**
 * Web3j工具类
 *
 * @author ：wangjf
 * @date ：2021&#x2F;7&#x2F;23 17:06
 * @description：provider-viv-blockchain
 * @version: v1.1.0
 *&#x2F;
public class Test &#123;
 
    static final ECDomainParameters CURVE;
    static &#123;
        CURVE &#x3D; new ECDomainParameters(CURVE_PARAMS.getCurve(), CURVE_PARAMS.getG(), CURVE_PARAMS.getN(), CURVE_PARAMS.getH());
    &#125;
 
    public static void main(String[] args) &#123;
        String text &#x3D; &quot;457542584823209984&quot;;
        String privateKey &#x3D; &quot;0xf95816c196aec67bdae2f72005d4b11203162c72ed4e3833958e052df8a32edc&quot;;
        System.out.println(&quot;hash: &quot; + getHashHexString(text));
        System.out.println(&quot;sign: &quot; + signMessage(text, privateKey));
    &#125;
 
    &#x2F;**
     * 签名
     *
     * @param message    消息
     * @param privateKey 私钥
     * @return
     *&#x2F;
    public static String signMessage(String message, String privateKey) &#123;
        Credentials credentials &#x3D; Credentials.create(privateKey);
        ECKeyPair ecKeyPair &#x3D; credentials.getEcKeyPair();
        BigInteger publicKey &#x3D; ecKeyPair.getPublicKey();
        byte[] messageHash &#x3D; getHash(message);
        ECDSASignature sig &#x3D; ecKeyPair.sign(messageHash);
        int recId &#x3D; -1;
 
        int headerByte;
        for (headerByte &#x3D; 0; headerByte &lt; 4; ++headerByte) &#123;
            BigInteger k &#x3D; recoverFromSignature(headerByte, sig, messageHash);
            if (k !&#x3D; null &amp;&amp; k.equals(publicKey)) &#123;
                recId &#x3D; headerByte;
                break;
            &#125;
        &#125;
 
        if (recId &#x3D;&#x3D; -1) &#123;
            throw new RuntimeException(&quot;Could not construct a recoverable key. Are your credentials valid?&quot;);
        &#125; else &#123;
            headerByte &#x3D; recId + 27;
            byte[] v &#x3D; new byte[]&#123;(byte) headerByte&#125;;
            byte[] r &#x3D; Numeric.toBytesPadded(sig.r, 32);
            byte[] s &#x3D; Numeric.toBytesPadded(sig.s, 32);
 
            StringBuilder sign &#x3D; new StringBuilder();
            sign.append(Numeric.toHexString(r)).append(Numeric.toHexString(s).substring(2)).append(Numeric.toHexString(v).substring(2));
            return sign.toString();
        &#125;
    &#125;
 
    public static BigInteger recoverFromSignature(int recId, ECDSASignature sig, byte[] message) &#123;
        Assertions.verifyPrecondition(recId &gt;&#x3D; 0, &quot;recId must be positive&quot;);
        Assertions.verifyPrecondition(sig.r.signum() &gt;&#x3D; 0, &quot;r must be positive&quot;);
        Assertions.verifyPrecondition(sig.s.signum() &gt;&#x3D; 0, &quot;s must be positive&quot;);
        Assertions.verifyPrecondition(message !&#x3D; null, &quot;message cannot be null&quot;);
        BigInteger n &#x3D; CURVE.getN();
        BigInteger i &#x3D; BigInteger.valueOf((long) recId &#x2F; 2L);
        BigInteger x &#x3D; sig.r.add(i.multiply(n));
        BigInteger prime &#x3D; SecP256K1Curve.q;
        if (x.compareTo(prime) &gt;&#x3D; 0) &#123;
            return null;
        &#125; else &#123;
            ECPoint R &#x3D; decompressKey(x, (recId &amp; 1) &#x3D;&#x3D; 1);
            if (!R.multiply(n).isInfinity()) &#123;
                return null;
            &#125; else &#123;
                BigInteger e &#x3D; new BigInteger(1, message);
                BigInteger eInv &#x3D; BigInteger.ZERO.subtract(e).mod(n);
                BigInteger rInv &#x3D; sig.r.modInverse(n);
                BigInteger srInv &#x3D; rInv.multiply(sig.s).mod(n);
                BigInteger eInvrInv &#x3D; rInv.multiply(eInv).mod(n);
                ECPoint q &#x3D; ECAlgorithms.sumOfTwoMultiplies(CURVE.getG(), eInvrInv, R, srInv);
                byte[] qBytes &#x3D; q.getEncoded(false);
                return new BigInteger(1, Arrays.copyOfRange(qBytes, 1, qBytes.length));
            &#125;
        &#125;
    &#125;
 
    &#x2F;**
     * 计算hash，该hash与solidity的keccak256(abi.encodePacked(message))一致
     *
     * @param message
     * @return
     *&#x2F;
    public static byte[] getHash(String message) &#123;
        message &#x3D; Numeric.cleanHexPrefix(message);
        String str &#x3D; &quot;\u0019Ethereum Signed Message:\n18&quot; + message;
        byte[] bytes &#x3D; str.getBytes(StandardCharsets.UTF_8);
        return Hash.sha3(bytes);
    &#125;
 
    &#x2F;**
     * 计算hash，该hash与solidity的keccak256(abi.encodePacked(message))一致
     *
     * @param message
     * @return
     *&#x2F;
    public static String getHashHexString(String message) &#123;
        return Numeric.toHexString(getHash(message));
    &#125;
 
    private static ECPoint decompressKey(BigInteger xBN, boolean yBit) &#123;
        X9IntegerConverter x9 &#x3D; new X9IntegerConverter();
        byte[] compEnc &#x3D; x9.integerToBytes(xBN, 1 + x9.getByteLength(CURVE.getCurve()));
        compEnc[0] &#x3D; (byte) (yBit ? 3 : 2);
        return CURVE.getCurve().decodePoint(compEnc);
    &#125;
 
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出：</p>
<pre class="line-numbers language-none"><code class="language-none">&quot;C:\Program Files\Java\jdk1.8.0_221\bin\java.exe&quot; &quot;-javaagent:D:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.1.3\lib\idea_rt.jar&#x3D;6631:D:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.1.3\bin&quot; -Dfile.encoding&#x3D;UTF-8 -classpath C:\Users\DELL\AppData\Local\Temp\classpath1808972391.jar com.uecent.viv.provider.blockchain.module.common.util.Test
hash: 0x8a590edede2c24dad749a698c8f018863fda7ae9d26b9d32716d45b46ee632c5
sign: 0x2d27aaeebc445d4fa1fba84e1261fa2431406fb49554ff88e76e892b5b59031a6adf3d151dd088e1bae2e488b40305965995ec2a9ea5c9b84f792beb6bedb1161b

Process finished with exit code 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可见计算结果跟上面两种都一致。<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8Ahash%E4%B8%8E%E7%AD%BE%E5%90%8D/eth-07.png" alt></p>
]]></content>
      <categories>
        <category>区块链</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>以太坊合约编写与部署</title>
    <url>/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="1-部署合约">1 部署合约</h2>
<h3 id="1-1-solidity语言编写代码">1.1 solidity语言编写代码</h3>
<p>到http://remix.ethereum.org/上面编写代码，也可以vscode编写好了，拷贝上去<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-01.png" alt></p>
<p>vscode安装下面这个插件<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-02.png" alt></p>
<h3 id="1-2-编译">1.2 编译</h3>
<p>remix编译，选中auto complie，以后编写文件时会自动编译<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-03.png" alt></p>
<p>vs code 编译<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-04.png" alt></p>
<h3 id="1-3-获取二进制文件">1.3 获取二进制文件</h3>
<p>redmix：</p>
<p>选中合约，点击bytecode复制<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-05.png" alt></p>
<p>取得如下数据，其中object为后面需要部署的二进制数据<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-06.png" alt></p>
<pre class="line-numbers language-none"><code class="language-none">&#123;
    &quot;functionDebugData&quot;: &#123;
        &quot;@_414&quot;: &#123;
            &quot;entryPoint&quot;: null,
            &quot;id&quot;: 414,
            &quot;parameterSlots&quot;: 0,
            &quot;returnSlots&quot;: 0
        &#125;
    &#125;,
    &quot;generatedSources&quot;: [],
    &quot;linkReferences&quot;: &#123;&#125;,
    &quot;object&quot;: &quot;608060405234801561001057600080fd5b5073425c2d431065fcf120e78d47b88067349795fe3e600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ad3806100756000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806347510e8d1161007157806347510e8d146101525780634bde38c81461016e5780637150d8ae1461018c5780638129fc1c146101aa578063c19d93fb146101b4578063ddca3f43146101d2576100a9565b806303d4b0d3146100ae57806308551a53146100de57806324ae9916146100fc57806331d96681146101185780633fa4f24514610134575b600080fd5b6100c860048036038101906100c391906111cf565b6101f0565b6040516100d59190611474565b60405180910390f35b6100e66102cf565b6040516100f3919061148f565b60405180910390f35b6101166004803603810190610111919061113b565b6102f3565b005b610132600480360381019061012d9190611247565b610573565b005b61013c6107da565b6040516101499190611696565b60405180910390f35b61016c60048036038101906101679190611247565b6107e0565b005b610176610b3e565b604051610183919061148f565b60405180910390f35b610194610b64565b6040516101a1919061148f565b60405180910390f35b6101b2610b8a565b005b6101bc610c16565b6040516101c9919061154f565b60405180910390f35b6101da610c29565b6040516101e79190611696565b60405180910390f35b6000806000806000604186511461020e5760009450505050506102c9565b60208701519350602086015192506040860151915060ff6041870151169050601b8160ff16101561024957601b816102469190611718565b90505b601b8160ff16141580156102615750601c8160ff1614155b156102735760009450505050506102c9565b60018482858560405160008152602001604052604051610296949392919061150a565b6020604051602081039080840390855afa1580156102b8573d6000803e3d6000fd5b505050602060405103519450505050505b92915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806004811115610308576103076118f4565b5b600560009054906101000a900460ff16600481111561032a576103296118f4565b5b14610361576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f6d5670c65371600d04d7baecaf34658829d6082ac0428efbcf4864f42e8291df60c8336040516103939291906115a6565b60405180910390a133600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600481905550816003819055506001600560006101000a81548160ff02191690836004811115610491576104906118f4565b5b0217905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306003546040518463ffffffff1660e01b8152600401610519939291906114aa565b602060405180830381600087803b15801561053357600080fd5b505af1158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b91906111a2565b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105fa576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600481111561060f5761060e6118f4565b5b600560009054906101000a900460ff166004811115610631576106306118f4565b5b14610668576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610673858585610c2f565b6106b7577f6d5670c65371600d04d7baecaf34658829d6082ac0428efbcf4864f42e8291df610191336040516106aa92919061161e565b60405180910390a16107d3565b7f6d5670c65371600d04d7baecaf34658829d6082ac0428efbcf4864f42e8291df60c8336040516106e99291906115e2565b60405180910390a16004600560006101000a81548160ff02191690836004811115610717576107166118f4565b5b0217905550600082111561075357610751600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610e9a565b505b610781600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600454610e9a565b506107c8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836004546003546107b9919061174f565b6107c3919061174f565b610e9a565b506107d1610f53565b505b5050505050565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610865576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180600481111561087a576108796118f4565b5b600560009054906101000a900460ff16600481111561089c5761089b6118f4565b5b146108d3576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108de858585610c2f565b610922577f6d5670c65371600d04d7baecaf34658829d6082ac0428efbcf4864f42e8291df6101913360405161091592919061161e565b60405180910390a1610b37565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161097f9190611474565b60206040518083038186803b15801561099757600080fd5b505afa1580156109ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cf9190611302565b9050600354811015610a1c577f6d5670c65371600d04d7baecaf34658829d6082ac0428efbcf4864f42e8291df61019333604051610a0e92919061165a565b60405180910390a150610b37565b7f6d5670c65371600d04d7baecaf34658829d6082ac0428efbcf4864f42e8291df60c833604051610a4e92919061156a565b60405180910390a16004600560006101000a81548160ff02191690836004811115610a7c57610a7b6118f4565b5b02179055506000831115610ab857610ab6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610e9a565b505b610ae6600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600454610e9a565b50610b2b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600454600354610b1c919061174f565b610b26919061174f565b610e9a565b50610b34610f53565b50505b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560159054906101000a900460ff1615610ba457600080fd5b73425c2d431065fcf120e78d47b88067349795fe3e600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600560156101000a81548160ff021916908315150217905550565b600560009054906101000a900460ff1681565b60045481565b6000610c3b8383611057565b15610c495760009050610e93565b6000610c5585856101f0565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610d015750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015610d5b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15610d6a576000915050610e93565b6000610d7686856101f0565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610e225750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015610e7c5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15610e8c57600092505050610e93565b6001925050505b9392505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610ef99291906114e1565b602060405180830381600087803b158015610f1357600080fd5b505af1158015610f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4b91906111a2565b905092915050565b6000806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060038190555060006004819055506000600560006101000a81548160ff0219169083600481111561104f5761104e6118f4565b5b021790555090565b600080600060208501519150602084015190508082149250505092915050565b600061108a611085846116d6565b6116b1565b9050828152602081018484840111156110a6576110a5611957565b5b6110b1848285611885565b509392505050565b6000813590506110c881611a58565b92915050565b6000815190506110dd81611a6f565b92915050565b600082601f8301126110f8576110f7611952565b5b8135611108848260208601611077565b91505092915050565b60008135905061112081611a86565b92915050565b60008151905061113581611a86565b92915050565b6000806000806080858703121561115557611154611961565b5b6000611163878288016110b9565b9450506020611174878288016110b9565b935050604061118587828801611111565b925050606061119687828801611111565b91505092959194509250565b6000602082840312156111b8576111b7611961565b5b60006111c6848285016110ce565b91505092915050565b600080604083850312156111e6576111e5611961565b5b600083013567ffffffffffffffff8111156112045761120361195c565b5b611210858286016110e3565b925050602083013567ffffffffffffffff8111156112315761123061195c565b5b61123d858286016110e3565b9150509250929050565b6000806000806080858703121561126157611260611961565b5b600085013567ffffffffffffffff81111561127f5761127e61195c565b5b61128b878288016110e3565b945050602085013567ffffffffffffffff8111156112ac576112ab61195c565b5b6112b8878288016110e3565b935050604085013567ffffffffffffffff8111156112d9576112d861195c565b5b6112e5878288016110e3565b92505060606112f687828801611111565b91505092959194509250565b60006020828403121561131857611317611961565b5b600061132684828501611126565b91505092915050565b61133881611807565b82525050565b61134781611795565b82525050565b61135681611783565b82525050565b611365816117b3565b82525050565b61137481611819565b82525050565b6113838161182b565b82525050565b6113928161183d565b82525050565b6113a18161184f565b82525050565b60006113b4600d83611707565b91506113bf82611977565b602082019050919050565b60006113d7601083611707565b91506113e2826119a0565b602082019050919050565b60006113fa601483611707565b9150611405826119c9565b602082019050919050565b600061141d601383611707565b9150611428826119f2565b602082019050919050565b6000611440600c83611707565b915061144b82611a1b565b602082019050919050565b61145f816117f0565b82525050565b61146e816117fa565b82525050565b6000602082019050611489600083018461134d565b92915050565b60006020820190506114a4600083018461133e565b92915050565b60006060820190506114bf600083018661132f565b6114cc602083018561134d565b6114d96040830184611456565b949350505050565b60006040820190506114f6600083018561134d565b6115036020830184611456565b9392505050565b600060808201905061151f600083018761135c565b61152c6020830186611465565b611539604083018561135c565b611546606083018461135c565b95945050505050565b6000602082019050611564600083018461136b565b92915050565b600060608201905061157f600083018561137a565b8181036020830152611590816113a7565b905061159f604083018461134d565b9392505050565b60006060820190506115bb600083018561137a565b81810360208301526115cc816113ca565b90506115db604083018461134d565b9392505050565b60006060820190506115f7600083018561137a565b818103602083015261160881611433565b9050611617604083018461134d565b9392505050565b60006060820190506116336000830185611389565b818103602083015261164481611410565b9050611653604083018461134d565b9392505050565b600060608201905061166f6000830185611398565b8181036020830152611680816113ed565b905061168f604083018461134d565b9392505050565b60006020820190506116ab6000830184611456565b92915050565b60006116bb6116cc565b90506116c78282611894565b919050565b6000604051905090565b600067ffffffffffffffff8211156116f1576116f0611923565b5b6116fa82611966565b9050602081019050919050565b600082825260208201905092915050565b6000611723826117fa565b915061172e836117fa565b92508260ff03821115611744576117436118c5565b5b828201905092915050565b600061175a826117f0565b9150611765836117f0565b925082821015611778576117776118c5565b5b828203905092915050565b600061178e826117d0565b9050919050565b60006117a0826117d0565b9050919050565b60008115159050919050565b6000819050919050565b60008190506117cb82611a44565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061181282611861565b9050919050565b6000611824826117bd565b9050919050565b6000611836826117f0565b9050919050565b6000611848826117f0565b9050919050565b600061185a826117f0565b9050919050565b600061186c82611873565b9050919050565b600061187e826117d0565b9050919050565b82818337600083830152505050565b61189d82611966565b810181811067ffffffffffffffff821117156118bc576118bb611923565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f726566756e642073656c6c657200000000000000000000000000000000000000600082015250565b7f636f6e6669726d20707572636861736500000000000000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f636865636b207369676e6564206661696c656400000000000000000000000000600082015250565b7f726566756e642062757965720000000000000000000000000000000000000000600082015250565b60058110611a5557611a546118f4565b5b50565b611a6181611783565b8114611a6c57600080fd5b50565b611a78816117a7565b8114611a8357600080fd5b50565b611a8f816117f0565b8114611a9a57600080fd5b5056fea264697066735822122015ed550f96c9e09a260055bdbe625ed0918cb215c662ebb0345b5d396889267464736f6c63430008070033&quot;,
    &quot;opcodes&quot;: &quot;PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x425C2D431065FCF120E78D47B88067349795FE3E PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1AD3 DUP1 PUSH2 0x75 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47510E8D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x47510E8D EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x4BDE38C8 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1D2 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x3D4B0D3 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x8551A53 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x24AE9916 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x31D96681 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x3FA4F245 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x113B JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13C PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0xB8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP7 MLOAD EQ PUSH2 0x20E JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP4 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0xFF PUSH1 0x41 DUP8 ADD MLOAD AND SWAP1 POP PUSH1 0x1B DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x1B DUP2 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1B DUP2 PUSH1 0xFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI POP PUSH1 0x1C DUP2 PUSH1 0xFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x1 DUP5 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x296 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBAF3F0F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x6D5670C65371600D04D7BAECAF34658829D6082AC0428EFBCF4864F42E8291DF PUSH1 0xC8 CALLER PUSH1 0x40 MLOAD PUSH2 0x393 SWAP3 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x519 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x547 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x86EFBB5500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x60F JUMPI PUSH2 0x60E PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH2 0x630 PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBAF3F0F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x673 DUP6 DUP6 DUP6 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x6B7 JUMPI PUSH32 0x6D5670C65371600D04D7BAECAF34658829D6082AC0428EFBCF4864F42E8291DF PUSH2 0x191 CALLER PUSH1 0x40 MLOAD PUSH2 0x6AA SWAP3 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7D3 JUMP JUMPDEST PUSH32 0x6D5670C65371600D04D7BAECAF34658829D6082AC0428EFBCF4864F42E8291DF PUSH1 0xC8 CALLER PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP3 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x717 JUMPI PUSH2 0x716 PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x753 JUMPI PUSH2 0x751 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xE9A JUMP JUMPDEST POP JUMPDEST PUSH2 0x781 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH2 0xE9A JUMP JUMPDEST POP PUSH2 0x7C8 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xE9A JUMP JUMPDEST POP PUSH2 0x7D1 PUSH2 0xF53 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85D1F72600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x89C JUMPI PUSH2 0x89B PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBAF3F0F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8DE DUP6 DUP6 DUP6 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x922 JUMPI PUSH32 0x6D5670C65371600D04D7BAECAF34658829D6082AC0428EFBCF4864F42E8291DF PUSH2 0x191 CALLER PUSH1 0x40 MLOAD PUSH2 0x915 SWAP3 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xA1C JUMPI PUSH32 0x6D5670C65371600D04D7BAECAF34658829D6082AC0428EFBCF4864F42E8291DF PUSH2 0x193 CALLER PUSH1 0x40 MLOAD PUSH2 0xA0E SWAP3 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xB37 JUMP JUMPDEST PUSH32 0x6D5670C65371600D04D7BAECAF34658829D6082AC0428EFBCF4864F42E8291DF PUSH1 0xC8 CALLER PUSH1 0x40 MLOAD PUSH2 0xA4E SWAP3 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xAB8 JUMPI PUSH2 0xAB6 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xE9A JUMP JUMPDEST POP JUMPDEST PUSH2 0xAE6 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH2 0xE9A JUMP JUMPDEST POP PUSH2 0xB2B PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xE9A JUMP JUMPDEST POP PUSH2 0xB34 PUSH2 0xF53 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x425C2D431065FCF120E78D47B88067349795FE3E PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3B DUP4 DUP4 PUSH2 0x1057 JUMP JUMPDEST ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC55 DUP6 DUP6 PUSH2 0x1F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD01 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD5B JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xD6A JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD76 DUP7 DUP6 PUSH2 0x1F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xE22 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xE7C JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xE8C JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF9 SWAP3 SWAP2 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x104F JUMPI PUSH2 0x104E PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP1 POP DUP1 DUP3 EQ SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108A PUSH2 0x1085 DUP5 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x16B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x10A6 JUMPI PUSH2 0x10A5 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH2 0x10B1 DUP5 DUP3 DUP6 PUSH2 0x1885 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10C8 DUP2 PUSH2 0x1A58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10DD DUP2 PUSH2 0x1A6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0x1952 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1108 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1120 DUP2 PUSH2 0x1A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1135 DUP2 PUSH2 0x1A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1155 JUMPI PUSH2 0x1154 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1163 DUP8 DUP3 DUP9 ADD PUSH2 0x10B9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1174 DUP8 DUP3 DUP9 ADD PUSH2 0x10B9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1185 DUP8 DUP3 DUP9 ADD PUSH2 0x1111 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1196 DUP8 DUP3 DUP9 ADD PUSH2 0x1111 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B8 JUMPI PUSH2 0x11B7 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C6 DUP5 DUP3 DUP6 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E6 JUMPI PUSH2 0x11E5 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x195C JUMP JUMPDEST JUMPDEST PUSH2 0x1210 DUP6 DUP3 DUP7 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1231 JUMPI PUSH2 0x1230 PUSH2 0x195C JUMP JUMPDEST JUMPDEST PUSH2 0x123D DUP6 DUP3 DUP7 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1261 JUMPI PUSH2 0x1260 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127F JUMPI PUSH2 0x127E PUSH2 0x195C JUMP JUMPDEST JUMPDEST PUSH2 0x128B DUP8 DUP3 DUP9 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12AC JUMPI PUSH2 0x12AB PUSH2 0x195C JUMP JUMPDEST JUMPDEST PUSH2 0x12B8 DUP8 DUP3 DUP9 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12D9 JUMPI PUSH2 0x12D8 PUSH2 0x195C JUMP JUMPDEST JUMPDEST PUSH2 0x12E5 DUP8 DUP3 DUP9 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x12F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1111 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1317 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP5 DUP3 DUP6 ADD PUSH2 0x1126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1338 DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1347 DUP2 PUSH2 0x1795 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1356 DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x17B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x1819 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x182B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1392 DUP2 PUSH2 0x183D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13A1 DUP2 PUSH2 0x184F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B4 PUSH1 0xD DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x13BF DUP3 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D7 PUSH1 0x10 DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E2 DUP3 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FA PUSH1 0x14 DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1405 DUP3 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141D PUSH1 0x13 DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1428 DUP3 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1440 PUSH1 0xC DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x144B DUP3 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145F DUP2 PUSH2 0x17F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x146E DUP2 PUSH2 0x17FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1489 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14BF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x132F JUMP JUMPDEST PUSH2 0x14CC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x134D JUMP JUMPDEST PUSH2 0x14D9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1456 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14F6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x134D JUMP JUMPDEST PUSH2 0x1503 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1456 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x151F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x135C JUMP JUMPDEST PUSH2 0x152C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1465 JUMP JUMPDEST PUSH2 0x1539 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x135C JUMP JUMPDEST PUSH2 0x1546 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x135C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1564 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x157F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1590 DUP2 PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x159F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x134D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15BB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x15CC DUP2 PUSH2 0x13CA JUMP JUMPDEST SWAP1 POP PUSH2 0x15DB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x134D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1608 DUP2 PUSH2 0x1433 JUMP JUMPDEST SWAP1 POP PUSH2 0x1617 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x134D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1633 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1389 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1644 DUP2 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH2 0x1653 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x134D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x166F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1398 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1680 DUP2 PUSH2 0x13ED JUMP JUMPDEST SWAP1 POP PUSH2 0x168F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x134D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BB PUSH2 0x16CC JUMP JUMPDEST SWAP1 POP PUSH2 0x16C7 DUP3 DUP3 PUSH2 0x1894 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16F1 JUMPI PUSH2 0x16F0 PUSH2 0x1923 JUMP JUMPDEST JUMPDEST PUSH2 0x16FA DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1723 DUP3 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP PUSH2 0x172E DUP4 PUSH2 0x17FA JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x18C5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175A DUP3 PUSH2 0x17F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1765 DUP4 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1778 JUMPI PUSH2 0x1777 PUSH2 0x18C5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178E DUP3 PUSH2 0x17D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A0 DUP3 PUSH2 0x17D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x17CB DUP3 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1812 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1824 DUP3 PUSH2 0x17BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1836 DUP3 PUSH2 0x17F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP3 PUSH2 0x17F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185A DUP3 PUSH2 0x17F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186C DUP3 PUSH2 0x1873 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187E DUP3 PUSH2 0x17D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x189D DUP3 PUSH2 0x1966 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18BC JUMPI PUSH2 0x18BB PUSH2 0x1923 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x726566756E642073656C6C657200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x636F6E6669726D20707572636861736500000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x636865636B207369676E6564206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x726566756E642062757965720000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x18F4 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A61 DUP2 PUSH2 0x1783 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A78 DUP2 PUSH2 0x17A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A8F DUP2 PUSH2 0x17F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xED SSTORE 0xF SWAP7 0xC9 0xE0 SWAP11 0x26 STOP SSTORE 0xBD 0xBE PUSH3 0x5ED091 DUP13 0xB2 ISZERO 0xC6 PUSH3 0xEBB034 JUMPDEST 0x5D CODECOPY PUSH9 0x89267464736F6C6343 STOP ADDMOD SMOD STOP CALLER &quot;,
    &quot;sourceMap&quot;: &quot;5605:3678:0:-:0;;;5801:106;;;;;;;;;;5855:42;5832:6;;:67;;;;;;;;;;;;;;;;;;5605:3678;;;;;;&quot;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>vscode：</p>
<p>找到bin文件复制<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-07.png" alt></p>
<h3 id="1-4-部署">1.4 部署</h3>
<h4 id="方法一：通过js部署">方法一：通过js部署</h4>
<p>下面中的data就是上面复制的二进制数据</p>
<pre class="line-numbers language-none"><code class="language-none">var Tx     &#x3D; require(&#39;ethereumjs-tx&#39;).Transaction
const Web3 &#x3D; require(&#39;web3&#39;)
const rpcURL &#x3D; &quot;http:&#x2F;&#x2F;xxx.xxx.xxx.xxx:18545&quot;
 
const web3 &#x3D; new Web3(rpcURL)
 
const account &#x3D; &quot;0x865Af88273B9218b94c46d12f34be460865B0A0d&quot;
const privateKey &#x3D; Buffer.from(&#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;, &#39;hex&#39;)
 
&#x2F;&#x2F; 合约部署
web3.eth.getTransactionCount(account, (err, txCount) &#x3D;&gt; &#123;
    const data &#x3D; &quot;0x&quot; + &quot;608060405234801561001057600080fd5b50610661806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639a35898914610030575b600080fd5b61004a600480360381019061004591906102b5565b610060565b604051610057919061035a565b60405180910390f35b60008061007861007384600060206100e0565b6101c8565b9050600061009061008b856020806100e0565b6101c8565b905060006100a185604060016100e0565b6000815181106100b4576100b36105a8565b5b602001015160f81c60f81b90506100d56100cd876101c8565b8484846101d6565b935050505092915050565b606060008267ffffffffffffffff8111156100fe576100fd6105d7565b5b6040519080825280601f01601f1916602001820160405280156101305781602001600182028036833780820191505090505b50905060005b838110156101bc5785858261014b9190610410565b8151811061015c5761015b6105a8565b5b602001015160f81c60f81b82828151811061017a576101796105a8565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806101b490610530565b915050610136565b50809150509392505050565b600060208201519050919050565b600080601b8360f81c6101e99190610466565b90506001868287876040516000815260200160405260405161020e9493929190610375565b6020604051602081039080840390855afa158015610230573d6000803e3d6000fd5b50505060206040510351915050949350505050565b6000610258610253846103df565b6103ba565b9050828152602081018484840111156102745761027361060b565b5b61027f8482856104f0565b509392505050565b600082601f83011261029c5761029b610606565b5b81356102ac848260208601610245565b91505092915050565b600080604083850312156102cc576102cb610615565b5b600083013567ffffffffffffffff8111156102ea576102e9610610565b5b6102f685828601610287565b925050602083013567ffffffffffffffff81111561031757610316610610565b5b61032385828601610287565b9150509250929050565b6103368161049d565b82525050565b610345816104af565b82525050565b610354816104e3565b82525050565b600060208201905061036f600083018461032d565b92915050565b600060808201905061038a600083018761033c565b610397602083018661034b565b6103a4604083018561033c565b6103b1606083018461033c565b95945050505050565b60006103c46103d5565b90506103d082826104ff565b919050565b6000604051905090565b600067ffffffffffffffff8211156103fa576103f96105d7565b5b6104038261061a565b9050602081019050919050565b600061041b826104d9565b9150610426836104d9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561045b5761045a610579565b5b828201905092915050565b6000610471826104e3565b915061047c836104e3565b92508260ff0382111561049257610491610579565b5b828201905092915050565b60006104a8826104b9565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b6105088261061a565b810181811067ffffffffffffffff82111715610527576105266105d7565b5b80604052505050565b600061053b826104d9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561056e5761056d610579565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f830116905091905056fea2646970667358221220f1153025a480c1a8c88064f1645b8ea9d74c4a73607ff8a13e1388226b18a84b64736f6c63430008070033&quot;
       
    const txObject &#x3D; &#123;
        nonce:    web3.utils.toHex(txCount),
        gasLimit: web3.utils.toHex(1000000), &#x2F;&#x2F; 提高Gas上限
        gasPrice: web3.utils.toHex(web3.utils.toWei(&#39;10&#39;, &#39;gwei&#39;)),
        data: data
    &#125;
 
    const tx &#x3D; new Tx(txObject, &#123; chain: &#39;rinkeby&#39;, hardfork: &#39;petersburg&#39; &#125;)
    tx.sign(privateKey)
 
    const serializedTx &#x3D; tx.serialize()
    const raw &#x3D; &#39;0x&#39; + serializedTx.toString(&#39;hex&#39;)
 
    &#x2F;&#x2F; 广播交易
    web3.eth.sendSignedTransaction(raw, (err, txHash) &#x3D;&gt; &#123;
        console.log(&#39;txHash:&#39;, txHash)
        &#x2F;&#x2F; 可以去ropsten.etherscan.io查看交易详情
    &#125;)
  &#125;)
 
  &#x2F;&#x2F; 合约部署成功
  &#x2F;&#x2F; https:&#x2F;&#x2F;rinkeby.etherscan.io&#x2F;tx&#x2F;0x52834aed54e0b52ac2e977f03b7c5a21f16cf449172855835395853cf71b4d53
  &#x2F;&#x2F; 合约地址：0x8974a04d81d8db9ea784d48b7371f4921a9ff329<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="方法二：通过redmix部署">方法二：通过redmix部署</h4>
<p>本地调试的时候可以通过javascript vm这种方式，不需要以太坊币。真实测试，选injected Web3，通过MetaMask连到Rinkeby测试网络，这个需要以太坊币。<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-08.png" alt></p>
<h2 id="2-调用合约">2.调用合约</h2>
<h3 id="方法一：通过redmix调用合约">方法一：通过redmix调用合约</h3>
<p><img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-09.png" alt></p>
<h3 id="方法二：通过js调用合约（需要部署到测试网络）">方法二：通过js调用合约（需要部署到测试网络）</h3>
<p>通过remix获取abi描述<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-10.png" alt></p>
<p>通过vscode获取abi描述<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-11.png" alt></p>
<h4 id="call调用">call调用</h4>
<pre class="line-numbers language-none"><code class="language-none">var Tx     &#x3D; require(&#39;ethereumjs-tx&#39;).Transaction
const Web3 &#x3D; require(&#39;web3&#39;)
const rpcURL &#x3D; &quot;http:&#x2F;&#x2F;xxx.xxx.xxx.xxx:18545&quot;
 
const web3 &#x3D; new Web3(rpcURL)
 
# 钱包地址
const account &#x3D; &quot;0x865Af88273B9218b94c46d12f34be460865B0A0d&quot;
# 私钥
const privateKey &#x3D; Buffer.from(&#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#39;, &#39;hex&#39;)
 
# 合约地址
const contractAddress &#x3D; &#39;0x14f9c0d28cfce0bad220c928ce8d7d18a105e9d5&#39;
 
# abi信息从上面的步骤中获取
const contractABI &#x3D; [
    &#123;
        &quot;anonymous&quot;: false,
        &quot;inputs&quot;: [
            &#123;
                &quot;indexed&quot;: false,
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;previousOwner&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;,
            &#123;
                &quot;indexed&quot;: false,
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;newOwner&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;OwnershipTransferred&quot;,
        &quot;type&quot;: &quot;event&quot;
    &#125;,
    &#123;
        &quot;anonymous&quot;: false,
        &quot;inputs&quot;: [
            &#123;
                &quot;indexed&quot;: false,
                &quot;internalType&quot;: &quot;contract VivGuaranteeClonable&quot;,
                &quot;name&quot;: &quot;vivGuarantee&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;VivGuaranteeCreated&quot;,
        &quot;type&quot;: &quot;event&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [],
        &quot;name&quot;: &quot;createVivGuarantee&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;contract VivGuaranteeClonable&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;nonpayable&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;_libraryAddress&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;setLibraryAddress&quot;,
        &quot;outputs&quot;: [],
        &quot;stateMutability&quot;: &quot;nonpayable&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;newOwner&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;transferOwnership&quot;,
        &quot;outputs&quot;: [],
        &quot;stateMutability&quot;: &quot;nonpayable&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [],
        &quot;name&quot;: &quot;getVivGuarantee&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;contract VivGuaranteeClonable[]&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address[]&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;view&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [],
        &quot;name&quot;: &quot;libraryAddress&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;view&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [],
        &quot;name&quot;: &quot;owner&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;view&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;uint256&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;uint256&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;vivGuaranteeAddresses&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;contract VivGuaranteeClonable&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;view&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;
]
 
# 声明合约对象
const contract &#x3D; new web3.eth.Contract(contractABI, contractAddress)
 
# 调用合约的getVivGuarantee方法
contract.methods.getVivGuarantee().call((err, val) &#x3D;&gt; &#123;
    console.log(&#123; err, val &#125;)
&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="transaction调用">transaction调用</h4>
<pre><code>var Tx     = require('ethereumjs-tx').Transaction
const Web3 = require('web3')
const rpcURL = &quot;http://xxx.xxx.xxx.xxx:18545&quot;
 
const web3 = new Web3(rpcURL)
 
const account = &quot;0x865Af88273B9218b94c46d12f34be460865B0A0d&quot;
const privateKey = Buffer.from('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', 'hex')
 
 
const contractAddress = '0x14f9c0d28cfce0bad220c928ce8d7d18a105e9d5'
 
const contractABI = [
    &#123;
        &quot;anonymous&quot;: false,
        &quot;inputs&quot;: [
            &#123;
                &quot;indexed&quot;: false,
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;previousOwner&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;,
            &#123;
                &quot;indexed&quot;: false,
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;newOwner&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;OwnershipTransferred&quot;,
        &quot;type&quot;: &quot;event&quot;
    &#125;,
    &#123;
        &quot;anonymous&quot;: false,
        &quot;inputs&quot;: [
            &#123;
                &quot;indexed&quot;: false,
                &quot;internalType&quot;: &quot;contract VivGuaranteeClonable&quot;,
                &quot;name&quot;: &quot;vivGuarantee&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;VivGuaranteeCreated&quot;,
        &quot;type&quot;: &quot;event&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [],
        &quot;name&quot;: &quot;createVivGuarantee&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;contract VivGuaranteeClonable&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;nonpayable&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;_libraryAddress&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;setLibraryAddress&quot;,
        &quot;outputs&quot;: [],
        &quot;stateMutability&quot;: &quot;nonpayable&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;newOwner&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;transferOwnership&quot;,
        &quot;outputs&quot;: [],
        &quot;stateMutability&quot;: &quot;nonpayable&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [],
        &quot;name&quot;: &quot;getVivGuarantee&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;contract VivGuaranteeClonable[]&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address[]&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;view&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [],
        &quot;name&quot;: &quot;libraryAddress&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;view&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [],
        &quot;name&quot;: &quot;owner&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;address&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;view&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;,
    &#123;
        &quot;inputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;uint256&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;uint256&quot;
            &#125;
        ],
        &quot;name&quot;: &quot;vivGuaranteeAddresses&quot;,
        &quot;outputs&quot;: [
            &#123;
                &quot;internalType&quot;: &quot;contract VivGuaranteeClonable&quot;,
                &quot;name&quot;: &quot;&quot;,
                &quot;type&quot;: &quot;address&quot;
            &#125;
        ],
        &quot;stateMutability&quot;: &quot;view&quot;,
        &quot;type&quot;: &quot;function&quot;
    &#125;
]
 
const contract = new web3.eth.Contract(contractABI, contractAddress)
 
# 调用合约的方法confirmPurchase，并传参
const data = contract.methods.confirmPurchase(a1, a2, sxx, xxx).encodeABI()
 
 
web3.eth.getTransactionCount(account, (err, txCount) =&gt; &#123;
 
    // 创建交易对象
    const txObject = &#123;
        nonce:    web3.utils.toHex(txCount),
        gasLimit: web3.utils.toHex(800000),
        gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),
        to: contractAddress,
        data: data,
        value : 500
      &#125;
   
    // 签署交易
    const tx = new Tx(txObject, &#123; chain: 'rinkeby', hardfork: 'petersburg' &#125;)
    tx.sign(privateKey)
   
    const serializedTx = tx.serialize()
    const raw = '0x' + serializedTx.toString('hex')
   
    // 广播交易
    web3.eth.sendSignedTransaction(raw, (err, txHash) =&gt; &#123;
      console.log('txHash:', txHash)
      // 可以去ropsten.etherscan.io查看交易详情
    &#125;)
   
  &#125;) 
</code></pre>
<h2 id="3-调试">3.调试</h2>
<h3 id="3-1-激活插件">3.1 激活插件</h3>
<p><img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-12.png" alt></p>
<h3 id="3-2-复制要调试的tradehash">3.2 复制要调试的tradehash</h3>
<p><img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-13.png" alt></p>
<h3 id="3-3-进行调试">3.3 进行调试</h3>
<p>可以看到有运行时参数等<br>
<img src="/2022/01/04/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%90%88%E7%BA%A6%E7%BC%96%E5%86%99%E4%B8%8E%E9%83%A8%E7%BD%B2/eth-14.png" alt></p>
]]></content>
      <categories>
        <category>区块链</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>麻雀分米问题</title>
    <url>/2022/01/04/%E9%BA%BB%E9%9B%80%E5%88%86%E7%B1%B3%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="问题">问题</h3>
<blockquote>
<p>有5只麻雀平分一堆米，第一只麻雀平分为5份之后发现还多1粒，于是他拿走了多余的一粒以及5份中的一份；第二只麻雀像第一只麻雀一样，从剩下的米中拿走多余一粒，剩下的恰好能分成5份。后面几只麻雀都是这样，请问这里面一共有多少粒米？</p>
</blockquote>
<h3 id="解决方案">解决方案</h3>
<p>java代码</p>
<pre class="line-numbers language-none"><code class="language-none">private static long SIZE &#x3D; 10;
 
private static int mi(long x) &#123;
    int result &#x3D; 0;
    if ((x - 1) % SIZE &#x3D;&#x3D; 0) &#123;
        result &#x3D; 1;
        result +&#x3D; mi((x - 1) - (x - 1) &#x2F; SIZE);
    &#125;
    return result;
&#125;
 
public static void main(String[] argv) &#123;
    long x &#x3D; 0;
    for (;;) &#123;
        if (mi(x) &#x3D;&#x3D; SIZE) &#123;
            System.out.println(x);
            break;
        &#125;
        else &#123;
            x++;
        &#125;
    &#125;
    return 0;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>C代码</p>
<pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;
 
&#x2F;**
 * 假设可以分的米为x，麻雀拿走1粒米，还能分成5份，即(x-1)%5&#x3D;0;
 * 符合上面条件表示成功，记为1；
 * 再拿走自己的部分(x-1)&#x2F;5，把剩余的(x-1) - (x-1)&#x2F;5按照上面的步骤递归;
 * result等于5的时候说明x已经符合条件。
 *&#x2F;
int mi(int x) &#123;
    int result &#x3D; 0;
    if ((x - 1) % 5 &#x3D;&#x3D; 0) &#123;
        result &#x3D; 1;
        result +&#x3D; mi((x-1) - (x-1)&#x2F;5);
    &#125;
    return result;
&#125;
 
int main() &#123;
    int x &#x3D; 0;
    for(;;)&#123;
        if(mi(x) &#x3D;&#x3D; 5)&#123;
            printf(&quot;%d&quot;, x);
            break;
        &#125; else &#123;
            x++;
        &#125;
    &#125;
    return 0;
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>数学问题，找出符合条件的预算符</title>
    <url>/2022/01/04/%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98%EF%BC%8C%E6%89%BE%E5%87%BA%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E9%A2%84%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h3 id="问题">问题</h3>
<p><img src="/2022/01/04/%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98%EF%BC%8C%E6%89%BE%E5%87%BA%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E7%9A%84%E9%A2%84%E7%AE%97%E7%AC%A6/01.png" alt></p>
<h3 id="解决方案">解决方案</h3>
<p>java代码</p>
<pre class="line-numbers language-none"><code class="language-none">import com.anysoft.formula.ExprValue;
import com.anysoft.formula.Expression;
import com.anysoft.formula.Parser;
 
    @Data
    public static class Result &#123;
        private String result;
        private Integer sum;
        public Result(String result, Integer sum) &#123;
            this.result &#x3D; result;
            this.sum &#x3D; sum;
        &#125;
    &#125;
 
    private static Map&lt;Integer, String&gt; map &#x3D; new HashMap&lt;Integer, String&gt;() &#123;&#123;
        put(0, &quot;+&quot;);
        put(1, &quot;-&quot;);
        put(2, &quot;*&quot;);
        put(3, &quot;&#x2F;&quot;);
    &#125;&#125;;
 
    private static List&lt;Result&gt; cacl(List&lt;Integer&gt; item) &#123;
        &#x2F;&#x2F; [+  +  + +]
        &#x2F;&#x2F; [-  +  + +]
        &#x2F;&#x2F; 生成所有可能的运算符
        List&lt;List&lt;Integer&gt;&gt; oper &#x3D; Lists.newArrayList();
        for(int i &#x3D; 0; i &lt; 4; i ++ ) &#123;
            for(int j &#x3D; 0; j &lt; 4; j ++ ) &#123;
                for(int k &#x3D; 0; k &lt; 4; k ++ ) &#123;
                    for(int l &#x3D; 0; l &lt; 4; l ++ ) &#123;
                        oper.add(Lists.newArrayList(i, j, k, l));
                    &#125;
                &#125;
            &#125;
        &#125;
 
        &#x2F;&#x2F; 计算结果
        List&lt;Result&gt; resultList &#x3D; Lists.newArrayList();
        Parser parser &#x3D; new Parser();
        for (List&lt;Integer&gt; o : oper) &#123;
            try &#123;
                int c &#x3D; 0;
                StringBuilder sb &#x3D; new StringBuilder().append(c);
                for(int i &#x3D; 0; i &lt; 4; i ++) &#123;
                    sb.append(map.get(o.get(i))).append(item.get(i + 1));
                &#125;
                Expression expr &#x3D; parser.parse(sb.toString());
                ExprValue value &#x3D; expr.getValue(null);
                c &#x3D; value.getInt();
                sb.append(&quot;&#x3D;&quot;).append(c);
                resultList.add(new Result(sb.toString(), c));
            &#125; catch (Exception e) &#123;
            &#125;
        &#125;
        return resultList;
    &#125;
 
    public static void main(String[] argv) &#123;
        List&lt;List&lt;Integer&gt;&gt; list &#x3D; Lists.newArrayList(
                Lists.newArrayList(6, 8, 3, 2, 7),
                Lists.newArrayList(7, 3, 5, 4, 2),
                Lists.newArrayList(9, 4, 3, 6, 1)
        );
        List&lt;List&lt;Result&gt;&gt; data &#x3D; Lists.newArrayList();
        for (List&lt;Integer&gt; item : list) &#123;
            List&lt;Result&gt; result &#x3D; cacl(item);
            data.add(result);
        &#125;
        List&lt;Result&gt; result1 &#x3D; data.get(0);
        List&lt;Result&gt; result2 &#x3D; data.get(1);
        List&lt;Result&gt; result3 &#x3D; data.get(2);
        List&lt;Integer&gt; repeate &#x3D; Lists.newArrayList();
        for (Result r1 : result1) &#123;
            for (Result r2 : result2) &#123;
                if(r1.getSum().equals(r2.getSum())) &#123;
                    for (Result r3 : result3) &#123;
                        if(r3.getSum().equals(r1.getSum())) &#123;
                            if(!repeate.contains(r3.getSum())) &#123;
                                System.out.println(r1.getResult());
                                System.out.println(r2.getResult());
                                System.out.println(r3.getResult());
                                System.out.println();
                                repeate.add(r3.getSum());
                            &#125;
 
                        &#125;
                    &#125;
                &#125;
            &#125;
        &#125;
    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
